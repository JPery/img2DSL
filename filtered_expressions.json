[{"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/uisleandro/org.eclipse.papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/uisleandro/org.eclipse.papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/uisleandro/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/uisleandro/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentAxisProvidersTypes", "expression": "not (currentRowAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider) and currentColumnAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider))", "file": "ocl-dataset/dataset/repos/uisleandro/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Person", "inv": "mustHaveName", "expression": "Name<>null", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeIsPositive", "expression": "self.Age>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "IDsAreUnique", "expression": "self.subscription-> forAll(c1,c2| c1<>c2 implies c1.ID <> c2.ID)", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeCategory", "expression": "if (Age>=7 and Age<25) then 'Youth' else if (Age > 25) then 'Adult' else 'Child' endif endif", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "CityTicket", "inv": "PricePositive", "expression": "Price>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "MultiJourney", "inv": "NumberOfJourneys", "expression": "NumberOfJourney=10 or NumberOfJourney=5 or NumberOfJourney=15", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "mustHaveName", "expression": "Name<>null", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "Person", "inv": "AgeIsPositive", "expression": "self.Age>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "Person", "inv": "IDsAreUnique", "expression": "self.subscription-> forAll(c1,c2| c1<>c2 implies c1.ID <> c2.ID)", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "Person", "inv": "AgeCategory", "expression": "if (Age>=7 and Age<25) then 'Youth' else if (Age > 25) then 'Adult' else 'Child' endif endif", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "CityTicket", "inv": "PricePositive", "expression": "Price>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "MultiJourney", "inv": "NumberOfJourneys", "expression": "NumberOfJourney=10 or NumberOfJourney=5 or NumberOfJourney=15", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel/model/Ticket.ecore"}, {"context": "Person", "inv": "mustHaveName", "expression": "Name<>null", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeIsPositive", "expression": "self.Age>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "IDsAreUnique", "expression": "self.subscription-> forAll(c1,c2| c1<>c2 implies c1.ID <> c2.ID)", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeCategory", "expression": "if (Age>=7 and Age<25) then 'Youth' else if (Age > 25) then 'Adult' else 'Child' endif endif", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "CityTicket", "inv": "PricePositive", "expression": "Price>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "MultiJourney", "inv": "NumberOfJourneys", "expression": "NumberOfJourney=10 or NumberOfJourney=5 or NumberOfJourney=15", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/src/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "mustHaveName", "expression": "Name<>null", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeIsPositive", "expression": "self.Age>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "IDsAreUnique", "expression": "self.subscription-> forAll(c1,c2| c1<>c2 implies c1.ID <> c2.ID)", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Person", "inv": "AgeCategory", "expression": "if (Age>=7 and Age<25) then 'Youth' else if (Age > 25) then 'Adult' else 'Child' endif endif", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "CityTicket", "inv": "PricePositive", "expression": "Price>0", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "MultiJourney", "inv": "NumberOfJourneys", "expression": "NumberOfJourney=10 or NumberOfJourney=5 or NumberOfJourney=15", "file": "ocl-dataset/dataset/repos/SSGunduz/foo/TicketSystemSerdarSuatGunduz/org.eclipse.example.Ticketmodel.language/bin/org/eclipse/example/Ticketmodel/Ticket.ecore"}, {"context": "Resource", "inv": "UniqueCRUDVerbs", "expression": "self.hasCRUDActivity->isUnique(CRUDVerb)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueInputMediaTypes", "expression": "self.hasInputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueOutputMediaTypes", "expression": "self.hasOutputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueNamingProperty", "expression": "self.hasProperty->notEmpty() implies self.hasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "AlgoResHaveNoProperties", "expression": "(self.isAlgorithmic = true) implies self.hasProperty->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "CRUDResHaveAtLeastOneProperty", "expression": "(self.isAlgorithmic = false) implies self.hasProperty->notEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "RESTfulServiceCIM", "inv": "UniqueResourceNames", "expression": "self.hasResources->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/CIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasSetter->one(setsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasGetter->one(getsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.algoModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerNotAllowedCRUDVerbs", "expression": "self.algoControllerHasCRUDActivity->select(CRUDActivity| CRUDActivity.crudVerb =2 or CRUDActivity.crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerHasUniqueCRUDActivity", "expression": "self.algoControllerHasCRUDActivity->size() = 1", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantSettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasSetter->one(setsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantGettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasGetter->one(getsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "uniqueLinklistProperty", "expression": "self.hasRMManagerProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueNamingProperty", "expression": "self.rModelHasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.rModelHasProperty->one(isPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasSetter->one(setsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasGetter->one(getsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.rModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueCREATEActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 0)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueREADActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 1)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerNotAllowedCRUDActivityVerbs", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 2 or crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerHasUniqueCRUDActivities", "expression": "self.rControllerHasCRUDActivity->isUnique(crudVerb)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerNotAllowedCRUDActivitiyVerbs", "expression": "self.rControllerHasCRUDActivity->select(crudVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "PIMComponentProperty", "inv": "primaryIdentifierMapsToPrimaryKey", "expression": "(self.isPrimaryIdentifier = true) implies (self.isMappedToRDBMSColumn.isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RDBMSTable", "inv": "uniquePrimaryKey", "expression": "self.hasRDBMSColumns->one(isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "controllersHaveUniqueURIs", "expression": "self->isUnique(Bag{self.hasResourceController.controllerURI, self.hasResourceControllerManager.controllerURI, self.hasAlgoResourceController.controllerURI})", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModels", "expression": "self.hasResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModelManagers", "expression": "self.hasResourceModelManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoModels", "expression": "self.hasAlgoResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllers", "expression": "self.hasResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllerManagers", "expression": "self.hasResourceControllerManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoControllers", "expression": "self.hasAlgoResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniquePIMComponentNames", "expression": "self->isUnique(Bag{self.hasResourceModel.name, self.hasResourceController.name, self.hasResourceModelManager.name, self.hasResourceControllerManager, self.hasAlgoResourceModel.name, self.hasAlgoResourceController.name})", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueRModelRDBMSTableMapping", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | rModel1.name <> rModel2.name implies rModel1.isMappedToRDBMSTable.name <> rModel2.isMappedToRDBMSTable.name)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "validDatabaseReferentialIntegrity", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | (rModel1.hasRelatedModelManager.hasRelatedModel = rModel2) implies (self.hasRDBMSTable->forAll(rdbmsTableA, rdbmsTableB | (rModel1.isMappedToRDBMSTable = rdbmsTableA and rModel2.isMappedToRDBMSTable = rdbmsTableB) implies (rModel1.rModelHasProperty->forAll(rModelPropertyA | (rModelPropertyA.isPrimaryIdentifier = true) implies (rdbmsTableB.hasRDBMSColumns->one(isForeignKey = true and name = rModelPropertyA.name and referencesRDBMSTable = rdbmsTableA)))))))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRControllerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceController.rControllerHasCRUDActivity->forAll(rControllerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rControllerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceController->one(rControllerHasCRUDActivity = rControllerCRUDActivityA and hasAssociatedRModel.isMappedToRDBMSTable = rControllerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRCManagerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceControllerManager.rCManagerHasCRUDActivity->forAll(rCManagerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rCManagerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceControllerManager->one(rCManagerHasCRUDActivity = rCManagerCRUDActivityA and hasAssociatedRMManager.hasRelatedModel.isMappedToRDBMSTable = rCManagerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsReadHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PIMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.AlgoControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerHasUniqueProperHTTPActivity", "expression": "( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 3 or HTTPVerb = 2)->isEmpty() and self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->size() = 1 )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) ) ) or ( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaAlgoModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasSetterFunction->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasGetterFunction->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaAlgoModelHasProperty->one(name = 'linklist') and self.JavaAlgoModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerNotAllowedVerb", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerHasMinimumActivity", "expression": "self.JavaRControllerHasHTTPActivity->exists(HTTPVerb <> 0)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1 or HTTPVerb = 2 or HTTPVerb = 3)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 2 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') implies HTTPActivity.ActivityHTTPVerb = 2 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and ( HTTPActivity.ActivityHTTPVerb = 3 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') implies HTTPActivity.ActivityHTTPVerb = 3 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRCManagerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerNotAllowedHTTPActivityVerbs", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 2 or HTTPVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerGetActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsGetHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueNamingProperty", "expression": "self.JavaRModelHasProperty->isUnique(bIsNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "neededRModelHibernateAnnotationsExist", "expression": "self.JavaRModelHasHibernateAnnotation->one('@Entity') and self.JavaRModelHasHibernateAnnotation->one('@Table(name=\"' + self.parentName + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.JavaRModelHasProperty->isUnique(bIsPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaRModelHasProperty->one(name = 'linklist') and self.JavaRModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "properCollectionHibernateAnnotations", "expression": "let JRRModels : Sequence(JavaResourceModel) = self.hasRelatedJavaRMManager.hasRelatedJavaRModel in self.JavaRModelHasProperty->select((bIsUnique = false) and (name <> 'linklist'))->reject( Property | JRRModels->exists(JRRModel | 'SetOf' + JRRModel.name = Property.name)) ->forAll(CollectionProperty | CollectionProperty.PropertyHasHibernateAnnotation->one('@ElementCollection(fetch = FetchType.EAGER)') and CollectionProperty.PropertyHasHibernateAnnotation->one('@CollectionTable(name=\"' + self.parentName + CollectionProperty.name +'\", joinColumns=@JoinColumn(name=\"' + self.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\"))') and CollectionProperty.PropertyHasHibernateAnnotation->one('@ForeignKey(name = \"fk_' + self.parentName + '_' + CollectionProperty.name + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRMManagerHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueLinkListProperty", "expression": "self.JavaRMManagerHasProperty->one(name = 'linklist') and self.JavaRMManagerHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "PSMComponentProperty", "inv": "primaryIdentifierHasProperAnnotations", "expression": "( ( self.bIsPrimaryIdentifier implies ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) ) and ( ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) implies self.bIsPrimaryIdentifier ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "allModelsHaveRResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | JavaRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->forAll(RelatedJavaRModel | JavaRModel.JavaRModelHasProperty->one(name = 'SetOf' + RelatedJavaRModel.name) and JavaRModel.JavaRModelHasProperty->select(name = 'SetOf' + RelatedJavaRModel.name)->forAll(JRModelProperty | JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OneToMany(fetch = FetchType.EAGER, mappedBy=\"' + JavaRModel.parentName + '\",orphanRemoval=true)') and JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OnDelete(action=OnDeleteAction.CASCADE)') ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "allModelsHavePResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | self.hasJavaRModel->select(ParentJRModel | ParentJRModel.hasRelatedJavaRMManager->exists(JRMManager | JRMManager.hasRelatedJavaRModel = JavaRModel)) ->forAll(ParentJRModel | JavaRModel.JavaRModelHasProperty->one(name = ParentJRModel.parentName) and JavaRModel.JavaRModelHasProperty->forAll( Property | ( (Property.name = ParentJRModel.parentName) implies ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) ) and ( ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) implies (Property.name = ParentJRModel.parentName) ) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rMPropertiesSettersHaveProperXMLTransientAnnotation", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasSetter->select(SetterFunction | ( JRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JRRModel | SetterFunction.name = 'setSetOf' + JRRModel.name) ) or ( AllResourceModels->select(hasRelatedJavaRMManager->exists(hasRelatedJavaRModel = JRModel)) ->exists(ParentJRModel | SetterFunction.name = 'set' + ParentJRModel.parentName) ) )->forAll(SetterFunction | SetterFunction.SetterFunctionHasJAXBAnnotation->one('@XmlTransient')) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rMPropertiesHaveColumnAnnotation", "expression": "self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasProperty->reject(Property | (Property.name = 'linklist') or (JRModel.hasRelatedJavaRMManager->exists(JRRModel | Property.name = 'SetOf' + JRRModel.name)) or (self.hasJavaRModel->select(JPRModel | JPRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JPRModel | JPRModel = JRModel))->exists(JPRModel | Property.name = JPRModel.parentName)) )->forAll(Property | Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@Column(name = \"' + Property.name + '\")')) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "RControllerUniqueHTTPVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRController->forAll(JRController | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel.hasRelatedJavaRMManager->exists(JRMManager | JRController.hasAssociatedJavaRModel = JRMManager.hasRelatedJavaRModel))->size() in JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 2)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 3)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "RCManagerHasUniqueHTTPActivityVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRCManager->forAll(JRCManager | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel->exists(hasRelatedJavaRMManager = JRCManager))->size() in JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->isUnique(name) and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerDeleteActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerDeleteActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerGetAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "rControllerPutAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "algoControllerAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "algoControllerAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "RESTfulServicePSM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/doc/ecore-meta-models/PSMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueCRUDVerbs", "expression": "self.hasCRUDActivity->isUnique(CRUDVerb)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueInputMediaTypes", "expression": "self.hasInputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueOutputMediaTypes", "expression": "self.hasOutputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueNamingProperty", "expression": "self.hasProperty->notEmpty() implies self.hasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "AlgoResHaveNoProperties", "expression": "(self.isAlgorithmic = true) implies self.hasProperty->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "CRUDResHaveAtLeastOneProperty", "expression": "(self.isAlgorithmic = false) implies self.hasProperty->notEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "RESTfulServiceCIM", "inv": "UniqueResourceNames", "expression": "self.hasResources->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasSetter->one(setsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasGetter->one(getsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.algoModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerNotAllowedCRUDVerbs", "expression": "self.algoControllerHasCRUDActivity->select(CRUDActivity| CRUDActivity.crudVerb =2 or CRUDActivity.crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerHasUniqueCRUDActivity", "expression": "self.algoControllerHasCRUDActivity->size() = 1", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantSettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasSetter->one(setsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantGettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasGetter->one(getsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "uniqueLinklistProperty", "expression": "self.hasRMManagerProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueNamingProperty", "expression": "self.rModelHasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.rModelHasProperty->one(isPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasSetter->one(setsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasGetter->one(getsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.rModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueCREATEActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 0)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueREADActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 1)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerNotAllowedCRUDActivityVerbs", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 2 or crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerHasUniqueCRUDActivities", "expression": "self.rControllerHasCRUDActivity->isUnique(crudVerb)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerNotAllowedCRUDActivitiyVerbs", "expression": "self.rControllerHasCRUDActivity->select(crudVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "PIMComponentProperty", "inv": "primaryIdentifierMapsToPrimaryKey", "expression": "(self.isPrimaryIdentifier = true) implies (self.isMappedToRDBMSColumn.isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RDBMSTable", "inv": "uniquePrimaryKey", "expression": "self.hasRDBMSColumns->one(isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "controllersHaveUniqueURIs", "expression": "self->isUnique(Bag{self.hasResourceController.controllerURI, self.hasResourceControllerManager.controllerURI, self.hasAlgoResourceController.controllerURI})", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModels", "expression": "self.hasResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModelManagers", "expression": "self.hasResourceModelManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoModels", "expression": "self.hasAlgoResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllers", "expression": "self.hasResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllerManagers", "expression": "self.hasResourceControllerManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoControllers", "expression": "self.hasAlgoResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniquePIMComponentNames", "expression": "self->isUnique(Bag{self.hasResourceModel.name, self.hasResourceController.name, self.hasResourceModelManager.name, self.hasResourceControllerManager, self.hasAlgoResourceModel.name, self.hasAlgoResourceController.name})", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueRModelRDBMSTableMapping", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | rModel1.name <> rModel2.name implies rModel1.isMappedToRDBMSTable.name <> rModel2.isMappedToRDBMSTable.name)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "validDatabaseReferentialIntegrity", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | (rModel1.hasRelatedModelManager.hasRelatedModel = rModel2) implies (self.hasRDBMSTable->forAll(rdbmsTableA, rdbmsTableB | (rModel1.isMappedToRDBMSTable = rdbmsTableA and rModel2.isMappedToRDBMSTable = rdbmsTableB) implies (rModel1.rModelHasProperty->forAll(rModelPropertyA | (rModelPropertyA.isPrimaryIdentifier = true) implies (rdbmsTableB.hasRDBMSColumns->one(isForeignKey = true and name = rModelPropertyA.name and referencesRDBMSTable = rdbmsTableA)))))))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRControllerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceController.rControllerHasCRUDActivity->forAll(rControllerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rControllerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceController->one(rControllerHasCRUDActivity = rControllerCRUDActivityA and hasAssociatedRModel.isMappedToRDBMSTable = rControllerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRCManagerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceControllerManager.rCManagerHasCRUDActivity->forAll(rCManagerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rCManagerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceControllerManager->one(rCManagerHasCRUDActivity = rCManagerCRUDActivityA and hasAssociatedRMManager.hasRelatedModel.isMappedToRDBMSTable = rCManagerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsReadHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.AlgoControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerHasUniqueProperHTTPActivity", "expression": "( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 3 or HTTPVerb = 2)->isEmpty() and self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->size() = 1 )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) ) ) or ( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaAlgoModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasSetterFunction->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasGetterFunction->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaAlgoModelHasProperty->one(name = 'linklist') and self.JavaAlgoModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerNotAllowedVerb", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerHasMinimumActivity", "expression": "self.JavaRControllerHasHTTPActivity->exists(HTTPVerb <> 0)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1 or HTTPVerb = 2 or HTTPVerb = 3)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 2 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') implies HTTPActivity.ActivityHTTPVerb = 2 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and ( HTTPActivity.ActivityHTTPVerb = 3 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') implies HTTPActivity.ActivityHTTPVerb = 3 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRCManagerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerNotAllowedHTTPActivityVerbs", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 2 or HTTPVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerGetActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsGetHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueNamingProperty", "expression": "self.JavaRModelHasProperty->isUnique(bIsNamingProperty = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "neededRModelHibernateAnnotationsExist", "expression": "self.JavaRModelHasHibernateAnnotation->one('@Entity') and self.JavaRModelHasHibernateAnnotation->one('@Table(name=\"' + self.parentName + '\")')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.JavaRModelHasProperty->isUnique(bIsPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaRModelHasProperty->one(name = 'linklist') and self.JavaRModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "properCollectionHibernateAnnotations", "expression": "let JRRModels : Sequence(JavaResourceModel) = self.hasRelatedJavaRMManager.hasRelatedJavaRModel in self.JavaRModelHasProperty->select((bIsUnique = false) and (name <> 'linklist'))->reject( Property | JRRModels->exists(JRRModel | 'SetOf' + JRRModel.name = Property.name)) ->forAll(CollectionProperty | CollectionProperty.PropertyHasHibernateAnnotation->one('@ElementCollection(fetch = FetchType.EAGER)') and CollectionProperty.PropertyHasHibernateAnnotation->one('@CollectionTable(name=\"' + self.parentName + CollectionProperty.name +'\", joinColumns=@JoinColumn(name=\"' + self.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\"))') and CollectionProperty.PropertyHasHibernateAnnotation->one('@ForeignKey(name = \"fk_' + self.parentName + '_' + CollectionProperty.name + '\")') )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRMManagerHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueLinkListProperty", "expression": "self.JavaRMManagerHasProperty->one(name = 'linklist') and self.JavaRMManagerHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "PSMComponentProperty", "inv": "primaryIdentifierHasProperAnnotations", "expression": "( ( self.bIsPrimaryIdentifier implies ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) ) and ( ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) implies self.bIsPrimaryIdentifier ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "allModelsHaveRResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | JavaRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->forAll(RelatedJavaRModel | JavaRModel.JavaRModelHasProperty->one(name = 'SetOf' + RelatedJavaRModel.name) and JavaRModel.JavaRModelHasProperty->select(name = 'SetOf' + RelatedJavaRModel.name)->forAll(JRModelProperty | JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OneToMany(fetch = FetchType.EAGER, mappedBy=\"' + JavaRModel.parentName + '\",orphanRemoval=true)') and JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OnDelete(action=OnDeleteAction.CASCADE)') ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "allModelsHavePResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | self.hasJavaRModel->select(ParentJRModel | ParentJRModel.hasRelatedJavaRMManager->exists(JRMManager | JRMManager.hasRelatedJavaRModel = JavaRModel)) ->forAll(ParentJRModel | JavaRModel.JavaRModelHasProperty->one(name = ParentJRModel.parentName) and JavaRModel.JavaRModelHasProperty->forAll( Property | ( (Property.name = ParentJRModel.parentName) implies ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) ) and ( ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) implies (Property.name = ParentJRModel.parentName) ) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rMPropertiesSettersHaveProperXMLTransientAnnotation", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasSetter->select(SetterFunction | ( JRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JRRModel | SetterFunction.name = 'setSetOf' + JRRModel.name) ) or ( AllResourceModels->select(hasRelatedJavaRMManager->exists(hasRelatedJavaRModel = JRModel)) ->exists(ParentJRModel | SetterFunction.name = 'set' + ParentJRModel.parentName) ) )->forAll(SetterFunction | SetterFunction.SetterFunctionHasJAXBAnnotation->one('@XmlTransient')) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rMPropertiesHaveColumnAnnotation", "expression": "self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasProperty->reject(Property | (Property.name = 'linklist') or (JRModel.hasRelatedJavaRMManager->exists(JRRModel | Property.name = 'SetOf' + JRRModel.name)) or (self.hasJavaRModel->select(JPRModel | JPRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JPRModel | JPRModel = JRModel))->exists(JPRModel | Property.name = JPRModel.parentName)) )->forAll(Property | Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@Column(name = \"' + Property.name + '\")')) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "RControllerUniqueHTTPVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRController->forAll(JRController | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel.hasRelatedJavaRMManager->exists(JRMManager | JRController.hasAssociatedJavaRModel = JRMManager.hasRelatedJavaRModel))->size() in JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 2)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 3)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "RCManagerHasUniqueHTTPActivityVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRCManager->forAll(JRCManager | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel->exists(hasRelatedJavaRMManager = JRCManager))->size() in JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->isUnique(name) and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerDeleteActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerDeleteActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/s-case/mde/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/nemo-ufes/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/nemo-ufes/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "BehaviorMix", "inv": "mustBeValidFrequencySum", "expression": "relativeFrequencies.value->sum() = 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorMix", "inv": "mustBeUniqueBehaviorModels", "expression": "relativeFrequencies->forAll(f1,f2| (f1 <> f2 and not(f1.behaviorModel.oclIsUndefined() or f2.behaviorModel.oclIsUndefined())) implies f1.behaviorModel <> f2.behaviorModel)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "RelativeFrequency", "inv": "mustBeValidFrequency", "expression": "value >= 0.0 and value <= 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeUniqueNames", "expression": "BehaviorModel.allInstances()->forAll(b1,b2| (b1 <> b2 and not(b1.name.oclIsUndefined() or b2.name.oclIsUndefined())) implies b1.name <> b2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeUniqueFilenames", "expression": "BehaviorModel.allInstances()->forAll(b1,b2 | (b1 <> b2 and not(b1.filename.oclIsUndefined() or b2.filename.oclIsUndefined())) implies b1.filename <> b2.filename)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeBehaviorModelWithMarkovStatesForAllServices", "expression": "Service.allInstances()-> forAll(s|markovStates->exists(m|m.service = s))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeInitialStateWhichIsIncludedInMarkovStatesList", "expression": "not initialState.oclIsUndefined() implies markovStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeBehaviorModelWithoutForeignTargetStates", "expression": "markovStates->forAll(s| s.outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies (markovStates->includes(t.targetState) or t.targetState = exitState)))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeMarkovStatesWithUniqueServices", "expression": "markovStates->forAll(s1,s2| (s1 <> s2 and not(s1.service.oclIsUndefined() or s2.service.oclIsUndefined())) implies s1.service <> s2.service )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Transition", "inv": "mustBeValidProbability", "expression": "probability >= 0.0 and probability <= 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Transition", "inv": "mustBeThinkTimesOfSameType", "expression": "Transition.allInstances()-> forAll(t1,t2| not (t1.thinkTime.oclIsUndefined() or t2.thinkTime.oclIsUndefined()) implies t1.thinkTime.oclType() = t2.thinkTime.oclType() )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeValidProbabilitySum", "expression": "outgoingTransitions.probability->exists(p | p > 0) implies outgoingTransitions.probability->sum() = 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeOutgoingTransitionsWithUniqueTargetStates", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies t1.targetState <> t2.targetState )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeOutgoingTransitionsCorrespondingToSessionLayer", "expression": "not service.oclIsUndefined() implies ApplicationState.allInstances()->exists(as|service = as.service and outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies as.outgoingTransitions->exists(at| (at.targetState.oclIsTypeOf(ApplicationExitState) and t.targetState.oclIsTypeOf(BehaviorModelExitState)) or ((t.targetState.oclIsTypeOf(MarkovState) and at.targetState.oclIsTypeOf(ApplicationState) and at.targetState.oclAsType(ApplicationState).service = t.targetState.oclAsType(MarkovState).service)))))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Service", "inv": "mustBeUniqueNames", "expression": "Service.allInstances()-> forAll(s1,s2| (s1 <> s2 and not(s1.name.oclIsUndefined() or s2.name.oclIsUndefined())) implies s1.name <> s2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ApplicationState", "inv": "mustBeUniqueOutgoingTransitions", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies (t1.targetState <> t2.targetState or t1.guard <> t2.guard))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeUniquePropertyKeys", "expression": "properties->forAll(p1,p2 | (p1 <> p2 and not(p1.key.oclIsUndefined() or p2.key.oclIsUndefined())) implies p1.key <> p2.key )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeUniqueParameterNames", "expression": "parameters->forAll(p1,p2 | (p1 <> p2 and not(p1.name.oclIsUndefined() or p2.name.oclIsUndefined())) implies p1.name <> p2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeRequestsOfSameType", "expression": "Request.allInstances()->forAll(r1,r2 | r1.oclType() = r2.oclType())", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ProtocolState", "inv": "mustBeUniqueOutgoingTransitions", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies (t1.targetState <> t2.targetState or t1.guard <> t2.guard))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeProtocolStatesWithUniqueRequests", "expression": "protocolStates->forAll(s1,s2| (s1 <> s2 and not(s1.request.oclIsUndefined() or s2.request.oclIsUndefined())) implies s1.request <> s2.request )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeInitialStateWhichIsIncludedInProtocolStatesList", "expression": "not initialState.oclIsUndefined() implies protocolStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeProtocolLayerEFSMWithoutForeignStates", "expression": "protocolStates->forAll(s| s.outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies (protocolStates->includes(t.targetState) or t.targetState = exitState)))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "SessionLayerEFSM", "inv": "mustBeApplicationStatesWithUniqueServices", "expression": "applicationStates->forAll(s1,s2| (s1 <> s2 and not(s1.service.oclIsUndefined() or s2.service.oclIsUndefined())) implies s1.service <> s2.service )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "SessionLayerEFSM", "inv": "mustBeInitialStateWhichIsIncludedInApplicationStatesList", "expression": "not initialState.oclIsUndefined() implies applicationStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "ConstantWorkloadIntensity", "inv": "mustBeNonnegativeSessionNumber", "expression": "numberOfSessions >= 0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "NormallyDistributedThinkTime", "inv": "mustBeValidThinkTimeValues", "expression": "mean >= 0.0 and deviation >= 0.0 and deviation <= mean", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/model/m4jdsl.ecore"}, {"context": "BehaviorMix", "inv": "mustBeValidFrequencySum", "expression": "relativeFrequencies.value->sum() = 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorMix", "inv": "mustBeUniqueBehaviorModels", "expression": "relativeFrequencies->forAll(f1,f2| (f1 <> f2 and not(f1.behaviorModel.oclIsUndefined() or f2.behaviorModel.oclIsUndefined())) implies f1.behaviorModel <> f2.behaviorModel)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "RelativeFrequency", "inv": "mustBeValidFrequency", "expression": "value >= 0.0 and value <= 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeUniqueNames", "expression": "BehaviorModel.allInstances()->forAll(b1,b2| (b1 <> b2 and not(b1.name.oclIsUndefined() or b2.name.oclIsUndefined())) implies b1.name <> b2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeUniqueFilenames", "expression": "BehaviorModel.allInstances()->forAll(b1,b2 | (b1 <> b2 and not(b1.filename.oclIsUndefined() or b2.filename.oclIsUndefined())) implies b1.filename <> b2.filename)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeBehaviorModelWithMarkovStatesForAllServices", "expression": "Service.allInstances()-> forAll(s|markovStates->exists(m|m.service = s))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeInitialStateWhichIsIncludedInMarkovStatesList", "expression": "not initialState.oclIsUndefined() implies markovStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "BehaviorModel", "inv": "mustBeBehaviorModelWithoutForeignTargetStates", "expression": "markovStates->forAll(s| s.outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies (markovStates->includes(t.targetState) or t.targetState = exitState)))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Transition", "inv": "mustBeValidProbability", "expression": "probability >= 0.0 and probability <= 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Transition", "inv": "mustBeThinkTimesOfSameType", "expression": "Transition.allInstances()-> forAll(t1,t2| not (t1.thinkTime.oclIsUndefined() or t2.thinkTime.oclIsUndefined()) implies t1.thinkTime.oclType() = t2.thinkTime.oclType() )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeValidProbabilitySum", "expression": "outgoingTransitions.probability->sum() = 1.0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeMarkovStatesWithUniqueServices", "expression": "MarkovState.allInstances()-> forAll(s1,s2| (s1 <> s2 and not(s1.service.oclIsUndefined() or s2.service.oclIsUndefined())) implies s1.service <> s2.service )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeOutgoingTransitionsWithUniqueTargetStates", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies t1.targetState <> t2.targetState )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "MarkovState", "inv": "mustBeOutgoingTransitionsCorrespondingToSessionLayer", "expression": "not service.oclIsUndefined() implies ApplicationState.allInstances()->exists(as|service = as.service and outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies as.outgoingTransitions->exists(at| (at.targetState.oclIsTypeOf(ApplicationExitState) and t.targetState.oclIsTypeOf(BehaviorModelExitState)) or ((t.targetState.oclIsTypeOf(MarkovState) and at.targetState.oclIsTypeOf(ApplicationState) and at.targetState.oclAsType(ApplicationState).service = t.targetState.oclAsType(MarkovState).service)))))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Service", "inv": "mustBeUniqueNames", "expression": "Service.allInstances()-> forAll(s1,s2| (s1 <> s2 and not(s1.name.oclIsUndefined() or s2.name.oclIsUndefined())) implies s1.name <> s2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ApplicationState", "inv": "mustBeUniqueOutgoingTransitions", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies (t1.targetState <> t2.targetState or t1.guard <> t2.guard))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeUniquePropertyKeys", "expression": "properties->forAll(p1,p2 | (p1 <> p2 and not(p1.key.oclIsUndefined() or p2.key.oclIsUndefined())) implies p1.key <> p2.key )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeUniqueParameterNames", "expression": "parameters->forAll(p1,p2 | (p1 <> p2 and not(p1.name.oclIsUndefined() or p2.name.oclIsUndefined())) implies p1.name <> p2.name )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Request", "inv": "mustBeRequestsOfSameType", "expression": "Request.allInstances()->forAll(r1,r2 | r1.oclType() = r2.oclType())", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ProtocolState", "inv": "mustBeUniqueOutgoingTransitions", "expression": "outgoingTransitions-> forAll(t1,t2| (t1 <> t2 and not(t1.targetState.oclIsUndefined() or t2.targetState.oclIsUndefined())) implies (t1.targetState <> t2.targetState or t1.guard <> t2.guard))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeProtocolStatesWithUniqueRequests", "expression": "protocolStates->forAll(s1,s2| (s1 <> s2 and not(s1.request.oclIsUndefined() or s2.request.oclIsUndefined())) implies s1.request <> s2.request )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeInitialStateWhichIsIncludedInProtocolStatesList", "expression": "not initialState.oclIsUndefined() implies protocolStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ProtocolLayerEFSM", "inv": "mustBeProtocolLayerEFSMWithoutForeignStates", "expression": "protocolStates->forAll(s| s.outgoingTransitions->forAll(t| not t.targetState.oclIsUndefined() implies (protocolStates->includes(t.targetState) or t.targetState = exitState)))", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "SessionLayerEFSM", "inv": "mustBeApplicationStatesWithUniqueServices", "expression": "applicationStates->forAll(s1,s2| (s1 <> s2 and not(s1.service.oclIsUndefined() or s2.service.oclIsUndefined())) implies s1.service <> s2.service )", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "SessionLayerEFSM", "inv": "mustBeInitialStateWhichIsIncludedInApplicationStatesList", "expression": "not initialState.oclIsUndefined() implies applicationStates->includes(initialState)", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "ConstantWorkloadIntensity", "inv": "mustBeNonnegativeSessionNumber", "expression": "numberOfSessions >= 0", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "NormallyDistributedThinkTime", "inv": "mustBeValidThinkTimeValues", "expression": "mean >= 0.0 and deviation >= 0.0 and deviation <= mean", "file": "ocl-dataset/dataset/repos/Wessbas/wessbas.dsl/examples/m4jdsl.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "FirstLetterOFClassNameIsUpperCase", "expression": "self.name.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "Class", "inv": "NoSelfInheritance", "expression": "self.superType <> self.name", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "Class", "inv": "ClassNameIsUnique", "expression": "Class.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "Class", "inv": "PropertyIdIsMandetoryOneToOne", "expression": "self.id.multiplicityLowerBound = 1 and self.id.multiplicityUpperBound = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "AssociationEnd", "inv": "MultiplicityOfAssociatioEndPropertyIsValid", "expression": "self.multiplicityLowerBound >= 0 and (self.multiplicityUpperBound >= multiplicityLowerBound or self.multiplicityUpperBound = -1)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeViewGroupIsValid", "expression": "ViewGroup.allInstances() -> select(w | w.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreSame", "expression": "self.compositeConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/DVML12/model/DVML.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/cproinger/mdse_ws2015/Lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "State", "inv": "IfProbableThenSum1", "expression": "transitions -> select(t | not t.probability.oclIsUndefined()) -> size() = 0 or transitions -> select(t | not t.probability.oclIsUndefined()) -> collect(probability) -> sum() = 1.0", "file": "ocl-dataset/dataset/repos/cproinger/ame_ss2016/ContextAwareModeling/contextawaremodeling/model/ManagerModel.ecore"}, {"context": "Transition", "inv": "EitherRateOrProbability", "expression": "rate.oclIsUndefined() xor probability.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/ame_ss2016/ContextAwareModeling/contextawaremodeling/model/ManagerModel.ecore"}, {"context": "Manager", "inv": "DuplicateTransition", "expression": "ManagerTransition.allInstances()->forAll(t1 : ManagerTransition, t2 : ManagerTransition | t1 <> t2 implies t1.target <> t2.target or t1.source <> t2.source)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "ManagerStateNameUnique", "expression": "ManagerState.allInstances()->forAll(m1 : ManagerState, m2 : ManagerState | m1 <> m2 implies m1.name <> m2.name)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "ManagedElementNameUnique", "expression": "ManagedElement.allInstances()->forAll(m1 : ManagedElement, m2 : ManagedElement | m1 <> m2 implies m1.name <> m2.name)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "InitialStateNoFinalState", "expression": "finalState->forAll(s : ManagerState | s <> initialState)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "FinalStatesNoOutgoingTransitions", "expression": "finalState->forAll(s : ManagerState | s.outgoingTransition->size() = 0)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "ManagerTransitionNameUnique", "expression": "ManagerTransition.allInstances()->forAll(m1 : ManagerTransition, m2 : ManagerTransition | m1 <> m2 implies m1.name <> m2.name)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "finalStateMustHaveIncomingTransition", "expression": "finalState->forAll(s : ManagerState | s.incomingTransition->size() > 0)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "InitialStateMustBeStart", "expression": "initialState.isStart and not initialState.isEnd", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "ManagerParameterNameUnique", "expression": "ManagerParameter.allInstances()->forAll(m1 : ManagerParameter, m2 : ManagerParameter | m1 <> m2 implies m1.name <> m2.name)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Manager", "inv": "FinalStateMustBeEnd", "expression": "finalState->forAll(s : ManagerState | s.isEnd and not s.isStart)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "EndStateNofinalState", "expression": "if isEnd then owningManager.finalState->includes(self) else true endif", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "UndefinedTransitions", "expression": "if not owningManager.initialState.oclAsSet()->includes(self) and not owningManager.finalState->includes(self) then outgoingTransition->size() > 0 and incomingTransition->size() > 0 else true endif", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "InitialStateNoFinalState", "expression": "not (isStart and isEnd)", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "StartStateNoInitialState", "expression": "if isStart then owningManager.initialState.oclAsSet()->includes(self) else true endif", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "OutgoingTransitionsProbabilitySumMustBe1", "expression": "if not owningManager.finalState->includes(self) then outgoingTransition->collect(transProb)->iterate(p : Real ; res : Real = 0 | res + p) = 1.0 else true endif", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerState", "inv": "ManagerStateNameUndefined", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerTransition", "inv": "TransProbMax1", "expression": "transProb <= 1.0 and not transProb.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerTransition", "inv": "ManagerTransitionUndefinedName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagerParameter", "inv": "ManagerParameterUndefinedName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "ManagedElement", "inv": "ManagedElementUndefinedName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cproinger/context-manager/mngr/model/mngr.ecore"}, {"context": "Arc", "inv": "sourceTypeDiffTarget", "expression": "self.source.oclType() <> self.target.oclType()", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/PetriNet.ecore"}, {"context": "Arc", "inv": "positive", "expression": "self.poids > 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/PetriNet.ecore"}, {"context": "Place", "inv": "positive", "expression": "self.nbJetons >= 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/PetriNet.ecore"}, {"context": "Process", "inv": "nameForbidden", "expression": "name <> 'Process'", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "Process", "inv": "differentNames", "expression": "self.processElements -> select(pe|pe.oclIsTypeOf(WorkDefinition)) -> collect(pe|pe.oclAsType(WorkDefinition)) -> forAll(a,b|a <> b implies a.name <> b.name)", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "nameNotEmpty", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "notReflexive", "expression": "self.predecessor <> self.successor", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "Ressource", "inv": "nameNotEmpty", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "Ressource", "inv": "quantityPositive", "expression": "self.quantity > 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "RessourceSequence", "inv": "quantityPositive", "expression": "self.quantity > 0", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "RessourceSequence", "inv": "quantityAvailable", "expression": "self.quantity <= self.ressource.quantity", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/BE/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/tp3/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/thibmeu/enseeiht/2IMA/GenieLogicielEtDesSystemes/tp3/SimplePDL.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/juancadavid/papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/juancadavid/papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/juancadavid/papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/juancadavid/papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentAxisProvidersTypes", "expression": "not (currentRowAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider) and currentColumnAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider))", "file": "ocl-dataset/dataset/repos/juancadavid/papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "SimpleBPMN", "inv": "NumberOfStartNode", "expression": "self.StartNodes->select(m : SimpleBPMN | m.oclIsTypeOf(Start))->size() < 2", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "SimpleBPMN", "inv": "NumberOfEndNode", "expression": "self.EndNodes->select(m : SimpleBPMN | m.oclIsTypeOf(End))->size() < 2", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "NormalF", "inv": "NoLoopsFromNormalFlow", "expression": "self.from <> self.to", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "ConditionalIN", "inv": "ConditionalINnorvoid", "expression": "self.cond.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "ConditionalINOUT", "inv": "ConditionalINOUTnorvoid", "expression": "self.cond.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "Interval", "inv": "IntervalPositive", "expression": "self.name.size() >= 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "Descripcion", "inv": "PDescriptionNOTvoid", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "ParticipantETSK", "inv": "ParticipantETSKNOTvoid", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "datainETSK", "inv": "DatainETSKNOTvoid", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "dataoutETSK", "inv": "dataoutETSKNOTvoid", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "DateETSK", "inv": "DateETSKNOTvoid", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/aliriorivera/BPMNGraphicEditor/Third/model/Third.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/moliz/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans ->select(book = self)->size() <= copies", "file": "ocl-dataset/dataset/repos/moliz/moliz.quantitytypes/plugins/org.modelexecution.quantitytypes.oclinecore/Tutorial.ecore"}, {"context": "View", "inv": "nonNegativePosition", "expression": "pos.x >= 0 and pos.y >= 0", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "View", "inv": "uniqueID", "expression": "View.allInstances()->select(v:View|v.ID=self.ID)->size() = 1", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "Grid", "inv": "properChildrenCount", "expression": "children->size() = (cols * rows)", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "Select", "inv": "defaultInRange", "expression": "(options->size() = 0) or (options->includes(default))", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "Slider", "inv": "defaultInRange", "expression": "(self.default >= 0) and (self.default <= self.max)", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "Slider", "inv": "maxIsBigger", "expression": "max > 0", "file": "ocl-dataset/dataset/repos/glovas/psd-ui-generator/hu.bme.mit.mobilgen.psdprocessor.model/model/PSDStructure.ecore"}, {"context": "Place", "inv": "NbJetonsPositives", "expression": "self.jetons >= 0", "file": "ocl-dataset/dataset/repos/sligoo/ProjetGLS/fr.enseeiht.Game.m2m.petrinet/PetriNet.ecore"}, {"context": "Element", "inv": "nomNotEmpty", "expression": "self.nom.size() > 0", "file": "ocl-dataset/dataset/repos/sligoo/ProjetGLS/fr.enseeiht.Game.m2m.petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "NbJetonsPositives", "expression": "self.nbJetons >= 0", "file": "ocl-dataset/dataset/repos/sligoo/ProjetGLS/fr.enseeiht.Game.m2m.petrinet/PetriNet.ecore"}, {"context": "Reseau", "inv": "AtLeastOneJeton", "expression": "Place.allInstances()->exists(jetons > 0)", "file": "ocl-dataset/dataset/repos/sligoo/ProjetGLS/fr.enseeiht.Game.m2m.petrinet/PetriNet.ecore"}, {"context": "Place", "inv": "matchRates", "expression": "if byteSize > 0 then byteSize >= itsOutputPort.byteRate and byteSize >= itsInputPort.byteRate else true endif", "file": "ocl-dataset/dataset/repos/gemoc/gemoc-studio/official_samples/SigPML/language_workbench/org.gemoc.sample.sigpml.xsigpml/model/XSigPML.ecore"}, {"context": "Place", "inv": "matchRates", "expression": "if byteSize > 0 then byteSize >= itsOutputPort.byteRate and byteSize >= itsInputPort.byteRate else true endif", "file": "ocl-dataset/dataset/repos/gemoc/gemoc-studio/official_samples/SigPML/language_workbench/org.gemoc.sample.sigpml.model/model/sigpml.ecore"}, {"context": "Place", "inv": "matchRates", "expression": "if byteSize > 0 then byteSize >= itsOutputPort.byteRate and byteSize >= itsInputPort.byteRate else true endif", "file": "ocl-dataset/dataset/repos/gemoc/gemoc-studio/official_samples/SigPML/language_workbench/org.gemoc.sample.sigpml/model-gen/XSigPMLMT.ecore"}, {"context": "FiniteStateMachine", "inv": "uniqueStateNames", "expression": "self.states->forAll(s1, s2| s1 <> s2 implies s1.name <> s2.name)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.model/model/fsm.ecore"}, {"context": "State", "inv": "uniqueStateNameInFSM", "expression": "self.oclContainer.oclAsType(FiniteStateMachine).states ->forAll(s1| s1 <> self implies s1.name <> self.name)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.model/model/fsm.ecore"}, {"context": "Transition", "inv": "deterministicTransition", "expression": "self.oclContainer.oclAsType(State).outgoingTransitions ->forAll(t| t <> self implies t.input <> self.input)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.model/model/fsm.ecore"}, {"context": "FiniteStateMachine", "inv": "uniqueStateNames", "expression": "self.states->forAll(s1, s2| s1 <> s2 implies s1.name <> s2.name)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.xfsm/model/XFSM.ecore"}, {"context": "State", "inv": "uniqueStateNameInFSM", "expression": "self.oclContainer.oclAsType(FiniteStateMachine).states ->forAll(s1| s1 <> self implies s1.name <> self.name)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.xfsm/model/XFSM.ecore"}, {"context": "Transition", "inv": "deterministicTransition", "expression": "self.oclContainer.oclAsType(State).outgoingTransitions ->forAll(t| t <> self implies t.input <> self.input)", "file": "ocl-dataset/dataset/repos/gemoc/ModelingCrashCourse/material/fsm/org.gemoc.course.fsm.xfsm/model/XFSM.ecore"}, {"context": "Symbole", "inv": "diffSymbole", "expression": "Symbole.allInstances() -> forAll(s1, s2 | s1 <> s2 implies s1.caractere <> s2.caractere)", "file": "ocl-dataset/dataset/repos/M2TiiLEnvDev/TuringProject/model/projetTuring.ecore"}, {"context": "Etat", "inv": "diffEtat", "expression": "Etat.allInstances() -> forAll(s1, s2 | s1 <> s2 implies s1.nom <> s2.nom)", "file": "ocl-dataset/dataset/repos/M2TiiLEnvDev/TuringProject/model/projetTuring.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/OldAGTExp/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/OldAGTExp/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/OldAGTExp/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/OldAGTExp/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/OldAGTExp/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/TestNGC/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/TestNGC/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/TestNGC/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/TestNGC/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/TestNGC/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/NonInjectiveInPatterns/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/NonInjectiveInPatterns/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/NonInjectiveInPatterns/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/NonInjectiveInPatterns/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/NonInjectiveInPatterns/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG1/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG1/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG1/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG1/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleCMG1/InputMM/systemmodel.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/OutputMM/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/OutputMM/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/OutputMM/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/OutputMM/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/OutputMM/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/ER2REL/InputMM/ER.ecore"}, {"context": "Signal", "inv": "SrcAndDstInSameSubSystem", "expression": "srcPort.parentBlock.parentBlock = dstPort.parentBlock.parentBlock and dstPort.parentBlock.parentBlock = self.parentBlock", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleTransfoForPost2Pre/InputMM/systemmodel.ecore"}, {"context": "Signal", "inv": "SrcAndDstSameDataType", "expression": "srcPort.dataType.baseType = dstPort.dataType.baseType and srcPort.dataType.dimensions = dstPort.dataType.dimensions", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleTransfoForPost2Pre/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock", "expression": "not sourceBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleTransfoForPost2Pre/InputMM/systemmodel.ecore"}, {"context": "Inport", "inv": "InSystemBlock$message", "expression": "'Inport ' + name + 'has sourceBlock '", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleTransfoForPost2Pre/InputMM/systemmodel.ecore"}, {"context": "Outport", "inv": "InSystemBlock", "expression": "not sinkBlock.oclIsUndefined() = parentBlock.oclIsKindOf(SystemBlock)", "file": "ocl-dataset/dataset/repos/eliericha/atlanalyser/fr.tpt.atlanalyser.examples/examples/SimpleTransfoForPost2Pre/InputMM/systemmodel.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/ModelWriter/WP3/Source/eu.modelwriter.core.alloyinecore/src/test/resources/AlloyInECore/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/ModelWriter/WP3/Source/eu.modelwriter.core.alloyinecore/src/test/resources/AlloyInECore/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/ModelWriter/WP3/Source/eu.modelwriter.core.alloyinecore/src/test/resources/AlloyInECore/Tutorial.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/ModelWriter/Demonstrations/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/ModelWriter/Demonstrations/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/ModelWriter/Demonstrations/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Clafer", "inv": "AllClafersIntheSameLevelMustHaveUniqueNames", "expression": "self.cElements->isUnique(name)", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "Clafer", "inv": "ClaferMustHaveName", "expression": "self.oclIsTypeOf(Clafer) implies self.name.size() > 0", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "Clafer", "inv": "OnlySuperTypingToTopLevelAbstractClafers", "expression": "cElements-> forAll(c:Clafer, r:Clafer | not c.cSuper.oclIsUndefined() and c.cSuper = r implies r.isAbstract = true)", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "Clafer", "inv": "OnlyReferenceToTopLevelAbstractClafers", "expression": "cElements-> forAll(c:Clafer, r:Clafer | not c.cTarget.oclIsUndefined() and c.cTarget = r implies r.isAbstract = true)", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "Clafer", "inv": "AClaferCannotBeAReferenceClaferAndHasASuperTypeAtTheSameTime", "expression": "not (cElements->exists(c:Clafer | c.cSuper <> null and c.cTarget <> null))", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "ClaferModel", "inv": "OneClaferModel", "expression": "ClaferModel.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "ClaferModel", "inv": "ClaferModelRules", "expression": "let i = self in i.oclIsTypeOf(ClaferModel) implies i.cCardinality.oclIsUndefined() and i.cGroupCardinality.oclIsUndefined() and i.cSuper.oclIsUndefined() and i.cTarget.oclIsUndefined() and i.isAbstract = false and i.name.size() = 0", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "CInterval", "inv": "IntervalRules", "expression": "let i = self in (i.Min >= 0) and (i.Max >= i.Min or i.Max = -1) and (i.Min = 0 implies i.Max <> 0 or i.Max = 1 or i.Max = -1) and (i.Min = 1 implies i.Max = -1 or i.Max >= 1)", "file": "ocl-dataset/dataset/repos/ModelWriter/UC-TR-03/clafer4emf/com.clafer4emf.metamodels.clafer/model/clafer.ecore"}, {"context": "Task", "inv": "taskName", "expression": "self.name <> null", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "Task", "inv": "taskInFolder", "expression": "self.orderedTasks->size() >= 1", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "Task", "inv": "uniqueNames", "expression": "self.orderedTasks->forAll(t1 : Task, t2 : Task | t1 <> t2 implies t1.name <> t2.name)", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "Folder", "inv": "folderName", "expression": "self.name <> null", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "Folder", "inv": "uniqueNamesSubFolders", "expression": "self.subFolders->forAll(f1 : Folder, f2 : Folder | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "ToDoListManager", "inv": "rootFolderParent", "expression": "self.rootFolder.parent = null", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "ToDoListManager", "inv": "uniqueTaskId", "expression": "tasks->isUnique(id)", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "ToDoListManager", "inv": "uniqueFolderId", "expression": "self.folders->isUnique(id)", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "ToDoListManager", "inv": "rootIsPartOfSet", "expression": "self.folders->includes(self.rootFolder)", "file": "ocl-dataset/dataset/repos/efraimlopez/mdd/ca.concordia.todolist/model/ToDoListDiag.ecore"}, {"context": "Website", "inv": "SingletonPage", "expression": "self.pages->forAll(p1, p2 | p1 <> p2 implies p1.name<>p2.name)", "file": "ocl-dataset/dataset/repos/zouhairireda/xtext-ocl-xtend-poc/org.poc.idm.wdl/model/wdl.ecore"}, {"context": "Page", "inv": "AvoidSelfReference", "expression": "not self.targets->includes(self)", "file": "ocl-dataset/dataset/repos/zouhairireda/xtext-ocl-xtend-poc/org.poc.idm.wdl/model/wdl.ecore"}, {"context": "Page", "inv": "AvoidDuplicates", "expression": "self.targets->forAll ( t1 | self.targets -> one ( t2 | t2 = t1))", "file": "ocl-dataset/dataset/repos/zouhairireda/xtext-ocl-xtend-poc/org.poc.idm.wdl/model/wdl.ecore"}, {"context": "Pouex", "inv": "defineName", "expression": "not self.name.oclIsUndefined() and self.name <> ''", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "Feature", "inv": "coherentValueMinDefaultMax", "expression": "self.minimum <= self.default and self.default <= self.maximum", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "State", "inv": "checkCicleActivationLevelOne", "expression": "self.activationConditions->selectByType(StateActivationCondition)->forAll(s: StateActivationCondition | self <> s.state)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "State", "inv": "checkCicleActivationLevelTwo", "expression": "self.activationConditions->selectByKind(LogicActivationCondition).terms->selectByType(StateActivationCondition)->forAll(s: StateActivationCondition | self <> s.state)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "State", "inv": "checkCicleActivationFromLevelThree", "expression": "self.activationConditions->selectByKind(LogicActivationCondition).oclAsSet()->closure(l: LogicActivationCondition | l.terms->selectByKind(LogicActivationCondition)).terms->selectByType(StateActivationCondition)->forAll(s: StateActivationCondition | self <> s.state)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "Action", "inv": "cantModifyFeatureTwiceOrMore", "expression": "self.influences->isUnique(i: Influence | i.feature.name)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "Influence", "inv": "notDivByZero", "expression": "if self.operator = MathematicOperator::DIVISION then value <> 0 else true endif", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "BodyPart", "inv": "uniqueNameInSameLevel", "expression": "self.parent.oclIsUndefined() or self.parent.subparts->select(b: BodyPart | self.name = b.name)->size() = 1", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "ThresholdActivationCondition", "inv": "thresholdShouldIsConsistentValueRespectOfFeatureMinMaxValue", "expression": "self.threshold <= self.feature.maximum and self.threshold >= self.feature.minimum", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "LiveObject", "inv": "atLeastOneActionForEachFeature", "expression": "self.features->forAll(f: Feature | self.actions->select(a: Action | a.enable = true).influences.feature->exists(inf_feature: Feature | inf_feature = f))", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "LiveObject", "inv": "ActionNameMustBeUnique", "expression": "self.actions->isUnique(a: Action | a.name)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "LiveObject", "inv": "FeatureNameMustBeUnique", "expression": "self.features->isUnique(f: Feature | f.name)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "LiveObject", "inv": "StateNameMustBeUnique", "expression": "self.states->isUnique(s: State | s.name)", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "LiveObject", "inv": "almostExistOneStateDead", "expression": "self.states->selectByType(StateDead)->size() > 0", "file": "ocl-dataset/dataset/repos/hachreak/dmss.pouex/metamodel/PouexMM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.classifier.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(fromElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.oclContainer().oclAsType(StructuralView).Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specifies = self) else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage", "expression": "if not self.specification.oclIsUndefined() and self.specification.messages->size() > 0 then self.specifies = self.specification.messages->select(message : Message | not message.sendEvent.oclIsTypeOf(MessageOccurrenceSpecification))->asOrderedSet()->at(1).signature else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage$message", "expression": "'The first message in the MessageView must match specifies of the MessageView'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.oclIsUndefined() then if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy", "expression": "if self.specification.oclIsUndefined() and self.specifies.partial then self.affectedBy->notEmpty() else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy$message", "expression": "'An empty MessageView must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let sendEvent : InteractionFragment = self.sendEvent.oclAsType(InteractionFragment) in let receiveEvent : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in if sendEvent.covered->asOrderedSet()->at(1) = receiveEvent.covered->asOrderedSet()->at(1) then sendEvent.container.fragments->indexOf(self.sendEvent) < receiveEvent.container.fragments->indexOf(self.receiveEvent) else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "if self.messageSort <> MessageSort::reply and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.signature.oclIsUndefined() then let container : FragmentContainer = self.sendEvent.oclAsType(MessageOccurrenceSpecification).container in if container.fragments->includes(self.sendEvent) then self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(currentParameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = currentParameter)) else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst", "expression": "if self.messageSort = MessageSort::createMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) >= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if not self.assignTo.oclIsUndefined() then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).getType() endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast", "expression": "if self.messageSort = MessageSort::deleteMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) <= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue", "expression": "if self.returns.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.returns.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.signature.returnType.oclType()) else true endif else if self.returns.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue$message", "expression": "'Type of return value must match the type of the return'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let container : FragmentContainer = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).container in let indexDifference : Integer = container.fragments->indexOf(self.receiveEvent) - container.fragments->indexOf(self.sendEvent) in indexDifference = 1 else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other (also, send must come before receive)'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "if self.messageSort <> MessageSort::reply and not self.receiveEvent.oclIsUndefined() then let typedElement : TypedElement = self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents in if not typedElement.oclIsUndefined() then let type : Type = if typedElement.oclIsTypeOf(Parameter) then typedElement.oclAsType(Parameter).type else if typedElement.oclIsTypeOf(Attribute) then typedElement.oclAsType(Attribute).type else if typedElement.oclIsTypeOf(Reference) then typedElement.oclAsType(Reference).type else typedElement.oclAsType(AssociationEnd).getType() endif endif endif in if type.oclIsKindOf(Classifier) then type.oclAsType(Classifier).operations->includes(self.signature) else true endif else true endif else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.value.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.parameter.type.oclType()) else true endif else if self.value.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/mjorod/textram/tool/ca.mcgill.sel.ram/model/RAM.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/kuhbaar/modeleng/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Kennitala", "inv": "valueLength", "expression": "value.size() = 10", "file": "ocl-dataset/dataset/repos/bjorsig/Kennitala/OCLinEcoreKennitala/model/Kennitala.ecore"}, {"context": "Kennitala", "inv": "monthValid", "expression": "Set{1 .. 12}->includes(self.month)", "file": "ocl-dataset/dataset/repos/bjorsig/Kennitala/OCLinEcoreKennitala/model/Kennitala.ecore"}, {"context": "Kennitala", "inv": "dayValid", "expression": "let daysInMonth : Integer = if Set{1, 3, 5, 7, 8, 10, 12}->includes(self.month) then 31 else 30 endif in day <= daysInMonth - if month = 2 then if year.mod(4) = 0 and ((year.mod(100) <> 0 or year.mod(400) = 0)) then 1 else 2 endif else 0 endif", "file": "ocl-dataset/dataset/repos/bjorsig/Kennitala/OCLinEcoreKennitala/model/Kennitala.ecore"}, {"context": "Kennitala", "inv": "oldValid", "expression": "Set{8, 9, 0}->includes(self.old)", "file": "ocl-dataset/dataset/repos/bjorsig/Kennitala/OCLinEcoreKennitala/model/Kennitala.ecore"}, {"context": "Kennitala", "inv": "vartalaValid", "expression": "let samleif : Integer = (self.value.substring(1, 1)?.toInteger() * 3 + self.value.substring(2, 2)?.toInteger() * 2 + self.value.substring(3, 3)?.toInteger() * 7 + self.value.substring(4, 4)?.toInteger() * 6 + self.value.substring(5, 5)?.toInteger() * 5 + self.value.substring(6, 6)?.toInteger() * 4 + self.value.substring(7, 7)?.toInteger() * 3 + self.value.substring(8, 8)?.toInteger() * 2).mod(11) in 11 - if (samleif = 0) then 11 else samleif endif = self.vartala", "file": "ocl-dataset/dataset/repos/bjorsig/Kennitala/OCLinEcoreKennitala/model/Kennitala.ecore"}, {"context": "Workflow", "inv": "numberOfOutgoingFromSplitPlusTheDifferencesBetweenNumberOfMergesAndSplitsEqualsNumberOfIngoingToMerge", "expression": "let numberOfSplits : Integer = self.nodes->select(t| t.oclIsKindOf(Split))->size(), numberOfMerges : Integer = self.nodes->select(t| t.oclIsKindOf(Merge))->size(), numberOfOutgoingSplits : Integer = self.nodes->select(t| t.oclIsKindOf(Split))->collect(s: Split | s.tasks->size())->sum(), numberOfIngoingMerge : Integer = self.nodes->select(t| t.oclIsKindOf(Merge))->collect(m: Merge | m.previousTasks->size())->sum() in numberOfIngoingMerge = numberOfOutgoingSplits + numberOfMerges - numberOfSplits", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Workflow", "inv": "numberOfOutgoingFromSwitchAndIfElsePlusTheDifferencesBetweenNumberOfWaitForOneAndIfElseMinusSwitchesEqualsNumberOfIngoingToWaitForOne", "expression": "let numberOfIfElse : Integer = self.nodes->select(t| t.oclIsKindOf(IfElse))->size(), numberOfSwitch : Integer = self.nodes->select(t| t.oclIsKindOf(Switch))->size(), numberOfWaitForOne : Integer = self.nodes->select(t| t.oclIsKindOf(WaitForOne))->size(), numberOfOutgoingSwitch : Integer = self.nodes->select(t| t.oclIsKindOf(Switch))->collect(s: Switch | s.tasks->size())->sum(), numberOfOutgoingIfElse : Integer = self.nodes->select(t| t.oclIsKindOf(IfElse))->collect(s: IfElse | s.tasks->size())->sum(), numberOfIngoingWaitForOne : Integer = self.nodes->select(t| t.oclIsKindOf(WaitForOne))->collect(s: WaitForOne | s.previousTasks->size())->sum() in numberOfIngoingWaitForOne = numberOfOutgoingSwitch + numberOfOutgoingIfElse + numberOfWaitForOne - numberOfIfElse - numberOfSwitch", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Workflow", "inv": "startExistsOnce", "expression": "self.nodes->select(n| n.oclIsKindOf(Task))->select(t: Task | t.start = true)->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Workflow", "inv": "endExistsOnce", "expression": "self.nodes->select(n| n.oclIsKindOf(Task))->select(t: Task | t.end = true)->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Workflow", "inv": "onlyOneTransitionAllowedToReferenceSameTask", "expression": "let allRefs : Bag = self.nodes->select(t| t.oclIsKindOf(Split))->collect(s: Split | s.tasks)-> union(self.nodes->select(t| t.oclIsKindOf(Merge))->collect(m: Merge | m.task))-> union(self.nodes->select(t| t.oclIsKindOf(Switch))->collect(s: Switch | s.tasks))-> union(self.nodes->select(t| t.oclIsKindOf(IfElse))->collect(i: IfElse | i.tasks))-> union(self.nodes->select(t| t.oclIsKindOf(WaitForOne))->collect(w: WaitForOne | w.task))-> union(self.nodes->select(t| t.oclIsKindOf(Simple))->collect(s: Simple | s.task)), uniqueRef : Set = self.nodes->select(t| t.oclIsKindOf(Split))->collect(s: Split | s.tasks)->asSet()-> union(self.nodes->select(t| t.oclIsKindOf(Merge))->collect(m: Merge | m.task)->asSet())-> union(self.nodes->select(t| t.oclIsKindOf(Switch))->collect(s: Switch | s.tasks)->asSet())-> union(self.nodes->select(t| t.oclIsKindOf(IfElse))->collect(i: IfElse | i.tasks)->asSet())-> union(self.nodes->select(t| t.oclIsKindOf(WaitForOne))->collect(w: WaitForOne | w.task)->asSet())-> union(self.nodes->select(t| t.oclIsKindOf(Simple))->collect(s: Simple | s.task)->asSet()) in uniqueRef->size() = allRefs->size()", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Workflow", "inv": "uniqeNamesForTasks", "expression": "self.nodes->select(t | t.oclIsKindOf(Task))->forAll(p1, p2 | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Node", "inv": "nameMustBePresent", "expression": "self.name.oclIsUndefined() = false", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Task", "inv": "noOutReferencesForEnd", "expression": "if self.end = true then self.transition->size() = 0 else true endif", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Task", "inv": "noMoreThanOneOutReferenceForTasks", "expression": "self.transition->size() < 2", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Split", "inv": "splitMustHaveOneIncomingTask", "expression": "self.previousTasks->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Split", "inv": "noOutReferencesToStart", "expression": "self.tasks->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Merge", "inv": "mergeMustHaveMoreThanOneIncomingTask", "expression": "self.previousTasks->size() > 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Merge", "inv": "noOutReferencesToStart", "expression": "self.task->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Simple", "inv": "simpleMustHaveOneIncomingTask", "expression": "self.previousTasks->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Simple", "inv": "noOutReferencesToStart", "expression": "self.task->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "IfElse", "inv": "ifElseMustHaveOneIncomingTask", "expression": "self.previousTasks->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "IfElse", "inv": "noOutReferencesToStart", "expression": "self.tasks->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Switch", "inv": "switchMustHaveOneIncomingTask", "expression": "self.previousTasks->size() = 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Switch", "inv": "noOutReferencesToStart", "expression": "self.tasks->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "WaitForOne", "inv": "waitForOneMustHaveTwoIncomingTasks", "expression": "self.previousTasks->size() > 1", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "WaitForOne", "inv": "noOutReferencesToStart", "expression": "self.task->select(t | t.start = true)->size() = 0", "file": "ocl-dataset/dataset/repos/ajgustafsson/mde/engine/model/engine.ecore"}, {"context": "Node", "inv": "defineOnlyOneRootNode", "expression": "(Node.allInstances()->select(n | n.parent.oclIsUndefined ()))->size() = 1", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "State", "inv": "defineInitialConnectorWhenComposite", "expression": "self.subnodes->size() > 0 and Transition.allInstances()->exists(t | t.target=self) implies self.subnodes->select(c | c.oclIsTypeOf(Connector) and c.name='initial')->size() = 1", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "State", "inv": "defineMaxOneInitialConnector", "expression": "self.subnodes->size() > 0 implies (self.subnodes->select(c | c.oclIsTypeOf(Connector) and c.name='initial')->size() <= 1)", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "State", "inv": "onlyLeafStatesHaveDoo", "expression": "(not self.doo.oclIsUndefined()) implies (self.subnodes->size() = 0)", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "Transition", "inv": "transitionOwner", "expression": "let lca : State = LCA(self.source, self.target) in self.owner = lca or isAncestor(self.owner, lca)", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "Transition", "inv": "legalBoundaryCrossing", "expression": "(self.target.parent <> self.source) and isAncestor(self.target.parent, self.source)", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "Transition", "inv": "maxOneTransitionFromInitialConnector", "expression": "(self.source.oclIsTypeOf(Connector) and self.source.name='initial') implies (Transition.allInstances()->select(t | t.source = self.source)->size()) <= 1", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "Transition", "inv": "noGuardFromInitialConnector", "expression": "(self.source.oclIsTypeOf(Connector) and self.source.name='initial') implies guard.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/gijss/rfsm-modeling/be.kuleuven.rodinia.model.rfsm/model/rfsm.ecore"}, {"context": "Hotel", "inv": "BadNumero", "expression": "self.etageMin <> 13 and self.etageMin <> 13", "file": "ocl-dataset/dataset/repos/sofiane8384/FormuleUn_Hotel/model/Hotel.ecore"}, {"context": "Chambre", "inv": "MaxByRoom", "expression": "hote->select(p1 : Personne | p1.age > 4)->size() < nbLits and hote->select(p1 : Personne | p1.age < 4) -> size() <= 1", "file": "ocl-dataset/dataset/repos/sofiane8384/FormuleUn_Hotel/model/Hotel.ecore"}, {"context": "Chambre", "inv": "MaxByRom2", "expression": "hote->size() < self.nbLits or hote->size() <= self.nbLits + 1 and hote->exists(p:Personne| p.age < 4)", "file": "ocl-dataset/dataset/repos/sofiane8384/FormuleUn_Hotel/model/Hotel.ecore"}, {"context": "Chambre", "inv": "validNumberEtage", "expression": "etage >= hotel.etageMin or etage <= hotel.etageMax", "file": "ocl-dataset/dataset/repos/sofiane8384/FormuleUn_Hotel/model/Hotel.ecore"}, {"context": "Issue", "inv": "limitedTitle", "expression": "if self.title = null then SpecialIssues = true else SpecialIssues = false endif", "file": "ocl-dataset/dataset/repos/sofiane8384/Journal/model/Journal_scientifique.ecore"}, {"context": "Issue", "inv": "notSubmittedPublished", "expression": "publie->excludesAll(submit)", "file": "ocl-dataset/dataset/repos/sofiane8384/Journal/model/Journal_scientifique.ecore"}, {"context": "Issue", "inv": "afterPublication", "expression": "publie->forAll(p:Paper | p.reviewer->size()=3)", "file": "ocl-dataset/dataset/repos/sofiane8384/Journal/model/Journal_scientifique.ecore"}, {"context": "Paper", "inv": "authorIsnotReviewer", "expression": "reviewer->forAll(r:Reviewer | redaction->select(a:Autheur|a.nameAuthor = r.nameReviewer )->size()<1) and reviewer->size()<3", "file": "ocl-dataset/dataset/repos/sofiane8384/Journal/model/Journal_scientifique.ecore"}, {"context": "Employe", "inv": "MaximumSalaire", "expression": "Employe.allInstances()-> forAll(e1,e2|e1.project->size() > e2.project->size()implies e1.salary > e2.salary )", "file": "ocl-dataset/dataset/repos/sofiane8384/IDM_TD31/model/Employe.ecore"}, {"context": "Departement", "inv": "EmployesInDepartement", "expression": "self.employe->size() >= self.project->size()", "file": "ocl-dataset/dataset/repos/sofiane8384/IDM_TD31/model/Employe.ecore"}, {"context": "Departement", "inv": "BudgetsWithinDepartement", "expression": "project->collect(p:Project| p.budget)->sum() <= budget", "file": "ocl-dataset/dataset/repos/sofiane8384/IDM_TD31/model/Employe.ecore"}, {"context": "Project", "inv": "BudgetProjectMax", "expression": "self.budget <= self.departement.budget", "file": "ocl-dataset/dataset/repos/sofiane8384/IDM_TD31/model/Employe.ecore"}, {"context": "Project", "inv": "WorkerInDepartement", "expression": "departement.employe->includesAll(employe)", "file": "ocl-dataset/dataset/repos/sofiane8384/IDM_TD31/model/Employe.ecore"}, {"context": "ProcCall", "inv": "same_number_of_formals_and_actuals", "expression": "actualArgs->size() = declaration.args->size()", "file": "ocl-dataset/dataset/repos/dvojtise/logo/domain/example.logo.model/model/ASMLogo.ecore"}, {"context": "ProcDeclaration", "inv": "unique_names_for_formal_arguments", "expression": "args->forAll( a1 , a2 | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/dvojtise/logo/domain/example.logo.model/model/ASMLogo.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/SebastienBerger/IDM/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "oneInitial", "expression": "self.states->one(e : StateVertex | e.oclIsKindOf(InitialState))", "file": "ocl-dataset/dataset/repos/antoniogarmendia/Hawk-EMFSplitter_Integration/org.miso.mondo.wt.cs/patterns/StateMachine.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/holyfish117/modEng_lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/Lucieneg/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/Lucieneg/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Node", "inv": "NodeNameCannotBeEmpty", "expression": "Tuple { message : String = 'Name must not be empty.', status : Boolean = if name.size() > 0 then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CProvML/model/CProvML.ecore"}, {"context": "Node", "inv": "NodesCannotBeConnectedToSelf", "expression": "Tuple { message : String = 'Node cannot connect to itself.', status : Boolean = if sourceConnections->forAll(c | c.source <> c.target) then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CProvML/model/CProvML.ecore"}, {"context": "Node", "inv": "NodesCannotBeConnectedMoreThanOnce", "expression": "Tuple { message : String = 'Nodes may not connect more than once.', status : Boolean = let selfConnections : Boolean = sourceConnections->forAll(a | sourceConnections->forAll(b | a <> b implies a.target <> b.target)) in let otherConnections : Boolean = sourceConnections->forAll(sc | sc.target.sourceConnections->forAll(tc | sc.source <> tc.target)) in if selfConnections and otherConnections then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CProvML/model/CProvML.ecore"}, {"context": "Node", "inv": "NodeNameCannotBeEmpty", "expression": "Tuple { message : String = 'Name must not be empty.', status : Boolean = if name.size() > 0 then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CD/CPS_System/SourceCode/CProvML/model/CProvML.ecore"}, {"context": "Node", "inv": "NodesCannotBeConnectedToSelf", "expression": "Tuple { message : String = 'Node cannot connect to itself.', status : Boolean = if sourceConnections->forAll(c | c.source <> c.target) then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CD/CPS_System/SourceCode/CProvML/model/CProvML.ecore"}, {"context": "Node", "inv": "NodesCannotBeConnectedMoreThanOnce", "expression": "Tuple { message : String = 'Nodes may not connect more than once.', status : Boolean = let selfConnections : Boolean = sourceConnections->forAll(a | sourceConnections->forAll(b | a <> b implies a.target <> b.target)) in let otherConnections : Boolean = sourceConnections->forAll(sc | sc.target.sourceConnections->forAll(tc | sc.source <> tc.target)) in if selfConnections and otherConnections then true else null endif }.status", "file": "ocl-dataset/dataset/repos/emale001/CEN5064/CD/CPS_System/SourceCode/CProvML/model/CProvML.ecore"}, {"context": "Host", "inv": "nodirectconnection", "expression": "self.ports ->forAll(not connector.connectedports->collect(networkelement)->one(p | p <> self).oclIsKindOf(Host))", "file": "ocl-dataset/dataset/repos/fp7-netide/IDE/plugins/eu.netide.configuration/model/Topology.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/tsimec/lab2_ws2016/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateMachine", "inv": "oneInitial", "expression": "self.states->one(e : StateVertex | e.oclIsKindOf(InitialState))", "file": "ocl-dataset/dataset/repos/jzhang3/DSL-Tao-extended/src/org.mondo.dsl/patterns/StateMachine.ecore"}, {"context": "Task", "inv": "PositiveWCET", "expression": "worstCaseExecTime > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Task", "inv": "ExecutionAndDeadlineAllowsCompletion", "expression": "worstCaseExecTime <= implicitDeadline", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Task", "inv": "ExecutionAndPeriodAllowsCompletion", "expression": "if (periodicity <> Periodicity::Aperiodic) then worstCaseExecTime <= characteristicPeriod else true endif", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Task", "inv": "DeadlineLessThanPeriod", "expression": "implicitDeadline <= characteristicPeriod", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Task", "inv": "PositivePeriod", "expression": "characteristicPeriod > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Module", "inv": "PositiveDelay", "expression": "delay > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Module", "inv": "NonZeroPeriod", "expression": "period > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Module", "inv": "NonOverlappingPartitions", "expression": "let allIntervals : Sequence(Interval) = partition.executionIntervals ->flatten() ->sortedBy(i : Interval | i.start) in if (allIntervals ->size() <= 1) then true else allIntervals ->subSequence(1, allIntervals ->size() - 1) ->forAll(i : Interval | i.end <= allIntervals ->at(1 + allIntervals ->indexOf(i)).start) endif", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Partition", "inv": "PositivePeriod", "expression": "period > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Partition", "inv": "AvailibilityFactorLessThanOrEqualToOne", "expression": "availabilityFactor <= 1", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Partition", "inv": "PeriodSpansIntervals", "expression": "let sortedIntervals : Sequence(Interval) = executionIntervals->sortedBy(start) in if (sortedIntervals->size() > 1) then sortedIntervals->last().end <= period else true endif", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Partition", "inv": "NonOverlappingIntervals", "expression": "if (executionIntervals->size() <= 1) then true -- Nothing can overlap if there is only one or none! else let sortedIntervals : Sequence(Interval) = executionIntervals->sortedBy(i : Interval | i.start) in sortedIntervals-> subSequence(1, sortedIntervals->size() - 1)-> forAll(i : Interval | i.end <= sortedIntervals->at(1 + sortedIntervals->indexOf(i)).start) endif", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Interval", "inv": "EndAfterStart", "expression": "end >= start", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Interval", "inv": "NonZeroLength", "expression": "end <> start", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Network", "inv": "PositiveNetworkLatency", "expression": "latency > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Network", "inv": "PositiveNetworkBandwith", "expression": "networkBandwidth > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Switch", "inv": "AtleastTwoSwitchPorts", "expression": "switchPorts->size() > 1", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "VirtualLink", "inv": "DestinationsCannotIncludeSource", "expression": "destinations->forAll(dest : Module | dest <> source)", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "VirtualLink", "inv": "PositiveBAG", "expression": "BAG > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "VirtualLink", "inv": "PositiveMaxFrameSize", "expression": "maxFrameSize > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "Port", "inv": "PositiveBandwidth", "expression": "Bandwidth > 0", "file": "ocl-dataset/dataset/repos/ghidalgo3/realtimeanalysis/fr.ensma.realtimescheduling/model/model.ecore"}, {"context": "View", "inv": "FirstLetterInViewTitleIsUpperCase", "expression": "self.name.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "View", "inv": "NameInViewIsNotEmpty", "expression": "self.name.size() <> 0", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "ViewGroup", "inv": "ExactlyOneWelcomeViewGroupExists", "expression": "ViewGroup.allInstances() -> select(f | f.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "ViewGroup", "inv": "FirstLetterInViewGroupIsUpperCase", "expression": "self.name.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "ViewElements", "inv": "ElementIDIsUnique", "expression": "ViewElements.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "CompositeConditions", "inv": "ComposedConditionTypesAreEqual", "expression": "self.visibilitycondition -> forAll(c | c.conditionType = self.conditionType)", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Class", "inv": "ClassNotInheritSelf", "expression": "self.superclass->excludes(self)", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Class", "inv": "ExactlyOneClassID", "expression": "(self.Property -> select(k | k.isID=true)-> size() = 1) or (self.superclass -> size() > 0)", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Property", "inv": "LowerBoundMaxOne", "expression": "self.LowerBound <= 1", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Property", "inv": "LowerBoundMinZero", "expression": "self.LowerBound >= 0", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Property", "inv": "UpperBoundEqualsOne", "expression": "self.UpperBound = 1", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "Property", "inv": "ClassPropertyTypeIsValid", "expression": "self.type = PropertyType::DataType or self.type = PropertyType::Enumeration", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "AssociationEnd", "inv": "associationEndUpperGreaterThanLower", "expression": "self.LowerBound <= self.UpperBound or self.UpperBound = -1 and (self.LowerBound >= 0 and self.UpperBound > 0 or self.UpperBound = -1)", "file": "ocl-dataset/dataset/repos/tannera/Metamodeling_DVML_A1/model/views.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.myClass.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(fromElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement", "expression": "self.fromElement.oclIsTypeOf(Class) or self.fromElement.oclIsTypeOf(Operation)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement$message", "expression": "'The source model element may only be of type Class or Operation'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped", "expression": "self.toElements->forAll(element : MappableElement | if element.oclIsKindOf(Classifier) then self.fromElement.oclIsKindOf(Classifier) else element.oclIsTypeOf(self.fromElement.oclType()) endif)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped$message", "expression": "'Mapping must be between same types of elements'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping", "expression": "let clazz : Class = if fromElement.oclIsTypeOf(Operation) then fromElement.oclAsType(Operation).Classifier else fromElement endif in self.Instantiation.externalAspect.structuralView.classes->includes(clazz) and self.toElements->forAll(element : MappableElement | let clazz : Class = if element.oclIsTypeOf(Operation) then element.oclAsType(Operation).Classifier else element endif in if clazz.oclIsKindOf(PrimitiveType) then self.Instantiation.Aspect.structuralView.types->includes(clazz) else self.Instantiation.Aspect.structuralView.classes->includes(clazz) endif)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping$message", "expression": "'Source must be from depending aspect and targets must be from current aspect'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.StructuralView.Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specifies = self) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage", "expression": "if not self.specification.oclIsUndefined() and self.specification.messages->size() > 0 then self.specifies = self.specification.messages->select(message : Message | not message.sendEvent.oclIsTypeOf(MessageOccurrenceSpecification))->asOrderedSet()->at(1).signature else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage$message", "expression": "'The first message in the MessageView must match specifies of the MessageView'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.oclIsUndefined() then if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy", "expression": "if self.specification.oclIsUndefined() and self.specifies.partial then self.affectedBy->notEmpty() else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy$message", "expression": "'An empty MessageView must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then if self.sendEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) then self.interaction.fragments->indexOf(self.sendEvent) < self.interaction.fragments->indexOf(self.receiveEvent) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "if self.messageSort <> MessageSort::reply and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.signature.oclIsUndefined() then let container : FragmentContainer = self.sendEvent.oclAsType(MessageOccurrenceSpecification).container in if container.fragments->includes(self.sendEvent) then self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(currentParameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = currentParameter)) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst", "expression": "if self.messageSort = MessageSort::createMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) >= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if not self.assignTo.oclIsUndefined() then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).getType() endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast", "expression": "if self.messageSort = MessageSort::deleteMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) <= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue", "expression": "if self.returns.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.returns.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.signature.returnType.oclType()) else true endif else if self.returns.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue$message", "expression": "'Type of return value must match the type of the return'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let container : FragmentContainer = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).container in let indexDifference : Integer = container.fragments->indexOf(self.receiveEvent) - container.fragments->indexOf(self.sendEvent) in indexDifference = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other (also, send must come before receive)'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "if self.messageSort <> MessageSort::reply and not self.receiveEvent.oclIsUndefined() then let typedElement : TypedElement = self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents in if not typedElement.oclIsUndefined() then let type : Type = if typedElement.oclIsTypeOf(Parameter) then typedElement.oclAsType(Parameter).type else if typedElement.oclIsTypeOf(Attribute) then typedElement.oclAsType(Attribute).type else if typedElement.oclIsTypeOf(Reference) then typedElement.oclAsType(Reference).type else typedElement.oclAsType(AssociationEnd).getType() endif endif endif in if type.oclIsKindOf(Classifier) then type.oclAsType(Classifier).operations->includes(self.signature) else true endif else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.value.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.parameter.type.oclType()) else true endif else if self.value.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.myClass.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(fromElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.oclContainer().oclAsType(StructuralView).Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specifies = self) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage", "expression": "if not self.specification.oclIsUndefined() and self.specification.messages->size() > 0 then self.specifies = self.specification.messages->select(message : Message | not message.sendEvent.oclIsTypeOf(MessageOccurrenceSpecification))->asOrderedSet()->at(1).signature else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage$message", "expression": "'The first message in the MessageView must match specifies of the MessageView'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.oclIsUndefined() then if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy", "expression": "if self.specification.oclIsUndefined() and self.specifies.partial then self.affectedBy->notEmpty() else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy$message", "expression": "'An empty MessageView must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let sendEvent : InteractionFragment = self.sendEvent.oclAsType(InteractionFragment) in let receiveEvent : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in if sendEvent.covered->asOrderedSet()->at(1) = receiveEvent.covered->asOrderedSet()->at(1) then sendEvent.container.fragments->indexOf(self.sendEvent) < receiveEvent.container.fragments->indexOf(self.receiveEvent) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "if self.messageSort <> MessageSort::reply and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.signature.oclIsUndefined() then let container : FragmentContainer = self.sendEvent.oclAsType(MessageOccurrenceSpecification).container in if container.fragments->includes(self.sendEvent) then self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(currentParameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = currentParameter)) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst", "expression": "if self.messageSort = MessageSort::createMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) >= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if not self.assignTo.oclIsUndefined() then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).getType() endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast", "expression": "if self.messageSort = MessageSort::deleteMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) <= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue", "expression": "if self.returns.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.returns.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.signature.returnType.oclType()) else true endif else if self.returns.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue$message", "expression": "'Type of return value must match the type of the return'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let container : FragmentContainer = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).container in let indexDifference : Integer = container.fragments->indexOf(self.receiveEvent) - container.fragments->indexOf(self.sendEvent) in indexDifference = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other (also, send must come before receive)'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "if self.messageSort <> MessageSort::reply and not self.receiveEvent.oclIsUndefined() then let typedElement : TypedElement = self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents in if not typedElement.oclIsUndefined() then let type : Type = if typedElement.oclIsTypeOf(Parameter) then typedElement.oclAsType(Parameter).type else if typedElement.oclIsTypeOf(Attribute) then typedElement.oclAsType(Attribute).type else if typedElement.oclIsTypeOf(Reference) then typedElement.oclAsType(Reference).type else typedElement.oclAsType(AssociationEnd).getType() endif endif endif in if type.oclIsKindOf(Classifier) then type.oclAsType(Classifier).operations->includes(self.signature) else true endif else true endif else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.value.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.parameter.type.oclType()) else true endif else if self.value.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/JUCM-NAV/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "DeclaredStrategy", "inv": "UniqueVariableParameters", "expression": "Tuple { message : String = 'The parameter names are not unique for declared strategy: ' + name, status : Boolean = formalParams <> null implies formalParams ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "DeclaredStrategy", "inv": "ValidFormalParams", "expression": "Tuple { message : String = 'Formal params for strategy ' + name + ' are null', status : Boolean = formalParams <> null }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "DeclaredStrategyInstance", "inv": "RightNumberOfParams", "expression": "Tuple { message : String = 'Invalid number of parameters for strategy ' + name + '. Required ' + declaration.formalParams ->size() ->toString() + ', found ' + actualParams ->size() ->toString(), status : Boolean = (declaration <> null) implies declaration.formalParams ->size() = actualParams ->size() }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "ADT", "inv": "UniqueVariableNames", "expression": "Tuple { message : String = 'The following variables are defined more than once: ' + variables ->select(v | (variables ->select(v1 | (v1.name = v.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = variables ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "ASort", "inv": "NameNotEmpty", "expression": "Tuple { message : String = 'Cannot assign empty name to sort', status : Boolean = name <> '' }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "SubSort", "inv": "SuperSortNotNull", "expression": "Tuple { message : String = 'The super sort of sort ' + name + 'cannot be null', status : Boolean = superSort <> null }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Signature", "inv": "UniqueSorts", "expression": "Tuple { message : String = 'There are some sorts in the adt that appear more than once: ' + sorts ->select(s1 | (sorts ->select(s2 | (s2.name = s1.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = sorts <> null implies sorts ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Signature", "inv": "UniqueOperations", "expression": "Tuple { message : String = 'There are some operations in the adt that appear more than once: ' + allOperations ->select(op1 | (allOperations ->select(op2 | (op2.name = op1.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = allOperations ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "VariableDeclaration", "inv": "NameNotEmpty", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Operation", "inv": "ValidReturnType", "expression": "Tuple { message : String = 'The return type for operation ' + name + ' was not set.', status : Boolean = returnType <> null }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "CorrectNumberOfParameters", "expression": "Tuple { message : String = 'Invalid number of parameters for term: ' + self.toString() + '. Required ' + operationSymbol.formalParameters ->size() ->toString() + ', found ' + subterms ->size() ->toString(), status : Boolean = (operationSymbol <> null) implies subterms ->size() = operationSymbol.formalParameters ->size() }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "CorrectTypeOfParameters", "expression": "Tuple { message : String = 'Invalid type of parameters for term: ' + self.toString(), status : Boolean = subterms <> null implies subterms ->forAll(p | ((p.sort <> null) and (operationSymbol <> null)) implies p.sort.isSubSortOf(operationSymbol.formalParameters ->at(subterms ->indexOf(p)))) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "RightAdtSubterms", "expression": "Tuple { message : String = 'Some subterms do not have the same adt as the parent term: ' + self.toString(), status : Boolean = (subterms <> null) implies subterms ->forAll(t | t.adt = self.adt) }.status", "file": "ocl-dataset/dataset/repos/didierbuchs/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/hungngo-quoc/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "HaxeModel", "inv": "sourceFolderNotEmpty", "expression": "sourceFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeModel", "inv": "targetFolderNotEmpty", "expression": "targetFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeModel", "inv": "mainClassHasMainMethod", "expression": "not (mainClass.haxeOperations ->select(x : HaxeOperation | (x.name.matches('main') and x.isStatic and x.formalParameters ->isEmpty())) ->isEmpty())", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeVariableDeclaration", "inv": "variableNameRegex", "expression": "name.matches('[a-zA-Z_][a-zA-Z0-9_]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxePackage", "inv": "packageNameRegex", "expression": "name.matches('[a-z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeModule", "inv": "moduleNameRegex", "expression": "name.matches('[A-Z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeClass", "inv": "classNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeClass", "inv": "interfaceMethods", "expression": "(isInterface) implies (haxeConstructors ->isEmpty() and haxeOperations ->forAll(x : HaxeOperation | x.theBody.oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeClass", "inv": "oneOrZeroConstructors", "expression": "(not extern) implies haxeConstructors ->size() < 2", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeClass", "inv": "externDeclaration", "expression": "extern implies (haxeOperations ->forAll(x : HaxeOperation | not x.type ->oclIsUndefined() and x.theBody ->oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeAbstract", "inv": "abstractNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeEnum", "inv": "onlyLiterals", "expression": "self.haxeFields->forAll(x|x.oclIsTypeOf(HaxeEnumConstructor))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentGetter", "expression": "(getterProperty = HaxeAttributeProperty::method) implies if (not self.getter.oclIsUndefined()) then (getter.name).matches('get_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentSetter", "expression": "(setterProperty = HaxeAttributeProperty::method) implies if (not self.setter.oclIsUndefined()) then (setter.name).matches('set_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeEnumConstructor", "inv": "noInitializer", "expression": "initializer->isEmpty()", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeImportDeclaration", "inv": "isAStaticElement", "expression": "if (self.staticElement ->notEmpty()) then self.staticElement.isStatic else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "HaxeUsingDeclaration", "inv": "isAStaticElement", "expression": "self.staticField.isStatic", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/haxe.ecore"}, {"context": "CppModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/cpp.ecore"}, {"context": "CppModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/cpp.ecore"}, {"context": "CppNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto ATL/thesis_final/cpp.ecore"}, {"context": "HaxeModel", "inv": "sourceFolderNotEmpty", "expression": "sourceFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeModel", "inv": "targetFolderNotEmpty", "expression": "targetFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeModel", "inv": "mainClassHasMainMethod", "expression": "not (mainClass.haxeOperations ->select(x : HaxeOperation | (x.name.matches('main') and x.isStatic and x.formalParameters ->isEmpty())) ->isEmpty())", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeVariableDeclaration", "inv": "variableNameRegex", "expression": "name.matches('[a-zA-Z_][a-zA-Z0-9_]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxePackage", "inv": "packageNameRegex", "expression": "name.matches('[a-z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeModule", "inv": "moduleNameRegex", "expression": "name.matches('[A-Z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeClass", "inv": "classNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeClass", "inv": "interfaceMethods", "expression": "(isInterface) implies (haxeConstructors ->isEmpty() and haxeOperations ->forAll(x : HaxeOperation | x.theBody.oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeClass", "inv": "oneOrZeroConstructors", "expression": "(not extern) implies haxeConstructors ->size() < 2", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeClass", "inv": "externDeclaration", "expression": "extern implies (haxeOperations ->forAll(x : HaxeOperation | not x.type ->oclIsUndefined() and x.theBody ->oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeAbstract", "inv": "abstractNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeEnum", "inv": "onlyLiterals", "expression": "self.haxeFields->forAll(x|x.oclIsTypeOf(HaxeEnumConstructor))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentGetter", "expression": "(getterProperty = HaxeAttributeProperty::method) implies if (not self.getter.oclIsUndefined()) then (getter.name).matches('get_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentSetter", "expression": "(setterProperty = HaxeAttributeProperty::method) implies if (not self.setter.oclIsUndefined()) then (setter.name).matches('set_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeEnumConstructor", "inv": "noInitializer", "expression": "initializer->isEmpty()", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeImportDeclaration", "inv": "isAStaticElement", "expression": "if (self.staticElement ->notEmpty()) then self.staticElement.isStatic else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "HaxeUsingDeclaration", "inv": "isAStaticElement", "expression": "self.staticField.isStatic", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/haxe.ecore"}, {"context": "CppModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/cpp.ecore"}, {"context": "CppModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/cpp.ecore"}, {"context": "CppNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Migracion-UI/IngInversaC-UI/src/atl/metamodels/cpp.ecore"}, {"context": "HaxeModel", "inv": "sourceFolderNotEmpty", "expression": "sourceFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeModel", "inv": "targetFolderNotEmpty", "expression": "targetFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeModel", "inv": "mainClassHasMainMethod", "expression": "not (mainClass.haxeOperations ->select(x : HaxeOperation | (x.name.matches('main') and x.isStatic and x.formalParameters ->isEmpty())) ->isEmpty())", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeVariableDeclaration", "inv": "variableNameRegex", "expression": "name.matches('[a-zA-Z_][a-zA-Z0-9_]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxePackage", "inv": "packageNameRegex", "expression": "name.matches('[a-z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeModule", "inv": "moduleNameRegex", "expression": "name.matches('[A-Z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeClass", "inv": "classNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeClass", "inv": "interfaceMethods", "expression": "(isInterface) implies (haxeConstructors ->isEmpty() and haxeOperations ->forAll(x : HaxeOperation | x.theBody.oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeClass", "inv": "oneOrZeroConstructors", "expression": "(not extern) implies haxeConstructors ->size() < 2", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeClass", "inv": "externDeclaration", "expression": "extern implies (haxeOperations ->forAll(x : HaxeOperation | not x.type ->oclIsUndefined() and x.theBody ->oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeAbstract", "inv": "abstractNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeEnum", "inv": "onlyLiterals", "expression": "self.haxeFields->forAll(x|x.oclIsTypeOf(HaxeEnumConstructor))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentGetter", "expression": "(getterProperty = HaxeAttributeProperty::method) implies if (not self.getter.oclIsUndefined()) then (getter.name).matches('get_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentSetter", "expression": "(setterProperty = HaxeAttributeProperty::method) implies if (not self.setter.oclIsUndefined()) then (setter.name).matches('set_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeEnumConstructor", "inv": "noInitializer", "expression": "initializer->isEmpty()", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeImportDeclaration", "inv": "isAStaticElement", "expression": "if (self.staticElement ->notEmpty()) then self.staticElement.isStatic else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "HaxeUsingDeclaration", "inv": "isAStaticElement", "expression": "self.staticField.isStatic", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/haxe.ecore"}, {"context": "CppModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/cpp.ecore"}, {"context": "CppModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/cpp.ecore"}, {"context": "CppNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Metamodelos/cpp.ecore"}, {"context": "HaxeModel", "inv": "sourceFolderNotEmpty", "expression": "sourceFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeModel", "inv": "targetFolderNotEmpty", "expression": "targetFolder.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeModel", "inv": "mainClassHasMainMethod", "expression": "not (mainClass.haxeOperations ->select(x : HaxeOperation | (x.name.matches('main') and x.isStatic and x.formalParameters ->isEmpty())) ->isEmpty())", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeModel", "inv": "nameNotNull", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeNamedElement", "inv": "nameNotEmpty", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeVariableDeclaration", "inv": "variableNameRegex", "expression": "name.matches('[a-zA-Z_][a-zA-Z0-9_]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxePackage", "inv": "packageNameRegex", "expression": "name.matches('[a-z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeModule", "inv": "moduleNameRegex", "expression": "name.matches('[A-Z][A-Z0-9a-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeClass", "inv": "classNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeClass", "inv": "interfaceMethods", "expression": "(isInterface) implies (haxeConstructors ->isEmpty() and haxeOperations ->forAll(x : HaxeOperation | x.theBody.oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeClass", "inv": "oneOrZeroConstructors", "expression": "(not extern) implies haxeConstructors ->size() < 2", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeClass", "inv": "externDeclaration", "expression": "extern implies (haxeOperations ->forAll(x : HaxeOperation | not x.type ->oclIsUndefined() and x.theBody ->oclIsUndefined()))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeAbstract", "inv": "abstractNameRegex", "expression": "name.matches('[A-Z][A-Za-z_-]*')", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeEnum", "inv": "onlyLiterals", "expression": "self.haxeFields->forAll(x|x.oclIsTypeOf(HaxeEnumConstructor))", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentGetter", "expression": "(getterProperty = HaxeAttributeProperty::method) implies if (not self.getter.oclIsUndefined()) then (getter.name).matches('get_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeAttribute", "inv": "coherentSetter", "expression": "(setterProperty = HaxeAttributeProperty::method) implies if (not self.setter.oclIsUndefined()) then (setter.name).matches('set_'.concat(name)) else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeEnumConstructor", "inv": "noInitializer", "expression": "initializer->isEmpty()", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeImportDeclaration", "inv": "isAStaticElement", "expression": "if (self.staticElement ->notEmpty()) then self.staticElement.isStatic else true endif", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "HaxeUsingDeclaration", "inv": "isAStaticElement", "expression": "self.staticField.isStatic", "file": "ocl-dataset/dataset/repos/mduthey/Tesis_Duthey_Spina/Proyecto Acceleo/ar.edu.unicen.haxe/src/ar/edu/unicen/haxe/model/haxe.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms.form/input/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Advanced-Model-Engineering-SS16/xtext-ocl-extensions/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Transition", "inv": "correctDelayDefinition", "expression": "maxDelay > minDelay", "file": "ocl-dataset/dataset/repos/caev03/MPA2017-TallerPetriNet/model/petrinet.ecore"}, {"context": "AttributeCompatibility", "inv": "no_classes", "expression": "features->forAll(f | f.classes->isEmpty())", "file": "ocl-dataset/dataset/repos/totem-mde/totem/totem.trm/metamodel/MM_Compatibility.ecore"}, {"context": "ManufacturingSystem", "inv": "threeThereShallNotExist", "expression": "self.consistsOf->selectByKind(Step).oclAsType(ManufacturingSystemElement).responsible->excludes(self.responsible)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "ManufacturingSystem", "inv": "fiveNoEndStorage", "expression": "self.consistsOf.transition-> forAll(m:ManufacturingSystemElement| m.transition <> self.start)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "oneResponsible", "expression": "self.responsible->size() = 1", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "sevenOutputInputs", "expression": "Step.allInstances()->select(transition->includes(self))->forAll(output.outputTypes->excludesAll(self.input->selectByType(WorkPieceCondition).requiresType)=false)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "nineForEachStep", "expression": "Step.allInstances()->select(transition->includes(self))->selectByKind(Step)->forAll(speed<=self.speed)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "Responsible", "inv": "secondEachResponsibleThree", "expression": "let ms:Integer = Step.allInstances()->select(responsible=self)->size() in ms>0 and ms<4", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "StoragePoint", "inv": "fourNoStartStorage", "expression": "ManufacturingSystem.allInstances()->collect(start)->includes(self) implies ManufacturingSystemElement.allInstances() -> collect(transition) -> excludes(self)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "ManufacturingSystemElement", "inv": "fiveTransitionShallOnlyConnect", "expression": "ManufacturingSystem.allInstances()->select(consistsOf->includes(self)).ManufacturingSystem::consistsOf->includesAll(self.transition)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "CompositeStep", "inv": "eightForCompositeSteps", "expression": "self.input->selectByKind(WorkPieceCondition).requiresType ->includesAll(self.contains.start.stores) and self.output.outputTypes->includesAll(self.contains.end.stores)", "file": "ocl-dataset/dataset/repos/davidust/assignment5mde/assignment3/model/manufacturingSystem.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/Gabitchov/org.eclipse.papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/Gabitchov/org.eclipse.papyrus/sandbox/pasteInNewTable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/Gabitchov/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/Gabitchov/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentAxisProvidersTypes", "expression": "not (currentRowAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider) and currentColumnAxisProvider.oclIsKindOf(nattableaxisprovider::ISlaveAxisProvider))", "file": "ocl-dataset/dataset/repos/Gabitchov/org.eclipse.papyrus/plugins/infra/nattable/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Button", "inv": "maxActions", "expression": "self.triggers -> size() <= 2", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Button", "inv": "minActions", "expression": "self.triggers -> size() > 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Aplication", "inv": "nameLayout", "expression": "self.contains -> isUnique(name)", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Aplication", "inv": "mainActivity", "expression": "self.run -> select(C|C.main = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Aplication", "inv": "SDKSize", "expression": "if (not self.minSDK -> oclIsUndefined()) then self.minSDK < self.targetSDK else not self.targetSDK ->oclIsUndefined() endif", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Activity", "inv": "nameActivity", "expression": "self.runsIn.run -> select(c|c.package = self.package and c.name = self.name) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Action", "inv": "onlyOneByType", "expression": "self.buttonOwner.triggers -> select(c|c.type = self.type) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidGenerator/src/Android.ecore"}, {"context": "Button", "inv": "maxActions", "expression": "self.triggers -> size() <= 2", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Button", "inv": "minActions", "expression": "self.triggers -> size() > 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Aplication", "inv": "nameLayout", "expression": "self.contains -> isUnique(name)", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Aplication", "inv": "mainActivity", "expression": "self.run -> select(C|C.main = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Aplication", "inv": "SDKSize", "expression": "if (not self.minSDK -> oclIsUndefined()) then self.minSDK < self.targetSDK else not self.targetSDK ->oclIsUndefined() endif", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Activity", "inv": "nameActivity", "expression": "self.runsIn.run -> select(c|c.package = self.package and c.name = self.name) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "Action", "inv": "onlyOneByType", "expression": "self.buttonOwner.triggers -> select(c|c.type = self.type) -> size() = 1", "file": "ocl-dataset/dataset/repos/vicdoz/metaAndroid/AndroidMetamodel/model/Android.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/models/StateMachine.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/cfollet/projet_idm/metaModels/StateMachine.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/viatra/EMF-IncQuery-Examples/mdsd/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/ThitGaRang/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Monde", "inv": "nomVilleUnique", "expression": "self.villes->forAll(v1, v2:Ville | v1<>v2 implies v1.nom <> v2.nom)", "file": "ocl-dataset/dataset/repos/julienlecuyer/SIG/model/sig.ecore"}, {"context": "Personne", "inv": "NombreBatiments", "expression": "self.batiments->selectByType(Etude)->size() <= 1 and self.batiments->selectByType(Travail)->size() <= 1 and self.batiments->selectByType(Soins)->size() <= 2", "file": "ocl-dataset/dataset/repos/julienlecuyer/SIG/model/sig.ecore"}, {"context": "Personne", "inv": "EtudeOuTravail", "expression": "self.batiments->forAll(b1, b2:Batiment | ((b1.oclIsTypeOf(Travail) or b1.oclIsTypeOf(Etude) = false) and ( b2.oclIsTypeOf(Travail) or b2.oclIsTypeOf(Etude) = false )) or ((b1.oclIsTypeOf(Etude) or b1.oclIsTypeOf(Etude) = false) and (b2.oclIsTypeOf(Etude) or b2.oclIsTypeOf(Travail) = false )) )", "file": "ocl-dataset/dataset/repos/julienlecuyer/SIG/model/sig.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/csurgotamas/Evilstore/hu.bme.mit.inf.evilstore.MetaEvilStore/model/evilsystem.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.myClass.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(fromElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement", "expression": "self.fromElement.oclIsTypeOf(Class) or self.fromElement.oclIsTypeOf(Operation)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement$message", "expression": "'The source model element may only be of type Class or Operation'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped", "expression": "self.toElements->forAll(element : MappableElement | if element.oclIsKindOf(Classifier) then self.fromElement.oclIsKindOf(Classifier) else element.oclIsTypeOf(self.fromElement.oclType()) endif)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped$message", "expression": "'Mapping must be between same types of elements'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping", "expression": "let clazz : Class = if fromElement.oclIsTypeOf(Operation) then fromElement.oclAsType(Operation).Classifier else fromElement endif in self.Instantiation.externalAspect.structuralView.classes->includes(clazz) and self.toElements->forAll(element : MappableElement | let clazz : Class = if element.oclIsTypeOf(Operation) then element.oclAsType(Operation).Classifier else element endif in if clazz.oclIsKindOf(PrimitiveType) then self.Instantiation.Aspect.structuralView.types->includes(clazz) else self.Instantiation.Aspect.structuralView.classes->includes(clazz) endif)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping$message", "expression": "'Source must be from depending aspect and targets must be from current aspect'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.StructuralView.Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specifies = self) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage", "expression": "if not self.specification.oclIsUndefined() and self.specification.messages->size() > 0 then self.specifies = self.specification.messages->select(message : Message | not message.sendEvent.oclIsTypeOf(MessageOccurrenceSpecification))->asOrderedSet()->at(1).signature else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage$message", "expression": "'The first message in the MessageView must match specifies of the MessageView'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.oclIsUndefined() then if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy", "expression": "if self.specification.oclIsUndefined() and self.specifies.partial then self.affectedBy->notEmpty() else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy$message", "expression": "'An empty MessageView must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then if self.sendEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) then self.interaction.fragments->indexOf(self.sendEvent) < self.interaction.fragments->indexOf(self.receiveEvent) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "if self.messageSort <> MessageSort::reply and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.signature.oclIsUndefined() then let container : FragmentContainer = self.sendEvent.oclAsType(MessageOccurrenceSpecification).container in if container.fragments->includes(self.sendEvent) then self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(currentParameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = currentParameter)) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst", "expression": "if self.messageSort = MessageSort::createMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) >= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if not self.assignTo.oclIsUndefined() then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).getType() endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast", "expression": "if self.messageSort = MessageSort::deleteMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) <= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue", "expression": "if self.returns.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.returns.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.signature.returnType.oclType()) else true endif else if self.returns.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue$message", "expression": "'Type of return value must match the type of the return'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let container : FragmentContainer = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).container in let indexDifference : Integer = container.fragments->indexOf(self.receiveEvent) - container.fragments->indexOf(self.sendEvent) in indexDifference = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other (also, send must come before receive)'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "if self.messageSort <> MessageSort::reply and not self.receiveEvent.oclIsUndefined() then let typedElement : TypedElement = self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents in if not typedElement.oclIsUndefined() then let type : Type = if typedElement.oclIsTypeOf(Parameter) then typedElement.oclAsType(Parameter).type else if typedElement.oclIsTypeOf(Attribute) then typedElement.oclAsType(Attribute).type else if typedElement.oclIsTypeOf(Reference) then typedElement.oclAsType(Reference).type else typedElement.oclAsType(AssociationEnd).getType() endif endif endif in if type.oclIsKindOf(Classifier) then type.oclAsType(Classifier).operations->includes(self.signature) else true endif else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.value.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.parameter.type.oclType()) else true endif else if self.value.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/aoUrnToRamWorkspace/aoUrnToRam/metamodel/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.myClass.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(fromElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.oclContainer().oclAsType(StructuralView).Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specifies = self) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage", "expression": "if not self.specification.oclIsUndefined() and self.specification.messages->size() > 0 then self.specifies = self.specification.messages->select(message : Message | not message.sendEvent.oclIsTypeOf(MessageOccurrenceSpecification))->asOrderedSet()->at(1).signature else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specifiesIsFirstMessage$message", "expression": "'The first message in the MessageView must match specifies of the MessageView'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.oclIsUndefined() then if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy", "expression": "if self.specification.oclIsUndefined() and self.specifies.partial then self.affectedBy->notEmpty() else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageView", "inv": "isAffectedBy$message", "expression": "'An empty MessageView must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must have at least one affectedBy'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let sendEvent : InteractionFragment = self.sendEvent.oclAsType(InteractionFragment) in let receiveEvent : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in if sendEvent.covered->asOrderedSet()->at(1) = receiveEvent.covered->asOrderedSet()->at(1) then sendEvent.container.fragments->indexOf(self.sendEvent) < receiveEvent.container.fragments->indexOf(self.receiveEvent) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "if self.messageSort <> MessageSort::reply and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.signature.oclIsUndefined() then let container : FragmentContainer = self.sendEvent.oclAsType(MessageOccurrenceSpecification).container in if container.fragments->includes(self.sendEvent) then self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(currentParameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = currentParameter)) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst", "expression": "if self.messageSort = MessageSort::createMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) >= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if not self.assignTo.oclIsUndefined() then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).getType() endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast", "expression": "if self.messageSort = MessageSort::deleteMessage then if not self.receiveEvent.oclIsUndefined() and not self.receiveEvent.oclAsType(InteractionFragment).covered->isEmpty() then let event : InteractionFragment = self.receiveEvent.oclAsType(InteractionFragment) in event.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if event.container.fragments->includes(fragment) then event.container.fragments->indexOf(fragment) <= event.container.fragments->indexOf(event) else true endif) else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "deleteMessageIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue", "expression": "if self.returns.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.returns.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.signature.returnType.oclType()) else true endif else if self.returns.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validReturnsValue$message", "expression": "'Type of return value must match the type of the return'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "if not self.receiveEvent.oclIsUndefined() and self.receiveEvent.oclIsKindOf(MessageOccurrenceSpecification) and not self.sendEvent.oclIsUndefined() and self.sendEvent.oclIsKindOf(MessageOccurrenceSpecification) then let container : FragmentContainer = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).container in let indexDifference : Integer = container.fragments->indexOf(self.receiveEvent) - container.fragments->indexOf(self.sendEvent) in indexDifference = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other (also, send must come before receive)'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "if self.messageSort <> MessageSort::reply and not self.receiveEvent.oclIsUndefined() then let typedElement : TypedElement = self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents in if not typedElement.oclIsUndefined() then let type : Type = if typedElement.oclIsTypeOf(Parameter) then typedElement.oclAsType(Parameter).type else if typedElement.oclIsTypeOf(Attribute) then typedElement.oclAsType(Attribute).type else if typedElement.oclIsTypeOf(Reference) then typedElement.oclAsType(Reference).type else typedElement.oclAsType(AssociationEnd).getType() endif endif endif in if type.oclIsKindOf(Classifier) then type.oclAsType(Classifier).operations->includes(self.signature) else true endif else true endif else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsTypeOf(StructuralFeatureValue) then let value : StructuralFeatureValue = self.value.oclAsType(StructuralFeatureValue).value in if not value.oclIsUndefined() then let type : Type = if value.oclIsTypeOf(Attribute) then value.oclAsType(Attribute).type else if value.oclIsTypeOf(Reference) then value.oclAsType(Reference).type else value.oclAsType(AssociationEnd).getType() endif endif in type.oclIsTypeOf(self.parameter.type.oclType()) else true endif else if self.value.oclIsKindOf(LiteralSpecification) then false else true endif endif", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/svn2github/projetseg/jAoUrnToRam/metamodel/ram/RAM.ecore"}, {"context": "Professor", "inv": "nameIsNotNull", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.notnull/model/university.ecore"}, {"context": "University", "inv": "mnrUnique", "expression": "self.students->isUnique(mnr)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.unique/model/university_unique.ecore"}, {"context": "Professor", "inv": "nameIsNotNull", "expression": "name.size() > 0", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/university.ecore"}, {"context": "University", "inv": "numberOfStudentsMustBeCalculated", "expression": "(students->notEmpty() and self.numberOfStudents > 0) or ((self.students->isEmpty() or self.students = null) and self.numberOfStudents = 0)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/university.ecore"}, {"context": "University", "inv": "averageLengthMustBeSet", "expression": "(students ->notEmpty() and self.averageLength > 0) or ((self.students ->isEmpty() or self.students = null) and self.averageLength = 0)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/university.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/forms.ecore"}, {"context": "Model", "inv": "uniqueClassNames", "expression": "self.classes->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/classdiagram.ecore"}, {"context": "Class", "inv": "identifierIsMandatoryAndSingleValued", "expression": "self.identifier.multiplicity = MultiplicityKind::_'1..1'", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/classdiagram.ecore"}, {"context": "Class", "inv": "identifierIsMember", "expression": "self.attributes -> includes(self.identifier) or self.supertypes.visibleAttributes -> includes(self.identifier)", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.average/model/output/classdiagram.ecore"}, {"context": "Professor", "inv": "nameIsNotNull", "expression": "name.size()>0", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.delete/model/university.ecore"}, {"context": "Student", "inv": "mnrSize", "expression": "mnr.size()=7", "file": "ocl-dataset/dataset/repos/siba88/ame/at.ac.tuwien.big.momot.examples.university.ocl/model/university_ocl.ecore"}, {"context": "Consumer", "inv": "consumerNamesEqual", "expression": "name = rightcomp.name", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Server", "inv": "serverNoIncoming", "expression": "incoming->isEmpty()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Computer", "inv": "computerNoOutgoing", "expression": "outgoing->isEmpty()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Router", "inv": "routerHandlesSpeed", "expression": "outgoing.speed->sum() <= incoming.speed->sum()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "CopperCable", "inv": "losSpeed", "expression": "speed <= 4", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "GlassFiberCable", "inv": "highSpeed", "expression": "speed >= 4", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Cluster", "inv": "sameServics", "expression": "backup = null or backup.services->includesAll(services)", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "goodSpeed", "expression": "designSpeed <= server.speed->sum()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "onlyOneImportant", "expression": "services->select(s | s.type = ServiceType::IMPORTANT)->size() <= 1", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "backupDifferent", "expression": "backup <> self", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Service", "inv": "speedFulfilled", "expression": "type = ServiceType::BESTEFFORT or ( designSpeed <= providedBy.designSpeed and (if type = ServiceType::IMPORTANT then designSpeed <= providedBy.backup.designSpeed else type = ServiceType::WEAKCONTRACT or providedBy.backup <> null endif))", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Server", "inv": "speedValid", "expression": "speed > 0 and speed <= 5", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Consumer", "inv": "consumerNamesEqual", "expression": "name = rightcomp.name", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Server", "inv": "serverNoIncoming", "expression": "incoming->isEmpty()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Computer", "inv": "computerNoOutgoing", "expression": "outgoing->isEmpty()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Router", "inv": "routerHandlesSpeed", "expression": "outgoing.speed->sum() <= incoming.speed->sum()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "CopperCable", "inv": "losSpeed", "expression": "speed <= 4", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "GlassFiberCable", "inv": "highSpeed", "expression": "speed >= 4", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/router.ecore"}, {"context": "Cluster", "inv": "sameServics", "expression": "backup = null or backup.services->includesAll(services)", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "goodSpeed", "expression": "designSpeed <= server.speed->sum()", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "onlyOneImportant", "expression": "services->select(s | s.type = ServiceType::IMPORTANT)->size() <= 1", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "backupDifferent", "expression": "backup <> self", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Service", "inv": "speedFulfilled", "expression": "type = ServiceType::BESTEFFORT or ( designSpeed <= providedBy.designSpeed and (if type = ServiceType::IMPORTANT then designSpeed <= providedBy.backup.designSpeed else type = ServiceType::WEAKCONTRACT or providedBy.backup <> null endif))", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Server", "inv": "speedValid", "expression": "speed > 0 and speed <= 5", "file": "ocl-dataset/dataset/repos/rbill/virtualedit/VirtModel4/model/serviceexample.ecore"}, {"context": "Consumer", "inv": "", "expression": "name = rightcomp.name", "file": "ocl-dataset/dataset/repos/rbill/tuwienmodelsrepo/cosimo_computer/requirements.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/DavidZaf/Lab3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Form", "inv": "WelcomePageHasNoPreviousPage", "expression": "welcomePage.previousPage = null", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "Page", "inv": "FirstLetterInTitleIsUpperCase", "expression": "title.at(1) = title.at(1).toUpperCase()", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "Page", "inv": "NoCyclicPreviousOrNextPages", "expression": "allPreviousPages ->excludes(self) and allNextPages ->excludes(self)", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "PageElement", "inv": "ElementIdIsUnique", "expression": "PageElement.allInstances() ->select(element | element.elementId = self.elementId) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "Heading", "inv": "levelGreaterZero", "expression": "Heading.allInstances() -> select(heading | heading.level < 1) -> isEmpty()", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "SelectionCondition", "inv": "concernsOnlyElementsInNextPages", "expression": "concernsElements ->forAll(e | e.page <> item.field.page and not item.field.page.allPreviousPages ->includes(e.page))", "file": "ocl-dataset/dataset/repos/ms0828600/modelEng04/at.ac.tuwien.big.form/model/form.ecore"}, {"context": "BehaviorNode", "inv": "oneFlowInPorts", "expression": "self.flowInPort <> null", "file": "ocl-dataset/dataset/repos/ksmallros/pax-control/de.tu_bs.cs.isf.mbse.paxcontrol/model/paxcontrol.ecore"}, {"context": "BranchingNode", "inv": "minFlowOutPorts", "expression": "self.flowOutPorts->size() > 1", "file": "ocl-dataset/dataset/repos/ksmallros/pax-control/de.tu_bs.cs.isf.mbse.paxcontrol/model/paxcontrol.ecore"}, {"context": "BranchingNode", "inv": "noDataOutPorts", "expression": "self.dataOutPorts->size() = 0", "file": "ocl-dataset/dataset/repos/ksmallros/pax-control/de.tu_bs.cs.isf.mbse.paxcontrol/model/paxcontrol.ecore"}, {"context": "EventNode", "inv": "noFlowInPort", "expression": "self.flowInPort = null", "file": "ocl-dataset/dataset/repos/ksmallros/pax-control/de.tu_bs.cs.isf.mbse.paxcontrol/model/paxcontrol.ecore"}, {"context": "EventNode", "inv": "maxFlowOutPorts", "expression": "self.flowOutPorts->size() <= 1", "file": "ocl-dataset/dataset/repos/ksmallros/pax-control/de.tu_bs.cs.isf.mbse.paxcontrol/model/paxcontrol.ecore"}, {"context": "Quizz", "inv": "isNotUniqueQuestion", "expression": "questions->isUnique(id)", "file": "ocl-dataset/dataset/repos/makxan/Quizz/Workspace/Quizz/models/quizz.ecore"}, {"context": "Quizz", "inv": "noPathToEndpoint", "expression": "questions->select((next = end))->size() > 0", "file": "ocl-dataset/dataset/repos/makxan/Quizz/Workspace/Quizz/models/quizz.ecore"}, {"context": "MultipleChoice", "inv": "noRightAnswer", "expression": "answers->select((correct = true))->size() > 0", "file": "ocl-dataset/dataset/repos/makxan/Quizz/Workspace/Quizz/models/quizz.ecore"}, {"context": "MultipleChoice", "inv": "isNotUniqueAnswer", "expression": "answers->isUnique(id)", "file": "ocl-dataset/dataset/repos/makxan/Quizz/Workspace/Quizz/models/quizz.ecore"}, {"context": "Processus", "inv": "suivant", "expression": "self.activites -> one( a : Activite | a.suivante.oclIsUndefined())", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Processus", "inv": "precedent", "expression": "self.activites -> one(a : Activite | a.precedente.oclIsUndefined())", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Activite", "inv": "nomUnique", "expression": "Activite.allInstances()->one(a : Activite | a.name = self.name)", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Activite", "inv": "pasDeCycle", "expression": "self.pasDansSuivant(self)", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Debut", "inv": "premiereActivite", "expression": "self.reference.precedente.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Fin", "inv": "derniersActivite", "expression": "self.reference.suivante.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP.ecore"}, {"context": "Sequence", "inv": "suivant", "expression": "self.activites -> one( a : Activite | a.suivante.oclIsUndefined())", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP-parallel.ecore"}, {"context": "Sequence", "inv": "precedent", "expression": "self.activites -> one(a : Activite | a.precedente.oclIsUndefined())", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP-parallel.ecore"}, {"context": "Activite", "inv": "nomUnique", "expression": "Activite.allInstances()->one(a : Activite | a.name = self.name)", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP-parallel.ecore"}, {"context": "Activite", "inv": "pasDeCycle", "expression": "self.pasDansSuivant(self)", "file": "ocl-dataset/dataset/repos/TheSwatch/IDMProject/metamodels/LDP-parallel.ecore"}, {"context": "WebApplication", "inv": "mustHaveName", "expression": "not self.name.oclIsUndefined() and name <>''", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "uniqueEntities", "expression": "self.entities->forAll(e1 : Entity, e2 : Entity | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "pageForEntity", "expression": "DynamicPage.allInstances()->collect(entity)->asSet() = Entity.allInstances()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "singleHomePage", "expression": "webpages->collect(homeLink.target)->forAll(p | p = self.homePage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "checkDate", "expression": "creationDateBeforeGoLive()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "Entity", "inv": "uniqueAttributes", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebPage", "inv": "staticPageLinkTarget", "expression": "self.homeLink.target.oclIsTypeOf(StaticPage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "mustHaveName", "expression": "not self.name.oclIsUndefined() and name <> ''", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution_ohne_ocl.ecore"}, {"context": "WebApplication", "inv": "mustHaveUniqueEntityName", "expression": "self.entities->collect(name).oclAsSet()->size() = self.entities->size()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 2/at.fh-hagenberg.swml.solution/model/solution_ohne_ocl.ecore"}, {"context": "WebApplication", "inv": "mustHaveName", "expression": "not self.name.oclIsUndefined() and name <>''", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "uniqueEntities", "expression": "self.entities->forAll(e1 : Entity, e2 : Entity | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "pageForEntity", "expression": "DynamicPage.allInstances()->collect(entity)->asSet() = Entity.allInstances()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "singleHomePage", "expression": "webpages->collect(homeLink.target)->forAll(p | p = self.homePage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "checkDate", "expression": "creationDateBeforeGoLive()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "Entity", "inv": "uniqueAttributes", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebPage", "inv": "staticPageLinkTarget", "expression": "self.homeLink.target.oclIsTypeOf(StaticPage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 1/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "mustHaveName", "expression": "not self.name.oclIsUndefined() and name <>''", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "uniqueEntities", "expression": "self.entities->forAll(e1 : Entity, e2 : Entity | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "pageForEntity", "expression": "DynamicPage.allInstances()->collect(entity)->asSet() = Entity.allInstances()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "singleHomePage", "expression": "webpages->collect(homeLink.target)->forAll(p | p = self.homePage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebApplication", "inv": "checkDate", "expression": "creationDateBeforeGoLive()", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "Entity", "inv": "uniqueAttributes", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "WebPage", "inv": "staticPageLinkTarget", "expression": "self.homeLink.target.oclIsTypeOf(StaticPage)", "file": "ocl-dataset/dataset/repos/FH-SE-Master/Model-Driven-Engineering/\u00dcbung 3/at.fh-hagenberg.swml.solution/model/solution.ecore"}, {"context": "DataClass", "inv": "NonSelf_contains", "expression": "Tuple { message : String = 'The \\'DataClass\\' \"' + self.toString() + '\" cannot contain itself', status : Boolean = not self.contains -> closure(contains) -> includes(self) }.status", "file": "ocl-dataset/dataset/repos/seyyedshah/modelcataloguenext/modelcataloguenext/model/mcn.ecore"}, {"context": "DataClass", "inv": "NonSelf_extends", "expression": "Tuple { message : String = 'The \\'DataClass\\' \"' + self.toString() + '\" cannot extend itself', status : Boolean = not self.extends -> closure(extends) -> includes(self) }.status", "file": "ocl-dataset/dataset/repos/seyyedshah/modelcataloguenext/modelcataloguenext/model/mcn.ecore"}, {"context": "DataClass", "inv": "NonSelf_contains", "expression": "Tuple { message : String = 'The \\'DataClass\\' \"' + self.toString() + '\" cannot contain itself', status : Boolean = not self.contains -> closure(contains) -> includes(self) }.status", "file": "ocl-dataset/dataset/repos/seyyedshah/modelcataloguenext/modelcataloguenext.generator/data/mcn.ecore"}, {"context": "DataClass", "inv": "NonSelf_extends", "expression": "Tuple { message : String = 'The \\'DataClass\\' \"' + self.toString() + '\" cannot extend itself', status : Boolean = not self.extends -> closure(extends) -> includes(self) }.status", "file": "ocl-dataset/dataset/repos/seyyedshah/modelcataloguenext/modelcataloguenext.generator/data/mcn.ecore"}, {"context": "Workflow", "inv": "exactly_one_startnode", "expression": "self.contains_nodes->select(n|n.oclIsTypeOf(StartNode))->size()=1", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "Workflow", "inv": "at_least_one_endnode", "expression": "self.contains_nodes->select(n|n.oclIsTypeOf(EndNode))->size()>0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "Workflow", "inv": "too_few_arcs", "expression": "(self.contains_arcs->size()) >= (self.contains_nodes->size()-1)", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "Activity", "inv": "at_least_one_incoming_arc", "expression": "self.incoming->size() > 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "Activity", "inv": "at_least_one_outgoing_arc", "expression": "self.outgoing->size() > 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "StartNode", "inv": "at_least_one_outgoing", "expression": "self.outgoing->size() > 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "StartNode", "inv": "no_incoming_arcs", "expression": "self.incoming->size() = 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "EndNode", "inv": "at_least_one_incoming", "expression": "self.incoming->size() > 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "EndNode", "inv": "no_outgoing_arcs", "expression": "self.outgoing->size() = 0", "file": "ocl-dataset/dataset/repos/Vectovox/DAT240-2014-Group3/WFE/model/wfe.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/old/smarthouse/model/SmartHouse.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(vm : VM | self.plc <> vm.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement.ecore"}, {"context": "VM", "inv": "FrequentCloser", "expression": "frequent->forAll(v : VM | self.plc.near->includes(v.plc) or self.plc = v.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement.ecore"}, {"context": "PM", "inv": "ResourceLimit", "expression": "host->collect(e | e.req)->sum() <= res", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement.ecore"}, {"context": "System", "inv": "ResourceConstraint", "expression": "pm->forAll(p : PM | vm ->select(v : VM | (v.plc = p)) ->collect(v : VM | v.req)->sum() < p.res )", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-O-O.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(vm : VM | self.plc <> vm.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-O-O.ecore"}, {"context": "VM", "inv": "FrequentCloser", "expression": "frequent->forAll(v : VM | self.plc.near->includes(v.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-O-O.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/SmartHouse.ecore"}, {"context": "System", "inv": "ResourceConstraint", "expression": "pm->forAll(p : PM | vm->select(v : VM | (v.plc = p)) ->collect(v : VM | v.req)->sum() < p.res )", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-Backup.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(vm : VM | self.plc <> vm.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-Backup.ecore"}, {"context": "VM", "inv": "FrequentCloser", "expression": "frequent->forAll(v : VM | self.plc.near->includes(v.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/VmPlacement-Backup.ecore"}, {"context": "VM", "inv": "HARD_CoreLimit", "expression": "self.core < self.plc.core", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/generated-simple.ecore"}, {"context": "VM", "inv": "BackupRemote", "expression": "backup->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/generated-simple.ecore"}, {"context": "VM", "inv": "Priority_FrequentNear", "expression": "30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/generated-simple.ecore"}, {"context": "VM", "inv": "FrequentNear", "expression": "frqt->forAll(v|v.plc.near->includes(self.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/generated-simple.ecore"}, {"context": "PM", "inv": "HARD_MemLimit", "expression": "hosting->collect(e|e.mem)->sum() < mem", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/generated-simple.ecore"}, {"context": "System", "inv": "ResourceConstraint", "expression": "pm->forAll(p : PM | vm ->select(v : VM | (v.plc = p)) ->collect(v : VM | v.req)->sum() < p.res )", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/Copy of VmPlacement.ecore"}, {"context": "System", "inv": "LimitedVMs", "expression": "VM.allInstances()->size() < 10", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/Copy of VmPlacement.ecore"}, {"context": "PM", "inv": "ResourceLimit", "expression": "host->collect(e | e.req)->sum() <= res", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace/model/Copy of VmPlacement.ecore"}, {"context": "VM", "inv": "HARD_CoreLimit", "expression": "self.core <= self.plc.core", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_BackupSplit", "expression": "80", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_SyncPeakSplit", "expression": "40", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "SyncPeakSplit", "expression": "syncPeak->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_FrequentNear", "expression": "30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "FrequentNear", "expression": "frqt->forAll(v|v.plc.near->includes(self.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_SecuritySatisfied", "expression": "10 * stability", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "SecuritySatisfied", "expression": "plc.stable = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "HARD_BitCompliant", "expression": "self.bit64 implies self.plc.bit64", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "PM", "inv": "HARD_MemLimit", "expression": "hosting->collect(e|e.mem)->sum()<=mem", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "PM", "inv": "Priority_Consolidation", "expression": "20", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "PM", "inv": "Consolidation", "expression": "hosting->size() = 0", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "PM", "inv": "Priority_ThroughputBalance", "expression": "60", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "PM", "inv": "ThroughputBalance", "expression": "hosting->collect(e|e.tp)->sum() <= tpLimit", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/z4/test-configs/10times5/generated-casestudy.ecore"}, {"context": "VM", "inv": "HARD_CoreLimit", "expression": "self.core <= self.plc.core", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "VM", "inv": "Priority_BackupSplit", "expression": "80", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "VM", "inv": "Priority_FrequentNear", "expression": "30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "VM", "inv": "FrequentNear", "expression": "frqt->forAll(v|v.plc.near->includes(self.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "PM", "inv": "HARD_MemLimit", "expression": "hosting->collect(e|e.mem)->sum() < mem", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-simple.ecore"}, {"context": "VM", "inv": "HARD_CoreLimit", "expression": "self.core <= self.plc.core", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_BackupSplit", "expression": "80", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "BackupSplit", "expression": "backup->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_SyncPeakSplit", "expression": "40", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "SyncPeakSplit", "expression": "syncPeak->forAll(e|e.plc <> self.plc)", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_FrequentNear", "expression": "30", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "FrequentNear", "expression": "frqt->forAll(v|v.plc.near->includes(self.plc))", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "Priority_SecuritySatisfied", "expression": "10 * stability", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "SecuritySatisfied", "expression": "plc.stable = true", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "VM", "inv": "HARD_BitCompliant", "expression": "self.bit64 implies self.plc.bit64", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "PM", "inv": "HARD_MemLimit", "expression": "hosting->collect(e|e.mem)->sum()<=mem", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "PM", "inv": "Priority_Consolidation", "expression": "20", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "PM", "inv": "Consolidation", "expression": "hosting->size() = 0", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "PM", "inv": "Priority_ThroughputBalance", "expression": "60", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "PM", "inv": "ThroughputBalance", "expression": "hosting->collect(e|e.tp)->sum() <= tpLimit", "file": "ocl-dataset/dataset/repos/songhui/cspadapt/vmplacement/vmplace.tests/model/generated-casestudy.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "entityNameUniques", "expression": "Entity.allInstances()->forAll(e1 | self<>e1 implies self.name<>e1.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "entityHasAttributesAndOneId", "expression": "not(self.entityAttribute->isEmpty()) and self.superType=null implies (self.entityAttribute->one(a | a.isId=true))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "entityHasAttributesAndOneIdSubType", "expression": "(not(self.entityAttribute->isEmpty()) and self.superType<>null) implies (self.entityAttribute->forAll(a | a.isId=false))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "superTypeNotSelf", "expression": "self.superType<>null implies self.superType<>self", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "typeNoneHasEnumerationType", "expression": "self.type=AttributeType::None implies self.enumerationType<>null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "typeNotNoneHasNoEnumerationType", "expression": "self.type<>AttributeType::None implies self.enumerationType=null", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "ifIdThenMandatory", "expression": "self.isId=true implies self.mandatory=true", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Model", "inv": "oneWelcomeForm", "expression": "self.modelForm->notEmpty() implies self.modelForm->one(f | f.isWelcomeForm=true)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "lowerBoundLargerZero", "expression": "self->forAll(self.lowerBound>=0)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "lowerBoundIsLessThanUpperBound", "expression": "self.upperBound<>-1 implies self.upperBound >= self.lowerBound", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "upperBoundLargerThanMinusOne", "expression": "self->forAll(self.upperBound = -1 or self.upperBound > 0)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositeRelationshipPointsToThisRelationship", "expression": "self.opposite<>null implies (self.opposite.opposite=self)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositetargetEntityIsThisSourceEntity", "expression": "self.opposite<>null implies (self.Entity=opposite.target)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositeCannotBeSelf", "expression": "self.opposite<>self", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "formNameUnique", "expression": "Form.allInstances()->forAll(f1 | self<>f1 implies self.name<>f1.name)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "attributesFromFormEntity", "expression": "self.pages->forAll(pa | pa.pageElements->select( oclIsKindOf(AttributePageElement) )->forAll(pa:AttributePageElement | ((self.formEntity->closure(e | e.superType)).entityAttribute)->includes(pa.attributeRef) ) )", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "relationshipsFromFormEntity", "expression": "self.pages->forAll(pa | pa.pageElements->select( oclIsKindOf(RelationshipPageElement) )->forAll(pa:RelationshipPageElement | (self.formEntity.relationship)->includes(pa.relationshipRef) ) )", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "TableRelationshipPageElement", "inv": "columnAttributesFromTargetEntities", "expression": "self.columns->forAll(col | self.relationshipRef.target.entityAttribute->includes(col.attributeReference))", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "Condition", "inv": "PageXORPageElementOrNone", "expression": "(self.targetPageElement<>null implies self.targetPage=null) and (self.targetPage<>null implies self.targetPageElement=null)", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "notSameChildren", "expression": "self.child2<>self.child1", "file": "ocl-dataset/dataset/repos/e0725675/ModelEngineeringWS14/lab1/EFML/model/forms.ecore"}, {"context": "PetriNet", "inv": "voidPetriName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "PetriNet", "inv": "sameNodeName", "expression": "self.petriNetElements->select(p : PetriNetElement | p.oclIsKindOf(Node))->forAll(j : Node, k : Node | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Node", "inv": "voidNodeName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Arc", "inv": "positiveMultiplicity", "expression": "multiplicity > 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Arc", "inv": "nextNodeNotInSamePetriNet", "expression": "self.petriNet = self.successor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Arc", "inv": "previousNodeNotInSamePetriNet", "expression": "self.petriNet = self.predecessor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Arc", "inv": "sameTypeOfPredecessorAndSuccessor", "expression": "self.predecessor.oclType() <> self.successor.oclType()", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Place", "inv": "positiveMarking", "expression": "marking >= 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/PetriNet.ecore"}, {"context": "Process", "inv": "nameForbidden", "expression": "name <> 'Process'", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "Process", "inv": "sameWDName", "expression": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(WorkDefinition))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "voidName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "reflexivity", "expression": "self.predecessor <> self.successor", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP03/fr.enseeiht.simplePDL/SimplePDL.ecore"}, {"context": "PetriNet", "inv": "voidPetriName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "PetriNet", "inv": "sameNodeName", "expression": "self.petriNetElements->select(p : PetriNetElement | p.oclIsKindOf(Node))->forAll(j : Node, k : Node | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Node", "inv": "voidNodeName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Arc", "inv": "positiveMultiplicity", "expression": "multiplicity > 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Arc", "inv": "nextNodeNotInSamePetriNet", "expression": "self.petriNet = self.successor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Arc", "inv": "previousNodeNotInSamePetriNet", "expression": "self.petriNet = self.predecessor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Arc", "inv": "sameTypeOfPredecessorAndSuccessor", "expression": "self.predecessor.oclType() <> self.successor.oclType()", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Place", "inv": "positiveMarking", "expression": "marking >= 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/PetriNet.ecore"}, {"context": "Process", "inv": "sameWDName", "expression": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(WorkDefinition))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Process", "inv": "sameRessourcesName", "expression": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(Ressource))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Process", "inv": "nameForbidden", "expression": "name <> 'Process'", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Process", "inv": "sameNeedSetsName", "expression": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(NeedSet))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "voidName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "reflexivity", "expression": "self.predecessor <> self.successor", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Ressource", "inv": "voidName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Ressource", "inv": "positiveQuantity", "expression": "quantity >= 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "Need", "inv": "positiveQuantity", "expression": "quantity > 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "NeedSet", "inv": "voidName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_PROJET/Sources/fr.enseeiht.metamodels/SimplePDL.ecore"}, {"context": "PetriNet", "inv": "voidPetriName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "PetriNet", "inv": "sameNodeName", "expression": "self.petriNetElements->select(p : PetriNetElement | p.oclIsKindOf(Node))->forAll(j : Node, k : Node | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Node", "inv": "voidNodeName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Arc", "inv": "positiveMultiplicity", "expression": "multiplicity > 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Arc", "inv": "nextNodeNotInSamePetriNet", "expression": "self.petriNet = self.successor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Arc", "inv": "previousNodeNotInSamePetriNet", "expression": "self.petriNet = self.predecessor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Arc", "inv": "sameTypeOfPredecessorAndSuccessor", "expression": "self.predecessor.oclType() <> self.successor.oclType()", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "Place", "inv": "positiveMarking", "expression": "marking >= 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/PetriNet.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl.m2t/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP04/fr.enseeiht.simplepdl.m2t/SimplePDL.ecore"}, {"context": "PetriNet", "inv": "voidPetriName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "PetriNet", "inv": "sameNodeName", "expression": "self.petriNetElements->select(p : PetriNetElement | p.oclIsKindOf(Node))->forAll(j : Node, k : Node | j <> k implies j.name <> k.name)", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Node", "inv": "voidNodeName", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "positiveMultiplicity", "expression": "multiplicity > 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "nextNodeNotInSamePetriNet", "expression": "self.petriNet = self.successor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "previousNodeNotInSamePetriNet", "expression": "self.petriNet = self.predecessor.petriNet", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "sameTypeOfPredecessorAndSuccessor", "expression": "self.predecessor.oclType() <> self.successor.oclType()", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "Place", "inv": "positiveMarking", "expression": "marking >= 0", "file": "ocl-dataset/dataset/repos/mpizenberg/GLS_TP08/fr.enseeiht.simplepdl2petrinet/PetriNet.ecore"}, {"context": "User", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = User.allInstances () -> forAll (u1, u2 | u1 <> u2 implies u1.idUser <> u2.idUser) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Publication", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = Publication.allInstances () -> forAll (p1, p2 | p1 <> p2 implies p1.idPub <> p2.idPub) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Enemity", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user1 <> self.user2 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Friendship", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user3 <> self.user4 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "PubliRef", "inv": "Relation", "expression": "Tuple { message : String = 'Publication must be different from Origin publication', status : Boolean = self.publi <> self.publiRef }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "User", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = User.allInstances () -> forAll (u1, u2 | u1 <> u2 implies u1.idUser <> u2.idUser) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Publication", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = Publication.allInstances () -> forAll (p1, p2 | p1 <> p2 implies p1.idPub <> p2.idPub) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Enemity", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user1 <> self.user2 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Friendship", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user3 <> self.user4 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "PubliRef", "inv": "Relation", "expression": "Tuple { message : String = 'Publication must be different from Origin publication', status : Boolean = self.publi <> self.publiRef }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "User", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = User.allInstances () -> forAll (u1, u2 | u1 <> u2 implies u1.idUser <> u2.idUser) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Publication", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = Publication.allInstances () -> forAll (p1, p2 | p1 <> p2 implies p1.idPub <> p2.idPub) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Enemity", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user1 <> self.user2 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "Friendship", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user3 <> self.user4 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "PubliRef", "inv": "Relation", "expression": "Tuple { message : String = 'Publication must be different from Origin publication', status : Boolean = self.publi <> self.publiRef }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF(WithoutLike).ecore"}, {"context": "User", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = User.allInstances () -> forAll (u1, u2 | u1 <> u2 implies u1.idUser <> u2.idUser) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Publication", "inv": "UniqueId", "expression": "Tuple { message : String = 'User must have a unique id', status : Boolean = Publication.allInstances () -> forAll (p1, p2 | p1 <> p2 implies p1.idPub <> p2.idPub) }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Enemity", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user1 <> self.user2 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "Friendship", "inv": "Relation", "expression": "Tuple { message : String = 'User1 must be different from user2', status : Boolean = self.user3 <> self.user4 }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "PubliRef", "inv": "Relation", "expression": "Tuple { message : String = 'Publication must be different from Origin publication', status : Boolean = self.publi <> self.publiRef }.status", "file": "ocl-dataset/dataset/repos/elisedcvl/ProjectGMFDecourval/DecourvalProjectGMF/model/FriendzGMF.ecore"}, {"context": "ComponentType", "inv": "AtomicOrComposed", "expression": "Tuple { message : String = 'Component type \\'' + name + '\\' cannot have connectors and behavior', status : Boolean = behavior.equalsIgnoreCase('') or self.connectors->isEmpty() }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.xmontiarc.model/ur1.diverse.xmontiarc.model/xmontiarc.ecore"}, {"context": "Port", "inv": "NameIsLowerCase", "expression": "Tuple { message : String = 'Port \\'' + name + '\\' must be lowercase', status : Boolean = let firstLetter : String = (name).substring(0,1) in firstLetter.toLowerCase() = firstLetter }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.xmontiarc.model/ur1.diverse.xmontiarc.model/xmontiarc.ecore"}, {"context": "Connector", "inv": "DifferentSourceAndTarget", "expression": "Tuple { message : String = 'Connectors cannot have the same source and target.', status : Boolean = source <> target }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.xmontiarc.model/ur1.diverse.xmontiarc.model/xmontiarc.ecore"}, {"context": "Connector", "inv": "MatchingPortTypes", "expression": "Tuple { message : String = 'The data types of source and target ports must match.', status : Boolean = source <> target }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.xmontiarc.model/ur1.diverse.xmontiarc.model/xmontiarc.ecore"}, {"context": "Subcomponent", "inv": "NameIsLowerCase", "expression": "Tuple { message : String = '\\'' + name + '\\' must be lowercase', status : Boolean = let firstLetter : String = (name).substring(0,1) in firstLetter.toLowerCase() = firstLetter }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.xmontiarc.model/ur1.diverse.xmontiarc.model/xmontiarc.ecore"}, {"context": "CDClass", "inv": "ClassNameBeginsUpperCase", "expression": "Tuple { message : String = 'The name of class \"' + name + '\" must begin uppercase.', status : Boolean = let firstLetter: String = (name).substring(1,1) in firstLetter.toUpperCase() = firstLetter }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.cd.model/ur1.diverse.cd.model/cd.ecore"}, {"context": "CDClass", "inv": "UnambiguousAttributeNames", "expression": "Tuple { message : String = 'The names of all attributes of a class must be unambiguous.', status : Boolean = true }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.cd.model/ur1.diverse.cd.model/cd.ecore"}, {"context": "CDAttribute", "inv": "AttributeNameBeginsLowerCase", "expression": "Tuple { message : String = 'The name of class \"' + name + '\" must begin lowercase.', status : Boolean = let firstLetter: String = (name).substring(1,1) in firstLetter.toLowerCase() = firstLetter }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.cd.model/ur1.diverse.cd.model/cd.ecore"}, {"context": "CDConstant", "inv": "ConstantNameBeginsUpperCase", "expression": "Tuple { message : String = 'The name of constant \"' + name + '\" must be all uppercase.', status : Boolean = name.toUpperCase() = name }.status", "file": "ocl-dataset/dataset/repos/awortmann/xmontiarc/ur1.diverse.cd.model/ur1.diverse.cd.model/cd.ecore"}, {"context": "Module", "inv": "notEmpty", "expression": "rules->notEmpty() or helpers->notEmpty()", "file": "ocl-dataset/dataset/repos/martin-fleck/momot/examples/tse/at.ac.tuwien.big.momot.examples.tse.modularization/model/Modularization.ecore"}, {"context": "Module", "inv": "notEmpty", "expression": "rules->notEmpty() or helpers->notEmpty()", "file": "ocl-dataset/dataset/repos/martin-fleck/momot/examples/tse/at.ac.tuwien.big.momot.examples.tse.resources/metamodel/Modularization.ecore"}, {"context": "Schema", "inv": "relationNameUnique", "expression": "if (self.ScontainsRelations -> size() > 0) then self.ScontainsRelations -> forAll(r1,r2 | r1 <> r2 implies r1.name <> r2.name) else true endif", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "LinkFK", "inv": "unCompleteLink", "expression": "if(((self.target.oclIsUndefined())or not(self.source -> size() > 0)))then false else true endif", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "LinkFK", "inv": "invalidTargetRelation", "expression": "if(self.target.oclIsUndefined())then false else if (self.target.containsAttributes -> size()>0)then if (self.target.containsAttributes -> exists(isPK <> null))then true else if (self.target.containsAttributes -> exists(isUN = true))then true else false endif endif else false endif endif", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Relation", "inv": "almostOneAttribute", "expression": "self.containsAttributes -> size() >= 1", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Relation", "inv": "relationHasPK", "expression": "not self.hasPK -> isEmpty()", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Relation", "inv": "attributeNameUnique", "expression": "if (self.containsAttributes -> size() > 0) then self.containsAttributes -> forAll(a1,a2 | a1 <> a2 implies a1.name <> a2.name) else true endif", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Relation", "inv": "relationNameDefined", "expression": "not self.name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Attribute", "inv": "attributeNameDefined", "expression": "not self.name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Attribute", "inv": "pkWellFormed", "expression": "if (self.isPK.oclIsUndefined())then true else if (self.isNN and self.isUN)then true else false endif endif", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Attribute", "inv": "undefinedType", "expression": "self.type <> EGenericType::UNDEFINED", "file": "ocl-dataset/dataset/repos/AngelMorenoMDE/kybdele_relational/es.kybele.kybdele.models.relational.model/model/gmf_relational_model.ecore"}, {"context": "Scheme", "inv": "uniqueTableName", "expression": "tables->forAll(table1,table2 | table1 <> table2 implies table1.name <> table2.name)", "file": "ocl-dataset/dataset/repos/varborx/org.eclipse.gmf.varbox.database/model/database.ecore"}, {"context": "Table", "inv": "uniqueColumnName", "expression": "columns->forAll(column1, column2 | column1 <> column2 implies column1.name <> column2.name)", "file": "ocl-dataset/dataset/repos/varborx/org.eclipse.gmf.varbox.database/model/database.ecore"}, {"context": "Entity", "inv": "identifierIsMember", "expression": "self.attributes -> includes(self.identifier) or self.supertypes.attributes -> includes(self.identifier)", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Entity", "inv": "validBinaryRelationship", "expression": "self.relationships -> forAll(r: Relationship | r.opposite -> isEmpty() or r.opposite.target = self and r.opposite.opposite = r)", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Attribute", "inv": "attributeTypeNoneWhenEnum", "expression": "self.enumerationType -> isEmpty() or self.type = AttributeType::None", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Relationship", "inv": "validRelationshipBounds", "expression": "self.lowerBound >= 0 and (self.lowerBound <= self.upperBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Form", "inv": "attributePageElementMapsFormEntity", "expression": "(self.consists.contains -> selectByKind(AttributePageElement)).refers_to -> forAll(a: Attribute | self.associated_with.attributes -> includes(a) or self.associated_with.supertypes -> forAll(e: Entity | e.attributes -> includes(a)))", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Form", "inv": "relationshipPageElementMapsFormEntity", "expression": "(self.consists.contains -> selectByKind(RelationshipPageElement)).refers_to -> forAll(r: Relationship | self.associated_with.relationships -> includes(r))", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Form", "inv": "tableClolumnElementMapsReferencedEntity", "expression": "(self.consists.contains -> selectByKind(Table)).consists.refers_to -> forAll(a: Attribute | self.associated_with.attributes -> includes(a) or associated_with.supertypes -> forAll(e: Entity | e.attributes -> includes(a)))", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "SelectionField", "inv": "validSelectionFieldType", "expression": "self.refers_to.type = AttributeType::Boolean xor not self.refers_to.enumerationType.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "CompositionCondition", "inv": "validCompositCondition", "expression": "self.combinesAttributeValue -> size() + self.combinesComposite -> size() = 2", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "AttributeValueCondition", "inv": "validAttributeValueCondition", "expression": "self.conditionsPageElement -> isEmpty() xor self.conditionsPage -> isEmpty()", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "EMFL_FormModel", "inv": "welcomeFormExistsAndIsUnique", "expression": "(self.forms.isWelcomeForm -> excluding(false)) -> size() = 1", "file": "ocl-dataset/dataset/repos/fexman/me4everWS14/model/forms.ecore"}, {"context": "Microservice", "inv": "typeAndVersionMatch", "expression": "microserviceType.versions->select(v:Version | v = version)->notEmpty()", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "OperationToOperationCallingDependency", "inv": "calledCorrespond", "expression": "calledMicroservice.restOperations->select(rop:RESTOperation | rop=calledOperation)->notEmpty()", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "OperationToOperationCallingDependency", "inv": "callingCorrespond", "expression": "callingMicroservice.restOperations->select(rop:RESTOperation | rop=callingOperation)->notEmpty()", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "OperationToOperationCallingDependency", "inv": "callingVersionFits", "expression": "callingMicroservice.versions->select(ver:Version|ver=callingVersion)->notEmpty()", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "MicroserviceOperationTimeSeriesPoint", "inv": "nonNullReferences", "expression": "endpoint <> null and restOperation <> null", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "MicroserviceOperationTimeSeriesPoint", "inv": "correspondingReferences", "expression": "endpoint.restOperations->select(rop:RESTOperation | rop = restOperation)->notEmpty()", "file": "ocl-dataset/dataset/repos/orcas-elite/arch-gen/01-MetamodelAndGenerator/model/anotherMicroserviceMetamodel.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library?.loans->select(book=self)->size() <= copies", "file": "ocl-dataset/dataset/repos/Danita25/Tesina/Tutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/Danita25/Tesina/Tutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans?->isUnique(book)", "file": "ocl-dataset/dataset/repos/Danita25/Tesina/Tutorial/model/Tutorial.ecore"}, {"context": "ManufacturingSystem", "inv": "threeThereShallNotExist", "expression": "self.consistsOf->selectByKind(Step).oclAsType(ManufacturingSystemElement).responsible->excludes(self.responsible)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "ManufacturingSystem", "inv": "fiveNoEndStorage", "expression": "self.consistsOf.transition-> forAll(m:ManufacturingSystemElement| m.transition <> self.start)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "oneResponsible", "expression": "self.responsible->size() = 1", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "sevenOutputInputs", "expression": "Step.allInstances()->select(transition->includes(self))->forAll(output.outputTypes->excludesAll(self.input->selectByType(WorkPieceCondition).requiresType)=false)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "Step", "inv": "nineForEachStep", "expression": "Step.allInstances()->select(transition->includes(self))->selectByKind(Step)->forAll(speed<=self.speed)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "Responsible", "inv": "secondEachResponsibleThree", "expression": "let ms:Integer = Step.allInstances()->select(responsible=self)->size() in ms>0 and ms<4", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "StoragePoint", "inv": "fourNoStartStorage", "expression": "ManufacturingSystem.allInstances()->collect(start)->includes(self) implies ManufacturingSystemElement.allInstances() -> collect(transition) -> excludes(self)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "ManufacturingSystemElement", "inv": "fiveTransitionShallOnlyConnect", "expression": "ManufacturingSystem.allInstances()->select(consistsOf->includes(self)).ManufacturingSystem::consistsOf->includesAll(self.transition)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "CompositeStep", "inv": "eightForCompositeSteps", "expression": "self.input->selectByKind(WorkPieceCondition).requiresType ->includesAll(self.contains.start.stores) and self.output.outputTypes->includesAll(self.contains.end.stores)", "file": "ocl-dataset/dataset/repos/Qw4z1/mds/assignment3/model/manufacturingSystem.ecore"}, {"context": "Resource", "inv": "UniqueCRUDVerbs", "expression": "self.hasCRUDActivity->isUnique(CRUDVerb)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueInputMediaTypes", "expression": "self.hasInputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueOutputMediaTypes", "expression": "self.hasOutputRepresentation->isUnique(MediaType)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "UniqueNamingProperty", "expression": "self.hasProperty->notEmpty() implies self.hasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "AlgoResHaveNoProperties", "expression": "(self.isAlgorithmic = true) implies self.hasProperty->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "Resource", "inv": "CRUDResHaveAtLeastOneProperty", "expression": "(self.isAlgorithmic = false) implies self.hasProperty->notEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "RESTfulServiceCIM", "inv": "UniqueResourceNames", "expression": "self.hasResources->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/CIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasSetter->one(setsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.algoModelHasProperty->forAll(rAlgoModelProperty | self.algoModelHasGetter->one(getsProperty.name = rAlgoModelProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.algoModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerNotAllowedCRUDVerbs", "expression": "self.algoControllerHasCRUDActivity->select(CRUDActivity| CRUDActivity.crudVerb =2 or CRUDActivity.crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerHasUniqueCRUDActivity", "expression": "self.algoControllerHasCRUDActivity->size() = 1", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "AlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( self.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) ) and ( self.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetAlgoController = self) implies self.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantSettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasSetter->one(setsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "existantGettersForAllProperties", "expression": "self.hasRMManagerProperty->forAll(rMManagerProperty | self.rMManagerHasGetter->one(getsProperty.name = rMManagerProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModelManager", "inv": "uniqueLinklistProperty", "expression": "self.hasRMManagerProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueNamingProperty", "expression": "self.rModelHasProperty->one(isNamingProperty = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.rModelHasProperty->one(isPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantSettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasSetter->one(setsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "existantGettersForAllProperties", "expression": "self.rModelHasProperty->forAll(rModelProperty | self.rModelHasGetter->one(getsProperty.name = rModelProperty.name))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceModel", "inv": "uniqueLinklistProperty", "expression": "self.rModelHasProperty->one(name = 'linklist')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueCREATEActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 0)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerHasUniqueREADActivity", "expression": "self.rCManagerHasCRUDActivity->one(crudVerb = 1)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerNotAllowedCRUDActivityVerbs", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 2 or crudVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsCreateHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceControllerManager", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToSelf", "expression": "self.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and hasTargetRCManager = self and linkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerHasUniqueCRUDActivities", "expression": "self.rControllerHasCRUDActivity->isUnique(crudVerb)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerNotAllowedCRUDActivitiyVerbs", "expression": "self.rControllerHasCRUDActivity->select(crudVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity.hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsUpdateHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 2) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerReadActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) implies self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 1) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "ResourceController", "inv": "rControllerUpdateActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) implies self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) ) and ( self.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Sibling' and hasTargetRController = self) implies self.rControllerHasCRUDActivity->exists(crudVerb = 3) and self.rControllerHasCRUDActivity->exists(crudVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "PIMComponentProperty", "inv": "primaryIdentifierMapsToPrimaryKey", "expression": "(self.isPrimaryIdentifier = true) implies (self.isMappedToRDBMSColumn.isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RDBMSTable", "inv": "uniquePrimaryKey", "expression": "self.hasRDBMSColumns->one(isPrimaryKey = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "controllersHaveUniqueURIs", "expression": "self->isUnique(Bag{self.hasResourceController.controllerURI, self.hasResourceControllerManager.controllerURI, self.hasAlgoResourceController.controllerURI})", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModels", "expression": "self.hasResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceModelManagers", "expression": "self.hasResourceModelManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoModels", "expression": "self.hasAlgoResourceModel->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllers", "expression": "self.hasResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceControllerManagers", "expression": "self.hasResourceControllerManager->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueResourceAlgoControllers", "expression": "self.hasAlgoResourceController->isUnique(name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniquePIMComponentNames", "expression": "self->isUnique(Bag{self.hasResourceModel.name, self.hasResourceController.name, self.hasResourceModelManager.name, self.hasResourceControllerManager, self.hasAlgoResourceModel.name, self.hasAlgoResourceController.name})", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "uniqueRModelRDBMSTableMapping", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | rModel1.name <> rModel2.name implies rModel1.isMappedToRDBMSTable.name <> rModel2.isMappedToRDBMSTable.name)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "validDatabaseReferentialIntegrity", "expression": "self.hasResourceModel->forAll(rModel1, rModel2 | (rModel1.hasRelatedModelManager.hasRelatedModel = rModel2) implies (self.hasRDBMSTable->forAll(rdbmsTableA, rdbmsTableB | (rModel1.isMappedToRDBMSTable = rdbmsTableA and rModel2.isMappedToRDBMSTable = rdbmsTableB) implies (rModel1.rModelHasProperty->forAll(rModelPropertyA | (rModelPropertyA.isPrimaryIdentifier = true) implies (rdbmsTableB.hasRDBMSColumns->one(isForeignKey = true and name = rModelPropertyA.name and referencesRDBMSTable = rdbmsTableA)))))))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRControllerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceController.rControllerHasCRUDActivity->forAll(rControllerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rControllerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceController->one(rControllerHasCRUDActivity = rControllerCRUDActivityA and hasAssociatedRModel.isMappedToRDBMSTable = rControllerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "correctlyMatchingRCManagerCRUDActivitiesWithRDBMSActivities", "expression": "self.hasResourceControllerManager.rCManagerHasCRUDActivity->forAll(rCManagerCRUDActivityA | self.hasDatabaseController.hasRDBMSActivity->forAll(rdbmsActivityA | (rCManagerCRUDActivityA.isMappedToRDBMSActivity = rdbmsActivityA) implies (self.hasResourceControllerManager->one(rCManagerHasCRUDActivity = rCManagerCRUDActivityA and hasAssociatedRMManager.hasRelatedModel.isMappedToRDBMSTable = rCManagerCRUDActivityA.isMappedToRDBMSActivity.altersRDBMSTable))))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll( rControllerA | ( (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Child' and hasTargetRController = rControllerA) implies (rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerCreateActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsReadHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rCManagerReadActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasResourceControllerManager->forAll(rCManagerA | self.hasResourceController->forAll(rControllerA | ( (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( rCManagerA.rCManagerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies (rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager) and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetRCManager = rCManagerA) implies rControllerA.hasAssociatedRModel.hasRelatedModelManager = rCManagerA.hasAssociatedRMManager and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsCreateHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerDeleteActivityAddsReadHypermediaLinkToParentRCManager", "expression": "self.hasResourceController->forAll( rControllerA | self.hasResourceControllerManager->forAll( rCManagerA | ( rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 3).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRCManager = rCManagerA) implies rCManagerA.hasAssociatedRMManager.hasRelatedModel = rControllerA.hasAssociatedRModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists( crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerB.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerReadAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "rControllerUpdateAddsHypermediaLinkToRAlgoController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 0 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) ) and ( rControllerA.rControllerHasCRUDActivity->select(crudVerb = 2).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Child' and hasTargetAlgoController = algoControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsReadHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 1 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 1) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsUpdateHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 2 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 2) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "RESTfulServicePIM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasAlgoResourceController->forAll(algoControllerA | self.hasResourceController->forAll(rControllerA | ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 0).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 0) ) ) or ( ( rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) implies algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) ) and ( algoControllerA.algoControllerHasCRUDActivity->select(crudVerb = 1).hasCRUDActivityHandler.hasHypermediaFunction.hasHypermediaLink->one(linkCRUDVerb = 3 and linkType = 'Parent' and hasTargetRController = rControllerA) implies rControllerA.hasAssociatedRModel.hasRelatedAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.rControllerHasCRUDActivity->exists(crudVerb = 3) and algoControllerA.algoControllerHasCRUDActivity->exists(crudVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PIMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.AlgoControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerHasUniqueProperHTTPActivity", "expression": "( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 3 or HTTPVerb = 2)->isEmpty() and self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->size() = 1 )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "AlgoControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceController", "inv": "algoControllerActivityAddsHypermediaLinkToSelf", "expression": "( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0) ) ) or ( ( self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) ) and ( self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self) implies self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaAlgoModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasSetterFunction->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaAlgoModelHasProperty->forAll(Property | self.JavaAlgoModelHasGetterFunction->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaAlgoResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaAlgoModelHasProperty->one(name = 'linklist') and self.JavaAlgoModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerNotAllowedVerb", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 0)->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerHasMinimumActivity", "expression": "self.JavaRControllerHasHTTPActivity->exists(HTTPVerb <> 0)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "RControllerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1 or HTTPVerb = 2 or HTTPVerb = 3)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 2 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') implies HTTPActivity.ActivityHTTPVerb = 2 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and ( HTTPActivity.ActivityHTTPVerb = 3 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') implies HTTPActivity.ActivityHTTPVerb = 3 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsPutHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerGetActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsGetHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceController", "inv": "rControllerPutActivityAddsDeleteHypermediaLinkToSelf", "expression": "( ( self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) implies self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) ) and ( self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self) implies self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "controllerURIPathAnnotation", "expression": "self.JavaRCManagerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + self.controllerURI + '\")')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerNotAllowedHTTPActivityVerbs", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 2 or HTTPVerb = 3)->isEmpty()", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "RCManagerActivitiesHaveJAXRSAnnotations", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | ( HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 ) and ( HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 ) and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(\"' + HTTPActivity.HTTPActivityURI + '\")') )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerGetActivityAddsPostHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceControllerManager", "inv": "JRCManagerPostActivityAddsGetHypermediaLinkToSelf", "expression": "self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueNamingProperty", "expression": "self.JavaRModelHasProperty->isUnique(bIsNamingProperty = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "neededRModelHibernateAnnotationsExist", "expression": "self.JavaRModelHasHibernateAnnotation->one('@Entity') and self.JavaRModelHasHibernateAnnotation->one('@Table(name=\"' + self.parentName + '\")')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniquePrimaryIdentifier", "expression": "self.JavaRModelHasProperty->isUnique(bIsPrimaryIdentifier = true)", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRModelHasProperty->forAll(Property | self.JavaRModelHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "uniqueLinkListProperty", "expression": "self.JavaRModelHasProperty->one(name = 'linklist') and self.JavaRModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModel", "inv": "properCollectionHibernateAnnotations", "expression": "let JRRModels : Sequence(JavaResourceModel) = self.hasRelatedJavaRMManager.hasRelatedJavaRModel in self.JavaRModelHasProperty->select((bIsUnique = false) and (name <> 'linklist'))->reject( Property | JRRModels->exists(JRRModel | 'SetOf' + JRRModel.name = Property.name)) ->forAll(CollectionProperty | CollectionProperty.PropertyHasHibernateAnnotation->one('@ElementCollection(fetch = FetchType.EAGER)') and CollectionProperty.PropertyHasHibernateAnnotation->one('@CollectionTable(name=\"' + self.parentName + CollectionProperty.name +'\", joinColumns=@JoinColumn(name=\"' + self.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\"))') and CollectionProperty.PropertyHasHibernateAnnotation->one('@ForeignKey(name = \"fk_' + self.parentName + '_' + CollectionProperty.name + '\")') )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueXMLRootElementAnnotation", "expression": "self.JavaRMManagerHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueSetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasSetter->one(name = 'set' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueGetterForEveryProeprty", "expression": "self.JavaRMManagerHasProperty->forAll(Property | self.JavaRMManagerHasGetter->one(name = 'get' + Property.name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "JavaResourceModelManager", "inv": "uniqueLinkListProperty", "expression": "self.JavaRMManagerHasProperty->one(name = 'linklist') and self.JavaRMManagerHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "PSMComponentProperty", "inv": "primaryIdentifierHasProperAnnotations", "expression": "( ( self.bIsPrimaryIdentifier implies ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) ) and ( ( self.PropertyHasHibernateAnnotation->one('@Id') and self.PropertyHasHibernateAnnotation->one('@GeneratedValue') ) implies self.bIsPrimaryIdentifier ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "allModelsHaveRResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | JavaRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->forAll(RelatedJavaRModel | JavaRModel.JavaRModelHasProperty->one(name = 'SetOf' + RelatedJavaRModel.name) and JavaRModel.JavaRModelHasProperty->select(name = 'SetOf' + RelatedJavaRModel.name)->forAll(JRModelProperty | JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OneToMany(fetch = FetchType.EAGER, mappedBy=\"' + JavaRModel.parentName + '\",orphanRemoval=true)') and JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OnDelete(action=OnDeleteAction.CASCADE)') ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "allModelsHavePResourcePropertiesWithProperHibernateAnnotations", "expression": "self.hasJavaRModel->forAll(JavaRModel | self.hasJavaRModel->select(ParentJRModel | ParentJRModel.hasRelatedJavaRMManager->exists(JRMManager | JRMManager.hasRelatedJavaRModel = JavaRModel)) ->forAll(ParentJRModel | JavaRModel.JavaRModelHasProperty->one(name = ParentJRModel.parentName) and JavaRModel.JavaRModelHasProperty->forAll( Property | ( (Property.name = ParentJRModel.parentName) implies ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) ) and ( ( Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=\"' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '\")') and Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = \"fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '\")') ) implies (Property.name = ParentJRModel.parentName) ) ) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rMPropertiesSettersHaveProperXMLTransientAnnotation", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasSetter->select(SetterFunction | ( JRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JRRModel | SetterFunction.name = 'setSetOf' + JRRModel.name) ) or ( AllResourceModels->select(hasRelatedJavaRMManager->exists(hasRelatedJavaRModel = JRModel)) ->exists(ParentJRModel | SetterFunction.name = 'set' + ParentJRModel.parentName) ) )->forAll(SetterFunction | SetterFunction.SetterFunctionHasJAXBAnnotation->one('@XmlTransient')) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rMPropertiesHaveColumnAnnotation", "expression": "self.hasJavaRModel->forAll(JRModel | JRModel.JavaRModelHasProperty->reject(Property | (Property.name = 'linklist') or (JRModel.hasRelatedJavaRMManager->exists(JRRModel | Property.name = 'SetOf' + JRRModel.name)) or (self.hasJavaRModel->select(JPRModel | JPRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JPRModel | JPRModel = JRModel))->exists(JPRModel | Property.name = JPRModel.parentName)) )->forAll(Property | Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@Column(name = \"' + Property.name + '\")')) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "RControllerUniqueHTTPVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRController->forAll(JRController | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel.hasRelatedJavaRMManager->exists(JRMManager | JRController.hasAssociatedJavaRModel = JRMManager.hasRelatedJavaRModel))->size() in JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 2)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 3)->size() <= numberOfParents and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) and JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "RCManagerHasUniqueHTTPActivityVerbsPerParent", "expression": "let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in self.hasJavaRCManager->forAll(JRCManager | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | ParentRModel->exists(hasRelatedJavaRMManager = JRCManager))->size() in JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() = numberOfParents and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->isUnique(name) and JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToRRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll( JRController | ( (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and hasTargetJavaRController = JRController) implies (JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerPostActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rCManagerGetActivityAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaRCManager->forAll(JRCManager | self.hasJavaRController->forAll(JRController | ( (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) ) and ( JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController) implies (JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager) implies JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerDeleteActivityAddsPostHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerDeleteActivityAddsGetHypermediaLinkToParentRCManager", "expression": "self.hasJavaRController->forAll( JRController | self.hasJavaRCManager->forAll( JRCManager | ( JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) implies JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) ) and ( JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager) implies JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerActivityAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsHypermediaLinkToParentAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB | ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB) implies algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) )", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerGetAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "rControllerPutAddsHypermediaLinkToRAlgoController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) ) and ( rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsGetHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsPutHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "ServicePSM", "inv": "algoControllerAddsDeleteHypermediaLinkToParentRController", "expression": "self.hasJavaAlgoController->forAll(algoControllerA | self.hasJavaRController->forAll(rControllerA | ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) ) ) or ( ( rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) implies algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) ) and ( algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA) implies rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) ) ) ))", "file": "ocl-dataset/dataset/repos/MichaelidouNatalia/ACE/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore"}, {"context": "Transition", "inv": "correctDelayDefinition", "expression": "maxDelay > minDelay", "file": "ocl-dataset/dataset/repos/IngServioPantoja/UAndesSirius/uniandes.mdd.example.create-xtext/uniandes.mdd.example.create-xtext/model/petrinet.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment3/at.ac.tuwien.big.statesml.transformations/metamodels/statesml.ecore"}, {"context": "Function", "inv": "uniqueNamesIfSameDatatype", "expression": "self.inParameter->forAll(c1, c2 | (c1<>c2 and c1.datatype.name = c2.datatype.name) implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "Parameter", "inv": "dataTypeContainsInLibrary", "expression": "DataTypeLibrary.allInstances().datatype.name->includes(self.datatype.name)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "DataTypeLibrary", "inv": "uniqueDataTypeNames", "expression": "self.datatype->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "everyTransitionIsTriggered", "expression": "self.transition -> select(t:Transition|t.trigger.oclIsUndefined()) -> size() = 0", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "StatesML", "inv": "uniqueSystemUnitNames", "expression": "self.systemunits->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "StatesML", "inv": "singleInitialState", "expression": "self.node -> select(n:Node|n.oclIsKindOf(State) and n.oclAsType(State).isInitial) -> size()= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "StatesML", "inv": "noFunctionsInInitialState", "expression": "self.node -> select(n:Node|n.oclIsKindOf(State) and n.oclAsType(State).isInitial).function -> isEmpty()", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "StatesML", "inv": "noFunctionsInTerminalState", "expression": "self.node -> select(n:Node|n.oclIsKindOf(State) and n.oclAsType(State).isTerminal).function -> isEmpty()", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "StatesML", "inv": "initialStateHasOneEdge", "expression": "node -> select(n:Node|n.oclIsKindOf(State) and n.oclAsType(State).isInitial).edge -> size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment1/Assignment1/model/statesml.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/zfh920922/ME_Assignment2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Person", "inv": "personName", "expression": "self.Name.size()>1", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "Course", "inv": "uniqueID", "expression": "Course.allInstances()->isUnique(ID)", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "Course", "inv": "groupAssesedByTA", "expression": "self.StudentGroups.Submitted.AssesedBy.Name = self.TeachingAssistant.Name", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "Course", "inv": "studAssessedByTA", "expression": "self.Students.Submitted.AssesedBy.Name = self.TeachingAssistant.Name", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "Group", "inv": "groupMembersInCourse", "expression": "self.GroupMember->forAll(p:Person | self.Course.Students->includes(p))", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "University", "inv": "UniName", "expression": "self.Name.size()>2", "file": "ocl-dataset/dataset/repos/Skabbkladden/TDT4250/e2/model/e2.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/raihle/Webshop-Builder-3k/Webshop_Builder_3k_Model.ecore"}, {"context": "StatesModel", "inv": "uniqueClassNames", "expression": "self.systemunits->forAll(s1, s2 | s1 <> s2 implies s1.name <> s2.name)", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "Transition", "inv": "mustDefineTriggerIfComingFromDivergence", "expression": "if(self.incoming.source = SelectionDivergence) then self.trigger->size()=1 else self.trigger->size()>=0 endif", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "multipleOutgoingEdges", "expression": "self.outgoing->size()>1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "singleIncomingEdge", "expression": "self.incoming->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "multipleIncomingEdges", "expression": "self.incoming->size()>1 and self.outgoing->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "InitialState", "inv": "noIncomingEdges", "expression": "self.incoming->size()=0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "InitialState", "inv": "onlyOneOutgoingEdge", "expression": "self.outgoing->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "InitialState", "inv": "initialStatesCannotDefineFunctionCalls", "expression": "self.functioncall->size()=0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "TerminalState", "inv": "noOutgoingEdges", "expression": "self.outgoing->size()=0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "TerminalState", "inv": "onlyOneIncomingEdge", "expression": "self.incoming->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "TerminalState", "inv": "terminalStatesCannotDefineFunctionCalls", "expression": "self.functioncall->size()=0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "MiddleState", "inv": "onlyOneOutgoingEdge", "expression": "self.outgoing->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "MiddleState", "inv": "onlyOneIncomingEdge", "expression": "self.incoming->size()=1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 1/Group16_Lab1/model/statesml.ecore"}, {"context": "Function", "inv": "AtMostOneReturnParameter", "expression": "self.parameters->select(p | p.direction = ParameterDirectionKind::RETURN)->size() <= 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "AttributeSpecificationValidAttribute", "expression": "self.attributes->union(self.systemUnit.attributes)->includesAll(self.processibleEvents->selectByKind(ChangeEvent).changeExpression.booleanFunctionCall.parameters.valueSpecification->selectByKind(AttributeValueSpecification).attribute)", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneInitialState", "expression": "self.nodes->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "MaxOneTerminalState", "expression": "self.nodes->selectByKind(State)->select(s | s.terminal)->size() <= 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoIncomingEdgeForInitalState", "expression": "self.edges.target->selectByKind(State)->select(s | s.initial)->size() = 0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneOutgoingEdgeForInitalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.initial)->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "OneIncomingEdgeForTerminalState", "expression": "self.nodes->selectByType(State)->select(s | s.terminal)->size() = 0 or self.edges.target->selectByType(State)->select(s | s.terminal)->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "StateSystem", "inv": "NoOutgoingEdgeForTerminalState", "expression": "self.edges.source->selectByKind(State)->select(s | s.terminal)->size() = 0", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "AtLeastTwoOutgoingEdges", "expression": "self.outgoingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "SuccessorTransitionMustDefineTrigger", "expression": "self.outgoingEdges.target->selectByType(Transition)->select(t | t.trigger.oclIsUndefined())->size() <= 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionDivergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition))", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "AtLeastTwoIncomingEdges", "expression": "self.incomingEdges->size() >= 2", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "SelectionConvergence", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State))", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "StateTypeIsValid", "expression": "not (self.terminal and self.initial)", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "NoActionsForIntialOrTerminalState", "expression": "not (self.initial or self.terminal) or self.actionSequence->isEmpty()", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "RegularStateEdgesAreValid", "expression": "(self.initial or self.terminal) or (self.incomingEdges->size() = 1 and self.outgoingEdges->size() = 1)", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "State", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(Transition) or t.oclIsTypeOf(SelectionDivergence))", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneIncomingEdge", "expression": "self.incomingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OneOutgoingEdge", "expression": "self.outgoingEdges->size() = 1", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Transition", "inv": "OutgoingEdgeTargetIsValid", "expression": "self.outgoingEdges.target->forAll(t | t.oclIsTypeOf(State) or t.oclIsTypeOf(SelectionConvergence))", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "FunctionCall", "inv": "OneParameterValueForEachDefinedParameter", "expression": "self.parameters.parameter->includesAll(self.function.parameters->select(p | p.direction = ParameterDirectionKind::IN))", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ParameterValue", "inv": "FunctionCallParameterValid", "expression": "self.functionCall.function.parameters->includes(self.parameter)", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "AttributeValueSpecification", "inv": "AttributeSpecificationValidType", "expression": "self.attribute.type = self.parameterValue.parameter.type", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "ChangeExpression", "inv": "HasBooleanReturnParameter", "expression": "self.booleanFunctionCall.function.parameters->exists(p | p.direction = ParameterDirectionKind::RETURN and p.type.name = 'Boolean')", "file": "ocl-dataset/dataset/repos/edonjakupi/model-engineering/Lab 2/at.ac.tuwien.big.statesml/model/statesml.ecore"}, {"context": "Thread", "inv": "ValidStartActivityThread", "expression": "startActivity.thread = self or startActivity.oclIsKindOf(Join) or startActivity.oclIsKindOf(FinalActivity)", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "BasicModel", "inv": "ValidForkJoinNesting", "expression": "startActivity.JoinsCorrectly(Sequence{self}, Set{})->includesAll(Activity.allInstances()->asSet())", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "BasicModel", "inv": "MatchingForkForEveryJoin", "expression": "let forkThreads: Bag(Thread) = Fork.allInstances()->collect(thread)->asBag() in let joinThreads: Bag(Thread) = Join.allInstances()->collect(thread)->asBag() in forkThreads->intersection(joinThreads) = joinThreads", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Activity", "inv": "Reachability", "expression": "let basicModel: BasicModel = BasicModel.allInstances()->asSequence()->first() in let reachableActivities: Set(Activity) = basicModel.startActivity.JoinsCorrectly(Sequence{basicModel}, Set{}) in reachableActivities->exists(a | a = self)", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "LinearActivity", "inv": "ThreadIndependence", "expression": "self.UsesSameThread(nextActivity)", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Fork", "inv": "NonNegativeMaxThreadCount", "expression": "maxThreadCount >= 0", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Fork", "inv": "ThreadIndependence", "expression": "forkedThreads->forAll(t | self.UsesDifferentThread(t.startActivity))", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Decision", "inv": "ThreadIndependence", "expression": "branches->forAll(b | self.UsesSameThread(b.nextActivity))", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Branch", "inv": "ValidBranchCondition", "expression": "true", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Sleep", "inv": "PositiveSleepDuration", "expression": "duration >= 1", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "NamedActivity", "inv": "ProperNamedActivityName", "expression": "activityName.matches('[A-Za-z_$][A-Za-z0-9_$]*')", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "NamedActivity", "inv": "UniqueNamedActivityName", "expression": "Reference.allInstances()->select(r | r.name = activityName and not r.oclIsKindOf(NestedThread))->isEmpty()", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Reference", "inv": "ProperReferenceName", "expression": "name.matches('[A-Za-z_$][A-Za-z0-9_$]*')", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "Reference", "inv": "UniqueReferenceName", "expression": "Reference.allInstances()->select(r | r.name = name and not r.oclIsKindOf(NestedThread))->size() <= 1", "file": "ocl-dataset/dataset/repos/Sercammus/mde_java_concurrency/ut_ss_week1/model/ActivityDiagram.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/kchristi-MrAleborg/ProjetIDM_StateMachine/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/juniorz/ontouml_ecore/br.ufes.inf.nemo.ontouml.refuml/model/RefUML.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/juniorz/playing-with-eclipse-mdt/org.eclipse.oclinecore.tutorial/model/Library.ecore"}, {"context": "Book", "inv": "SufficientCopies$message", "expression": "'Not enough copies'", "file": "ocl-dataset/dataset/repos/juniorz/playing-with-eclipse-mdt/org.eclipse.oclinecore.tutorial/model/Library.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "SufficientCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of ' + name", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "EnoughCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Book", "inv": "EnoughCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of \\'' + name + '\\''", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "Tuple { message : String = 'Employee must have a name', status : Boolean = not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/NoReflectionCompany.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/NoReflectionCompany.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "Tuple { message : String = 'Employee must have a name', status : Boolean = not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library?.loans?->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans?->isUnique(book)", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Tester", "inv": "okInvariant", "expression": "true", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Tester", "inv": "extraInvariant", "expression": "true", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Tester", "inv": "badTypeInvariant", "expression": "null", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Named", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Named", "inv": "mustHaveName$message", "expression": "'this is a \\'message\\'\\n'", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "states->exists(s | s.initial)", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = invalid.substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "ThirtyCharString1", "inv": "MaxLengthConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "ThirtyCharString2", "inv": "MaxEnumConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.reference.ecore"}, {"context": "Named", "inv": "mustHaveName", "expression": "Tuple { message : String = 'this is a \\'message\\'\\n', status : Boolean = not name.oclIsUndefined() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.reference.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.ecore"}, {"context": "CreateType", "inv": "UniqueCreatePropertyNames", "expression": "propertyMappings->selectByKind(CreateProperty)->isUnique(newName)", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.build/model/UML2EcoreMapping.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/adilinam/QVTdCaseStudy/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "SufficientCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of ' + name", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "EnoughCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Book", "inv": "EnoughCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of \\'' + name + '\\''", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "Tuple { message : String = 'Employee must have a name', status : Boolean = not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/NoReflectionCompany.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/NoReflectionCompany.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "Tuple { message : String = 'Employee must have a name', status : Boolean = not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library?.loans?->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans?->isUnique(book)", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Tester", "inv": "okInvariant", "expression": "true", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Tester", "inv": "extraInvariant", "expression": "true", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Tester", "inv": "badTypeInvariant", "expression": "null", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/pivot/tests/models/Bug418551.ecore"}, {"context": "Named", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Named", "inv": "mustHaveName$message", "expression": "'this is a \\'message\\'\\n'", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "states->exists(s | s.initial)", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = invalid.substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "ThirtyCharString1", "inv": "MaxLengthConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "ThirtyCharString2", "inv": "MaxEnumConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.reference.ecore"}, {"context": "Named", "inv": "mustHaveName", "expression": "Tuple { message : String = 'this is a \\'message\\'\\n', status : Boolean = not name.oclIsUndefined() }.status", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.reference.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.ecore"}, {"context": "CreateType", "inv": "UniqueCreatePropertyNames", "expression": "propertyMappings->selectByKind(CreateProperty)->isUnique(newName)", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.build/model/UML2EcoreMapping.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/adilinam/QVTo-QVTd-OCL/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/tgoprince/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/tgoprince/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Usuario", "inv": "UsuarioSano", "expression": "self.conPatologias = false", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Usuario", "inv": "UsuarioAdulto", "expression": "self.edad >= 18 and self.edad <= 60", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Usuario", "inv": "UsuarioEnEstatura", "expression": "self.estatura >= 142 and self.estatura<=191", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Usuario", "inv": "UsuarioEnPeso", "expression": "(self.peso >= self.calcularPT() * 0.90) and (self.peso <= self.calcularPT() * 1.10)", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Menu", "inv": "LeyDeLaCantidad", "expression": "(self.calcularEnergia() >= self.usuario.calcularGET() * 0.90) and (self.calcularEnergia() <= self.usuario.calcularGET() * 1.10)", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Menu", "inv": "LeyDeLaCalidad", "expression": "self.preparaciones.ingredientes.grupo->includes(GrupoAlimenticio::FRUTAS) and self.preparaciones.ingredientes.grupo->includes(GrupoAlimenticio::VERDURAS) and self.preparaciones.ingredientes.grupo->includes(GrupoAlimenticio::CEREALES) and self.preparaciones.ingredientes.grupo->includes(GrupoAlimenticio::PROTEINAS)", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Menu", "inv": "LeyDeLaArmonia", "expression": "let energiaCarbs = self.calcularCarbohidratos() * 4 in (energiaCarbs >= self.calcularEnergia()*0.50) and (energiaCarbs <= self.calcularEnergia()*0.70) and let energiaProts = self.calcularProteinas() * 4 in (energiaProts >= self.calcularEnergia()*0.10) and (energiaProts <= self.calcularEnergia()*0.20) and let energiaLips = self.calcularLipidos() * 9 in (energiaLips >= self.calcularEnergia()*0.25) and (energiaLips <= self.calcularEnergia()*0.35)", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "Menu", "inv": "LeyDeLaAdequacion", "expression": "self.preparaciones.ingredientes->intersection(self.usuario.intolerables)->isEmpty() and self.preparaciones.ingredientes->intersection(self.usuario.favoritos)->notEmpty() and self.calcularPrecio() <= self.usuario.presupuesto", "file": "ocl-dataset/dataset/repos/chavezbosquez/leyes-alimentacion-ocl/NutrioEMF/model/Nutrio.ecore"}, {"context": "ClientNode", "inv": "hasSingleExecutionPlatorm", "expression": "requiredexecutionplatform -> one(platform | ExecutionBinding.allInstances() -> exists(binding | binding.requiredexecutionplatform.elementId = platform.elementId and (binding.providedexecutionplatform.owner.oclIsKindOf(MasterSlavePlatform) or binding.providedexecutionplatform.owner.oclIsKindOf(PeerToPeerPlatform)) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "StormCluster", "inv": "stormClusterDependsOnZookeeper", "expression": "Relationship.allInstances() -> exists(r | self.requiredport -> exists(p | p.elementId = r.requiredport.elementId and (r.providedport.owner.oclIsTypeOf(ZookeeperCluster) or r.providedport.owner.oclIsTypeOf(ZookeeperQuorum)) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "PeerToPeerPlatform", "inv": "peerPlatformsNeedBinding", "expression": "requiresPeerVm -> forAll(platform | ExecutionBinding.allInstances() -> exists(b | b.requiredexecutionplatform.elementId = platform.elementId and b.providedexecutionplatform.owner.oclIsTypeOf(VM) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "MasterSlavePlatform", "inv": "slavePlatformsNeedBinding", "expression": "requiresSlaveVm -> forAll(platform | ExecutionBinding.allInstances() -> exists(b | b.requiredexecutionplatform.elementId = platform.elementId and b.providedexecutionplatform.owner.oclIsTypeOf(VM) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "MasterSlavePlatform", "inv": "masterPlatformNeedBinding", "expression": "ExecutionBinding.allInstances() -> exists(b | b.requiredexecutionplatform.elementId = requiresMasterVm.elementId and b.providedexecutionplatform.owner.oclIsTypeOf(VM) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "KafkaCluster", "inv": "kafkaClusterDependsOnZookeeper", "expression": "Relationship.allInstances() -> exists(r | self.requiredport -> exists(p | p.elementId = r.requiredport.elementId and r.providedport.owner.oclIsTypeOf(ZookeeperCluster) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICER/dicer-core/metamodels/ddsm.ecore"}, {"context": "ComputeNode", "inv": "inputsAreProvidedByDataSources", "expression": "ComputeNode.allInstances() -> forAll(n | n.processInputData -> forAll( i | i.providedBy -> size() >0 ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "ComputeNode", "inv": "allUsersMustHaveReadPermissionOnInputData", "expression": "ComputeNode.allInstances() -> forAll(n | n.processInputData -> forAll(d | User.allInstances() -> select(u | u.hasComputeNode -> includes(n) ) -> forAll(u | u.hasRole -> exists(r | r.hasPermission -> exists( p | p.protectedData = d and p.actionType -> exists (a | a.operation = DataOperation::READ ) ) ) ) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "ComputeNode", "inv": "outputStoredDataMustBeProvided", "expression": "ComputeNode.allInstances() -> forAll(n | n.produceOutputData -> forAll(d | n.storeOutput -> forAll( s | d.providedBy -> includes(s) ) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "ComputeNode", "inv": "allUsersMustHaveCreatePermissionOnOutputData", "expression": "ComputeNode.allInstances() -> forAll(n | n.produceOutputData -> forAll(d | User.allInstances() -> select(u | u.hasComputeNode -> includes(n) ) -> forAll(u | u.hasRole -> exists(r | r.hasPermission -> exists( p | p.protectedData = d and p.actionType -> exists (a | a.operation = DataOperation::CREATE ) ) ) ) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "Permission", "inv": "protectsProvidedData", "expression": "Permission.allInstances() -> forAll(p | p.protectedData.providedBy ->size() > 0 )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "Permission", "inv": "declaredFieldsBelongToProtectedData", "expression": "Permission.allInstances() -> forAll(p | p.actionType -> forAll( a | a.schemaField -> forAll(f | p.protectedData.fields -> includes(f) ) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "Permission", "inv": "nonReadPermissionsRequireStoredProtectedData", "expression": "Permission.allInstances() -> select(p | p.actionType -> exists(a | not a.operation = DataOperation::READ ) ) -> forAll(p | p.protectedData.providedBy -> exists( ds | ds.oclIsKindOf(StorageSystem) ) )", "file": "ocl-dataset/dataset/repos/dice-project/DICE-Models/io.github.dice-project.dpim/model/dpim.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/PetriNet.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RefUML.ecore"}, {"context": "Layout", "inv": "L1", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Layout", "inv": "L2", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Layout", "inv": "L3", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Filter", "inv": "F1", "expression": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S1", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S2", "expression": "self.url.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S3", "expression": "let s : String = self.url.substring(1, 7) in s = 'http://'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/RSS.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SmartHouse.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/evilsystem.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Runner", "inv": "fixtureImpliesTests", "expression": "fixtures->notEmpty() implies tests->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/junit.ecore"}, {"context": "Runner", "inv": "fixtureTestsIsInTests", "expression": "fixtures->forAll(tests->includesAll(self.tests))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/junit.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/petri.ecore"}, {"context": "State", "inv": "inheritance", "expression": "not self->closure(owner)->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/HSM.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/SoaModel.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/highway.ecore"}, {"context": "ESMFNamedEntity", "inv": "nameNotEmpty", "expression": "self.name->notEmpty() and self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/ESMF.ecore"}, {"context": "ESMFSimpleCouplerComponent", "inv": "commonSrcAndDst", "expression": "self.fieldConnection->forAll(srcField.scope = self.srcComponent and dstField.scope = self.dstComponent)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/ESMF.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "(states)->exists(s : State | s.initial)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "Statemachine", "inv": "HasInitialState$message", "expression": "'No initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState", "expression": "initial implies (((statemachine).states)->select(initial))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState$message", "expression": "'There is more than one initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = (name).substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase$message", "expression": "'\\'' + name + '\\' must be Leading Uppercase'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength", "expression": "(name).size() >= 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength$message", "expression": "'\\'' + name + '\\' has ' + ((name).size()).toString() + ' characters when at least 4 wanted'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled$message", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->iterate(e : Event ; s : String = 'The following events are not handled:' | s + ' ' + e.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/examples/empirical-study/puzzle.empirical.study/githubmetamodels/OCLStates.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/PetriNet.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RefUML.ecore"}, {"context": "Layout", "inv": "L1", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Layout", "inv": "L2", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Layout", "inv": "L3", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Filter", "inv": "F1", "expression": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Source", "inv": "S1", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Source", "inv": "S2", "expression": "self.url.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "Source", "inv": "S3", "expression": "let s : String = self.url.substring(1, 7) in s = 'http://'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/RSS.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SmartHouse.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/evilsystem.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/Webshop_Builder_3k_Model.ecore"}, {"context": "Runner", "inv": "fixtureImpliesTests", "expression": "fixtures->notEmpty() implies tests->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/junit.ecore"}, {"context": "Runner", "inv": "fixtureTestsIsInTests", "expression": "fixtures->forAll(tests->includesAll(self.tests))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/junit.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/petri.ecore"}, {"context": "State", "inv": "inheritance", "expression": "not self->closure(owner)->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/HSM.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/SoaModel.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/highway.ecore"}, {"context": "ESMFNamedEntity", "inv": "nameNotEmpty", "expression": "self.name->notEmpty() and self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/ESMF.ecore"}, {"context": "ESMFSimpleCouplerComponent", "inv": "commonSrcAndDst", "expression": "self.fieldConnection->forAll(srcField.scope = self.srcComponent and dstField.scope = self.dstComponent)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/ESMF.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "(states)->exists(s : State | s.initial)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "Statemachine", "inv": "HasInitialState$message", "expression": "'No initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState", "expression": "initial implies (((statemachine).states)->select(initial))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState$message", "expression": "'There is more than one initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = (name).substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase$message", "expression": "'\\'' + name + '\\' must be Leading Uppercase'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "NameLength", "expression": "(name).size() >= 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "NameLength$message", "expression": "'\\'' + name + '\\' has ' + ((name).size()).toString() + ' characters when at least 4 wanted'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled$message", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->iterate(e : Event ; s : String = 'The following events are not handled:' | s + ' ' + e.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/testdata/OCLStates.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/PetriNet.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RefUML.ecore"}, {"context": "Layout", "inv": "L1", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Layout", "inv": "L2", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Layout", "inv": "L3", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Filter", "inv": "F1", "expression": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Source", "inv": "S1", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Source", "inv": "S2", "expression": "self.url.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "Source", "inv": "S3", "expression": "let s : String = self.url.substring(1, 7) in s = 'http://'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/RSS.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SmartHouse.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/evilsystem.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/Webshop_Builder_3k_Model.ecore"}, {"context": "Runner", "inv": "fixtureImpliesTests", "expression": "fixtures->notEmpty() implies tests->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/junit.ecore"}, {"context": "Runner", "inv": "fixtureTestsIsInTests", "expression": "fixtures->forAll(tests->includesAll(self.tests))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/junit.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/petri.ecore"}, {"context": "State", "inv": "inheritance", "expression": "not self->closure(owner)->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/HSM.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/SoaModel.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/highway.ecore"}, {"context": "ESMFNamedEntity", "inv": "nameNotEmpty", "expression": "self.name->notEmpty() and self.name.size() > 0", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/ESMF.ecore"}, {"context": "ESMFSimpleCouplerComponent", "inv": "commonSrcAndDst", "expression": "self.fieldConnection->forAll(srcField.scope = self.srcComponent and dstField.scope = self.dstComponent)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/ESMF.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "(states)->exists(s : State | s.initial)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "Statemachine", "inv": "HasInitialState$message", "expression": "'No initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState", "expression": "initial implies (((statemachine).states)->select(initial))->size() = 1", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState$message", "expression": "'There is more than one initial state'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = (name).substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase$message", "expression": "'\\'' + name + '\\' must be Leading Uppercase'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "NameLength", "expression": "(name).size() >= 4", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "NameLength$message", "expression": "'\\'' + name + '\\' has ' + ((name).size()).toString() + ' characters when at least 4 wanted'", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->isEmpty()", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled$message", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->iterate(e : Event ; s : String = 'The following events are not handled:' | s + ' ' + e.name)", "file": "ocl-dataset/dataset/repos/damenac/puzzle/plugins/fr.inria.diverse.puzzle.metrics/temp/OCLStates.ecore"}, {"context": "Map", "inv": "mustHaveTitle", "expression": "not title.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/joao16ribeiro/EDOM/EDOM_Ex4/models/mindmap.ecore"}, {"context": "Topic", "inv": "EndAfterStart", "expression": "self.end >= self.start", "file": "ocl-dataset/dataset/repos/joao16ribeiro/EDOM/EDOM_Ex4/models/mindmap.ecore"}, {"context": "Element", "inv": "Element_name", "expression": "self.name<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/Metamodels/atcmetamodel.ecore"}, {"context": "Element", "inv": "Element_location", "expression": "self.location<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/Metamodels/atcmetamodel.ecore"}, {"context": "Element", "inv": "Element_trule", "expression": "self.trule<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/Metamodels/atcmetamodel.ecore"}, {"context": "TestScenarioModel", "inv": "testScenarios_mult1", "expression": "self.testScenarios->size() > 0", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/Metamodels/atcmetamodel.ecore"}, {"context": "Element", "inv": "Element_name", "expression": "self.name<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/AbstractTestCases/atcmetamodel.ecore"}, {"context": "Element", "inv": "Element_location", "expression": "self.location<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/AbstractTestCases/atcmetamodel.ecore"}, {"context": "Element", "inv": "Element_trule", "expression": "self.trule<>null", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/AbstractTestCases/atcmetamodel.ecore"}, {"context": "TestScenarioModel", "inv": "testScenarios_mult1", "expression": "self.testScenarios->size() > 0", "file": "ocl-dataset/dataset/repos/dorisserruto/modeldriventest/AbstractTestCases/atcmetamodel.ecore"}, {"context": "Column", "inv": "detailC", "expression": "(self.type <> ColumnType::NUMERIC and self.type <> ColumnType::DECIMAL and self.type <> ColumnType::FLOAT and self.type <> ColumnType::DOUBLE and self.type <> ColumnType::REAL ) implies self.detail->isEmpty()", "file": "ocl-dataset/dataset/repos/sjpanda/dsl/CAR-project/model/WebApp.ecore"}, {"context": "Column", "inv": "useZeroFillC", "expression": "((self.type <> ColumnType::INTEGER and self.type <> ColumnType::BIGINT and self.type <> ColumnType::SMALLINT and self.type <> ColumnType::MEDIUMINT and self.type <> ColumnType::TINYINT ) implies self.useZeroFill=false)", "file": "ocl-dataset/dataset/repos/sjpanda/dsl/CAR-project/model/WebApp.ecore"}, {"context": "Column", "inv": "sizeC", "expression": "((self.type <> ColumnType::INTEGER and self.type <> ColumnType::BIGINT and self.type <> ColumnType::SMALLINT and self.type <> ColumnType::MEDIUMINT and self.type <> ColumnType::TINYINT and self.type <> ColumnType::CHAR and self.type <> ColumnType::VARCHAR and self.type <> ColumnType::BINARY and self.type <> ColumnType::VARBINARY and self.type <> ColumnType::BIT and self.type <> ColumnType::YEAR ) implies (self.size->isEmpty() or self.size = 0)) and (self.type = ColumnType::BIT implies (self.size >= 1 and self.size <= 64)) and ((self.type = ColumnType::CHAR or self.type = ColumnType::VARCHAR) implies (self.size >= 0 and self.size <= 255)) and (self.type = ColumnType::YEAR implies (self.size = 2 or self.size = 4)) and (self.size->notEmpty() implies self.size >= 0)", "file": "ocl-dataset/dataset/repos/sjpanda/dsl/CAR-project/model/WebApp.ecore"}, {"context": "Detail", "inv": "precisionBiggerThanScale", "expression": "self.precision >= self.scale and self.precision >= 0 and self.scale >= 0", "file": "ocl-dataset/dataset/repos/sjpanda/dsl/CAR-project/model/WebApp.ecore"}, {"context": "Input", "inv": "typeC", "expression": "(self.type <> InputType::BUTTON implies self.action->isEmpty()) and (self.type <> InputType::BUTTON implies self.buttonValue->isEmpty()) and (self.type <> InputType::TEXT implies self.textValue->isEmpty())", "file": "ocl-dataset/dataset/repos/sjpanda/dsl/CAR-project/model/WebApp.ecore"}, {"context": "CellPhone", "inv": "invIsAMobilePhoneDisjointFixedPhone", "expression": "not(self.oclIsTypeOf(FixedPhone))", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/phoneBookCyclic.ecore"}, {"context": "Phone", "inv": "invIsAPhoneComplete", "expression": "self.oclIsTypeOf(CellPhone) or self.oclIsTypeOf(FixedPhone)", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/phoneBookCyclic.ecore"}, {"context": "Pessoa", "inv": "PessoaCompleta", "expression": "oclIsTypeOf(Brasileiro) or oclIsTypeOf(Aluno)", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/Modelo2.ecore"}, {"context": "Brasileiro", "inv": "BrasileiroDisjunto", "expression": "not (oclIsTypeOf(Aluno))", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/Modelo2.ecore"}, {"context": "Aluno", "inv": "PaiNotPessoa", "expression": "pai->select(oclIsTypeOf(Pessoa))->isEmpty()", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/Modelo2.ecore"}, {"context": "CellPhone", "inv": "invIsAMobilePhoneDisjointFixedPhone", "expression": "not(self.oclIsTypeOf(FixedPhone))", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/phoneBookCiclic.ecore"}, {"context": "Phone", "inv": "invIsAPhoneComplete", "expression": "self.oclIsTypeOf(CellPhone) or self.oclIsTypeOf(FixedPhone)", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/phoneBookCiclic.ecore"}, {"context": "Pessoa", "inv": "PessoaCompleta", "expression": "oclIsTypeOf(Brasileiro) or oclIsTypeOf(Aluno)", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/Modelo1.ecore"}, {"context": "Brasileiro", "inv": "BrasileiroDisjunto", "expression": "not (oclIsTypeOf(Aluno))", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/Modelo1.ecore"}, {"context": "MobilePhone", "inv": "invIsAMobilePhoneDisjointFixedPhone", "expression": "not(self.oclIsTypeOf(FixedPhone))", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/phone.ecore"}, {"context": "Phone", "inv": "invIsAPhoneComplete", "expression": "self.oclIsTypeOf(MobilePhone) or self.oclIsTypeOf(FixedPhone)", "file": "ocl-dataset/dataset/repos/cfasantos/ECC/Models/phone.ecore"}, {"context": "Deployment", "inv": "ReplicasNumber", "expression": "replicas>0", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameNameLabels", "expression": "labels -> isUnique(key)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerName", "expression": "containers -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerPort", "expression": "containers -> isUnique(containerPort)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Container", "inv": "sameNameEnvironment", "expression": "environments -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServiceName", "expression": "services -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServicePort", "expression": "services -> isUnique(port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "cloudLocal", "expression": "cloud = CloudType::LOCAL implies services -> forAll (s:Service | s.type<>ServiceType::LoadBalancer)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/kubernetes.ecore"}, {"context": "Application", "inv": "sameName", "expression": "self.microservices->isUnique(m:Microservice | m.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Application", "inv": "samePort", "expression": "self.microservices->isUnique(m:Microservice | m.port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Application", "inv": "emptyPort", "expression": "self.microservices->forAll(m:Microservice | m.port = 0) implies self.microservices.port = self.microservices.imagePort", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Microservice", "inv": "sameName", "expression": "self.group->isUnique(g:Group | g.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Microservice", "inv": "dosExternal", "expression": "self.toConnection ->select(type = ConnectionType::EXTERNAL)->size()<=1", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Connection", "inv": "external", "expression": "type = ConnectionType::EXTERNAL implies toMicroservice->isEmpty()", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-text/src/metamodel/microservices.ecore"}, {"context": "Deployment", "inv": "ReplicasNumber", "expression": "replicas>0", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameNameLabels", "expression": "labels -> isUnique(key)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerName", "expression": "containers -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerPort", "expression": "containers -> isUnique(containerPort)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Container", "inv": "sameNameEnvironment", "expression": "environments -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServiceName", "expression": "services -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServicePort", "expression": "services -> isUnique(port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "cloudLocal", "expression": "cloud = CloudType::LOCAL implies services -> forAll (s:Service | s.type<>ServiceType::LoadBalancer)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/kubernetes.ecore"}, {"context": "Application", "inv": "sameName", "expression": "self.microservices->isUnique(m:Microservice | m.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Application", "inv": "samePort", "expression": "self.microservices->isUnique(m:Microservice | m.port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Application", "inv": "emptyPort", "expression": "self.microservices->forAll(m:Microservice | m.port = 0) implies self.microservices.port = self.microservices.imagePort", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Microservice", "inv": "sameName", "expression": "self.group->isUnique(g:Group | g.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Microservice", "inv": "dosExternal", "expression": "self.toConnection ->select(type = ConnectionType::EXTERNAL)->size()<=1", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Connection", "inv": "external", "expression": "type = ConnectionType::EXTERNAL implies toMicroservice->isEmpty()", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-model-2-model/metamodels/microservices.ecore"}, {"context": "Deployment", "inv": "ReplicasNumber", "expression": "replicas>0", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameNameLabels", "expression": "labels -> isUnique(key)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerName", "expression": "containers -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Deployment", "inv": "sameContainerPort", "expression": "containers -> isUnique(containerPort)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Container", "inv": "sameNameEnvironment", "expression": "environments -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServiceName", "expression": "services -> isUnique(name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "sameServicePort", "expression": "services -> isUnique(port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Kubernetes", "inv": "cloudLocal", "expression": "cloud = CloudType::LOCAL implies services -> forAll (s:Service | s.type<>ServiceType::LoadBalancer)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-kubernetes-editor/metamodel/kubernetes.ecore"}, {"context": "Application", "inv": "sameName", "expression": "self.microservices->isUnique(m:Microservice | m.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Application", "inv": "samePort", "expression": "self.microservices->isUnique(m:Microservice | m.port)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Application", "inv": "emptyPort", "expression": "self.microservices->forAll(m:Microservice | m.port = 0) implies self.microservices.port = self.microservices.imagePort", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Microservice", "inv": "sameName", "expression": "self.group->isUnique(g:Group | g.name)", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Microservice", "inv": "dosExternal", "expression": "self.toConnection ->select(type = ConnectionType::EXTERNAL)->size()<=1", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Connection", "inv": "external", "expression": "type = ConnectionType::EXTERNAL implies toMicroservice->isEmpty()", "file": "ocl-dataset/dataset/repos/dani8art/model-driven-microservices-generator/MDMG-microservices-editor/metamodel/microservices.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/PetriNet.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RefUML.ecore"}, {"context": "Layout", "inv": "L1", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Layout", "inv": "L2", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Layout", "inv": "L3", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Filter", "inv": "F1", "expression": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Source", "inv": "S1", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Source", "inv": "S2", "expression": "self.url.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "Source", "inv": "S3", "expression": "let s : String = self.url.substring(1, 7) in s = 'http://'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/RSS.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SmartHouse.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/evilsystem.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Runner", "inv": "fixtureImpliesTests", "expression": "fixtures->notEmpty() implies tests->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/junit.ecore"}, {"context": "Runner", "inv": "fixtureTestsIsInTests", "expression": "fixtures->forAll(tests->includesAll(self.tests))", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/junit.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/petri.ecore"}, {"context": "State", "inv": "inheritance", "expression": "not self->closure(owner)->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/HSM.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/SoaModel.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/highway.ecore"}, {"context": "ESMFNamedEntity", "inv": "nameNotEmpty", "expression": "self.name->notEmpty() and self.name.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/ESMF.ecore"}, {"context": "ESMFSimpleCouplerComponent", "inv": "commonSrcAndDst", "expression": "self.fieldConnection->forAll(srcField.scope = self.srcComponent and dstField.scope = self.dstComponent)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/ESMF.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "(states)->exists(s : State | s.initial)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "Statemachine", "inv": "HasInitialState$message", "expression": "'No initial state'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState", "expression": "initial implies (((statemachine).states)->select(initial))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState$message", "expression": "'There is more than one initial state'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = (name).substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase$message", "expression": "'\\'' + name + '\\' must be Leading Uppercase'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength", "expression": "(name).size() >= 4", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength$message", "expression": "'\\'' + name + '\\' has ' + ((name).size()).toString() + ' characters when at least 4 wanted'", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled$message", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->iterate(e : Event ; s : String = 'The following events are not handled:' | s + ' ' + e.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/QMM-COMLAN-data/validation-subjects/metamodels/OCLStates.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/PetriNet.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not self.allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "not_own_self$message", "expression": "'An element may not directly or indirectly own itself.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "self.mustBeOwned() implies owner.oclAsSet()->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "Element", "inv": "has_owner$message", "expression": "'Elements that must be owned must have an owner.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name", "expression": "self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "has_no_qualified_name$message", "expression": "'If there is no name, or one of the containing namespaces has no name, there is no qualified name.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership$message", "expression": "'If a NamedElement is not owned by a Namespace, it does not have a visibility.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RefUML.ecore"}, {"context": "Layout", "inv": "L1", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Layout", "inv": "L2", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Layout", "inv": "L3", "expression": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Filter", "inv": "F1", "expression": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S1", "expression": "self.name.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S2", "expression": "self.url.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "Source", "inv": "S3", "expression": "let s : String = self.url.substring(1, 7) in s = 'http://'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/RSS.ecore"}, {"context": "House", "inv": "TooExpensiveToUseThemTogether", "expression": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "SuperExpensiveNotUseAnything", "expression": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "WatchDog", "expression": "gate.outlocked implies sec.on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "NoWindowOpenWhenSecOn", "expression": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "House", "inv": "User__VeryNotSafe", "expression": "gate.outlocked implies sec.on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "DoNotHeatItForever", "expression": "temp < 50 or not on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "ColdWaterNeedHeating", "expression": "temp < 30 implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "INeedHotWaterInTheMorning", "expression": "house.time < 2 or house.time > 8 or on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WaterHeater", "inv": "User__HotWaterAlways", "expression": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowLeveNeedCharge", "expression": "if pluged then level < 30 implies charging else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "EV", "inv": "LowPricePleaseCharge", "expression": "if pluged then house.eprice < 10 implies charging else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdNeedHeating", "expression": "temp < 18 implies heating->exists(e : Heating | e.level > 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ExtremelyColdNeedMoreHeating", "expression": "temp < 10 implies heating.level->sum() > 3 * heating->size()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoWindowOpenWhenHeating", "expression": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "NoHeatingAndCoolingTogether", "expression": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooLateNoShouting", "expression": "house.time > 22 implies projector.volume < 4", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "ProjectingInDarkness", "expression": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "INeedFreshAir", "expression": "air > 5 implies window->exists(e : Window | e.opened)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "TooColdToOpenWindow", "expression": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysOpenWindow", "expression": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__AlwaysTurnOnFirstHeating", "expression": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Room", "inv": "User__ILoveCurtains", "expression": "projector.on implies window->asSequence()->first().curtainOn = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "TooHotOpenAC", "expression": "room.temp > 28 implies level > 5", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "CodeNoAC", "expression": "room.temp < 23 implies level = 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "HotOutside", "expression": "room.house.outtemp > 30 implies level > 5", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "AirConditioner", "inv": "User__HotOutside", "expression": "level > 0 implies level = 9", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Light", "inv": "User__LightWideOpen", "expression": "level <> 0 implies level = 5", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Projector", "inv": "TooNoisyToWatchTVWhenWashing", "expression": "if room.wm <> null then not room.wm.on or not on else true endif", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "OnWhenLoaded", "expression": "loaded implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "WashingMachine", "inv": "User__WashImmediately", "expression": "loaded implies on = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Sensor", "inv": "RunningOutOfPower", "expression": "battery < 20 implies circle < 30", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "MakeCoffeeForMeInTheMorning", "expression": "room.house.time = 7 and loaded implies on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "NoCarNoCoffee", "expression": "room.house.ev->exists(e : EV | e.pluged) or on", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "KeepItWarm", "expression": "room.temp > 20 implies not warming", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "CoffeeMaker", "inv": "User__IWantWarmed", "expression": "loaded implies warming = true", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SmartHouse.ecore"}, {"context": "Entity", "inv": "UniqueAttributeName", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "Entity", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "NamedObject", "inv": "NotEmptyName", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "Function", "inv": "UniqueParameterName", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "Service", "inv": "UniqueFunctionName", "expression": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "PackageElement", "inv": "UniquePackageElementName", "expression": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/evilsystem.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Width_of_page_must_be_non_negative$message", "expression": "'The page has a negative width.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Page", "inv": "Height_of_page_must_be_non_negative$message", "expression": "'The page has a negative height.'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Width_of_component_must_be_non_negative", "expression": "width >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Component", "inv": "Height_of_componentmust_be_non_negative", "expression": "height >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Text_field", "inv": "Header_level_of_text_field_must_be_0_to_6", "expression": "header_level >= 0 and header_level <= 6", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Pages_must_have_unique_titles", "expression": "self.pages->collect(title)->size() = self.pages->collect(title)->asSet()->size()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Webshop_must_have_index_page", "expression": "not index_page.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Index_page_must_have_result_list", "expression": "index_page.oclIsUndefined() or index_page.components->select(oclIsTypeOf(Result_list))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Webshop_builder_3k", "inv": "Details_page_must_have_item", "expression": "item_details_page.oclIsUndefined() or item_details_page.components->select(oclIsTypeOf(Item))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Navigation_button", "inv": "Navigation_button_must_have_picture_or_text", "expression": "self.picture.oclAsSet()->size() + self.text.oclAsSet()->size() >= 1", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Border", "inv": "thickness_positive", "expression": "thickness > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/Webshop_Builder_3k_Model.ecore"}, {"context": "Runner", "inv": "fixtureImpliesTests", "expression": "fixtures->notEmpty() implies tests->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/junit.ecore"}, {"context": "Runner", "inv": "fixtureTestsIsInTests", "expression": "fixtures->forAll(tests->includesAll(self.tests))", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/junit.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/petri.ecore"}, {"context": "State", "inv": "inheritance", "expression": "not self->closure(owner)->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/HSM.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/SoaModel.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/highway.ecore"}, {"context": "ESMFNamedEntity", "inv": "nameNotEmpty", "expression": "self.name->notEmpty() and self.name.size() > 0", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/ESMF.ecore"}, {"context": "ESMFSimpleCouplerComponent", "inv": "commonSrcAndDst", "expression": "self.fieldConnection->forAll(srcField.scope = self.srcComponent and dstField.scope = self.dstComponent)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/ESMF.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "(states)->exists(s : State | s.initial)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "Statemachine", "inv": "HasInitialState$message", "expression": "'No initial state'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState", "expression": "initial implies (((statemachine).states)->select(initial))->size() = 1", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "UniqueInitialState$message", "expression": "'There is more than one initial state'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = (name).substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase$message", "expression": "'\\'' + name + '\\' must be Leading Uppercase'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength", "expression": "(name).size() >= 4", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "NameLength$message", "expression": "'\\'' + name + '\\' has ' + ((name).size()).toString() + ' characters when at least 4 wanted'", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->isEmpty()", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "State", "inv": "EveryEventIsHandled$message", "expression": "let allEvents : Set(Event) = ((statemachine).events)->asSet() in let myEvents : Set(Event) = ((self.transitions)->collect(event))->asSet() in (allEvents - myEvents)->iterate(e : Event ; s : String = 'The following events are not handled:' | s + ' ' + e.name)", "file": "ocl-dataset/dataset/repos/MDEGroup/MDEForge/mdeforge/githubmetamodels/OCLStates.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "EntityModel", "inv": "uniqueEntityNames", "expression": "self.entities->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Entity", "inv": "identifierIsMandatory", "expression": "self.id.mandatory = true", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Entity", "inv": "identifierIsMember", "expression": "self.attributes -> includes(self.id) or self.superTypes.attributes -> includes(self.id)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Entity", "inv": "superTypeIsNotSelf", "expression": "self <> superType", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Attribute", "inv": "checkNone", "expression": "(self.type = AttributeType::None) <> (self.enumerationType = null)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "EnumerationType", "inv": "uniqueLiteralNames", "expression": "self.literals->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Relationship", "inv": "upperBoundGreaterThanLowerBound", "expression": "self.lowerBound >= 0 and (self.lowerBound <= self.upperBound xor self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositeRelastionshipIsValid", "expression": "self.opposite <> null implies self.opposite.opposite = self", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "AttributePageElement", "inv": "validAttributePageElement", "expression": "(self.page.form.entity.attributes->union(self.page.form.entity.superTypes.attributes) -> includes(self.attribute))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "validRelationshipPageElement", "expression": "(self.page.form.entity.relationships->union(self.page.form.entity.superTypes.relationships) -> includes(self.relationship))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "validEditingForm", "expression": "self.editingForm.entity = self.relationship.target", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "SelectionAttributePageElement", "inv": "validSelectionType", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumerationType <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Column", "inv": "validColumn", "expression": "(self.table.relationship.target.attributes -> union(self.table.relationship.target.superTypes.attributes)) -> includes(self.attribute)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment1/ModelEngineeringUE1/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Model-Engineering-AG-34/model-engineering-ws14/assignment2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NamingConvention", "expression": "name.matches('[A-Z][a-z0-9_]*([A-Z][a-z0-9_]*)*')", "file": "ocl-dataset/dataset/repos/MOHITO-PROJECT/MOHITO/modagile/generator/de.modagile.metamodel.app/model/modagile.ecore"}, {"context": "Entity", "inv": "NamingConvention", "expression": "name.matches('[A-Z][a-z0-9_]*([A-Z][a-z0-9_]*)*')", "file": "ocl-dataset/dataset/repos/MOHITO-PROJECT/MOHITO/modagile/generator/de.modagile.metamodel.app/bin/modagile.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/mathck/lab4/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AbstractPage", "inv": "uniquePageID", "expression": "AbstractPage.allInstances() -> forAll(e1, e2 | e1 <> e2 implies e1.oclAsType(AbstractPage).ID <> e2.oclAsType(AbstractPage).ID )", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "AbstractPage", "inv": "capitalLetter", "expression": "self.title.matches('[A-Z].*')", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "PageElement", "inv": "uniquePageElementID", "expression": "PageElement.allInstances() -> forAll(e1, e2 | e1 <> e2 implies e1.oclAsType(PageElement).ID <> e2.oclAsType(PageElement).ID )", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "InputElement", "inv": "addStar", "expression": "(self.isMandatory and self.label.matches('.*[*]')) or (self.isMandatory = false)", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "Heading", "inv": "startLevel", "expression": "self.level>0", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "TextField", "inv": "mandatory", "expression": "(self.isMandatory and self.text.matches('.*') or (self.isMandatory = false))", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "TextArea", "inv": "mandatory", "expression": "(self.isMandatory and self.text.matches('.*') or (self.isMandatory = false))", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "EndPage", "inv": "selfLink", "expression": "self.predecessor->excludes(self)", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "FormPage", "inv": "selfLink", "expression": "self.predecessor->excludes(self) and self.successor->excludes(self)", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "FormPage", "inv": "cyclic", "expression": "ID > predecessor and ID < successor", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "StartPage", "inv": "selfLink", "expression": "self.successor->excludes(self)", "file": "ocl-dataset/dataset/repos/drubas/model_engineering_lab1/model/fml_metamodel.ecore"}, {"context": "Place", "inv": "matchRates", "expression": "if byteSize > 0 then byteSize >= itsOutputPort.byteRate and byteSize >= itsInputPort.byteRate else true endif", "file": "ocl-dataset/dataset/repos/grammarware/sle16/bousse/framework-sources/gemoc-studio/official_samples/SigPML/language_workbench/org.gemoc.sample.sigpml.xdsml/model-gen/SigpmlMT.ecore"}, {"context": "Place", "inv": "matchRates", "expression": "if byteSize > 0 then byteSize >= itsOutputPort.byteRate and byteSize >= itsInputPort.byteRate else true endif", "file": "ocl-dataset/dataset/repos/grammarware/sle16/bousse/framework-sources/gemoc-studio/official_samples/SigPML/language_workbench/org.gemoc.sample.sigpml.model/model/sigpml.ecore"}, {"context": "Metro", "inv": "actualNoTrains", "expression": "self.noTrains >= self.trains->size()", "file": "ocl-dataset/dataset/repos/Hadschii/mbse_project/uebung/de.tu_bs.cs.isf.mbse.metro/model/Metro.ecore"}, {"context": "Metro", "inv": "actualNoLines", "expression": "self.noLines >= self.lines->size()", "file": "ocl-dataset/dataset/repos/Hadschii/mbse_project/uebung/de.tu_bs.cs.isf.mbse.metro/model/Metro.ecore"}, {"context": "Line", "inv": "maxTrains", "expression": "self.trains->size() <= 4", "file": "ocl-dataset/dataset/repos/Hadschii/mbse_project/uebung/de.tu_bs.cs.isf.mbse.metro/model/Metro.ecore"}, {"context": "Train", "inv": "maxCarriages", "expression": "self.carriages > 0 and self.carriages < 3", "file": "ocl-dataset/dataset/repos/Hadschii/mbse_project/uebung/de.tu_bs.cs.isf.mbse.metro/model/Metro.ecore"}, {"context": "Train", "inv": "noPassengers", "expression": "(self.carriages*6 + 6) >= self.persons->size()", "file": "ocl-dataset/dataset/repos/Hadschii/mbse_project/uebung/de.tu_bs.cs.isf.mbse.metro/model/Metro.ecore"}, {"context": "Artifact", "inv": "typeHierarchy", "expression": "type.containerTypes->includes(parent.type) or parent = null", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "Artifact", "inv": "allowedAttributes", "expression": "attributes->forAll(a : Attribute | a.artifactTypes->includes(self.type)) or type = null", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "State", "inv": "stateSequence", "expression": "(next->excludes(self) or next->size() = 0) and (previous->excludes(self) or previous->size() = 0)", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "State", "inv": "allowedAttributeValues", "expression": "values->forAll(v : Value | artifact.attributes->includes(v.ofAttribute))", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "State", "inv": "uniqueAttributeValues", "expression": "artifact.attributes->forAll(a : Attribute | values->select(v : Value | (v.ofAttribute = a))->size() <= 1)", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "Activity", "inv": "activityStates", "expression": "state <> targetState", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "Activity", "inv": "allowedValueDeltas", "expression": "deltas->forAll(d : Delta | state.artifact.attributes->includes(d.value.ofAttribute))", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "Activity", "inv": "uniqueValueDeltas", "expression": "state.artifact.attributes->forAll(a : Attribute | deltas->select(d : Delta | (d.value.ofAttribute = a))->size() <= 1)", "file": "ocl-dataset/dataset/repos/DECENTSoftwareAssessment/DECENT.Meta/model/DECENTv2.ecore"}, {"context": "PlatformApplicationModelRoot", "inv": "SingletonPlatformMetamodel", "expression": "self.oclType().allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "SingleAppearanceOnIsland", "expression": "self.processors->forAll(p1, p2 | p1 <> p2 implies p1.identifier <> p2.identifier)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "IslandHasProcessors", "expression": "self.processors->forAll(p |p.island = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "IslandFrequencyHomogenity", "expression": "self.processors.initialState->forAll(cs1, cs2 | cs1.frequency = cs2.frequency)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorType", "inv": "UniqueStatesForProcessorType", "expression": "self.possibleStates->forAll(ps1, ps2 | ps1 <> ps2 implies ps1.frequency <> ps2.frequency or ps1.isWorking <> ps2.isWorking)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorType", "inv": "ProcessorTypeHasStates", "expression": "self.possibleStates->forAll( s|s.processorType = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "Processor", "inv": "ProcessorBelongsToIsland", "expression": "self.island.processors->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "Processor", "inv": "ProcessorInValidState", "expression": "self.type.possibleStates->includes(self.initialState)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorState", "inv": "StateBelongsToProcessorType", "expression": "self.processorType.possibleStates->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorState", "inv": "SourceOfStateChange", "expression": "self.possibleStateChanges->forAll (psc | psc.source = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorState", "inv": "UniqueStateChange", "expression": "self.possibleStateChanges->forAll(sc1, sc2 | sc1 <> sc2 implies sc1.source <> sc2.source or sc1.target <> sc2.target)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorStateChange", "inv": "ValidStateChanges", "expression": "self.source.processorType = self.target.processorType", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "ProcessorStateChange", "inv": "PossibleTransitions", "expression": "self.source <> self.target", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/PlatformMetamodel.ecore"}, {"context": "Identifiable", "inv": "UniqueIdentifiableInstance", "expression": "self.oclType().allInstances()->forAll(id1, id2 |id1 <> id2 implies id1.identifier <> id2.identifier)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/PAM Visual Editor/workspace/PlatformMetamodelGMFProject/model/Sensation_Common_Metamodel.ecore"}, {"context": "PlatformApplicationModelRoot", "inv": "SingletonPlatformMetamodel", "expression": "self.oclType().allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "SingleAppearanceOnIsland", "expression": "self.processors->forAll(p1, p2 | p1 <> p2 implies p1.identifier <> p2.identifier)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "IslandHasProcessors", "expression": "self.processors->forAll(p |p.island = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "VoltageFrequencyIsland", "inv": "IslandFrequencyHomogenity", "expression": "self.processors.initialState->forAll(cs1, cs2 | cs1.frequency = cs2.frequency)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorType", "inv": "UniqueStatesForProcessorType", "expression": "self.possibleStates->forAll(ps1, ps2 | ps1 <> ps2 implies ps1.frequency <> ps2.frequency or ps1.isWorking <> ps2.isWorking)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorType", "inv": "ProcessorTypeHasStates", "expression": "self.possibleStates->forAll( s|s.processorType = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "Processor", "inv": "ProcessorBelongsToIsland", "expression": "self.island.processors->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "Processor", "inv": "ProcessorInValidState", "expression": "self.type.possibleStates->includes(self.initialState)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorState", "inv": "StateBelongsToProcessorType", "expression": "self.processorType.possibleStates->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorState", "inv": "SourceOfStateChange", "expression": "self.possibleStateChanges->forAll (psc | psc.source = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorState", "inv": "UniqueStateChange", "expression": "self.possibleStateChanges->forAll(sc1, sc2 | sc1 <> sc2 implies sc1.source <> sc2.source or sc1.target <> sc2.target)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorStateChange", "inv": "ValidStateChanges", "expression": "self.source.processorType = self.target.processorType", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "ProcessorStateChange", "inv": "PossibleTransitions", "expression": "self.source <> self.target", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/PAMmetamodel.ecore"}, {"context": "Identifiable", "inv": "UniqueIdentifiableInstance", "expression": "self.oclType().allInstances()->forAll(id1, id2 |id1 <> id2 implies id1.identifier <> id2.identifier)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/CommonMetamodel.ecore"}, {"context": "SynchronousDataflowRoot", "inv": "Singleton", "expression": "self.oclType().allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/SDFmetamodel.ecore"}, {"context": "Actor", "inv": "ActorChannelRelationshipSource", "expression": "self. incomingChannels->forAll( c | c.target = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/SDFmetamodel.ecore"}, {"context": "Actor", "inv": "ActorChannelRelationshipTarget", "expression": "self. outgoingChannels->forAll( c | c.source = self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/SDFmetamodel.ecore"}, {"context": "Channel", "inv": "ChannelBelongsToIncomingList", "expression": "self.target.incomingChannels->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/SDFmetamodel.ecore"}, {"context": "Channel", "inv": "ChannelBelongsToOutgoingList", "expression": "self.source.outgoingChannels->includes(self)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/SDFmetamodel.ecore"}, {"context": "AllocationRoot", "inv": "Singleton", "expression": "self.oclType().allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/AllocationMetamodel.ecore"}, {"context": "Capability", "inv": "UniqueCapacity", "expression": "self.oclType().allInstances()->forAll(c1, c2 |c1 <> c2 implies c1.actor <> c2.actor or c1.processorType <> c2.processorType)", "file": "ocl-dataset/dataset/repos/utwente-fmt/COMET/Metamodels/AllocationMetamodel.ecore"}, {"context": "Network", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Node", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Node", "inv": "noIsolatedNode", "expression": "self.predecessors->size() > 0 or self.successors->size() > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Arc", "inv": "tokensCountNotNull", "expression": "self.tokensCount > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Transition", "inv": "existArcs", "expression": "self.successors->size() > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Transition", "inv": "onlyArcsToPlaces", "expression": "self.successors ->forAll(s | s.target.oclIsKindOf(Place))", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Place", "inv": "validTokensCount", "expression": "self.tokensCount >= 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Place", "inv": "onlyArcToTransitions", "expression": "self.successors ->forAll(s | s.target.oclIsKindOf(Transition))", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/PetriNet.ecore"}, {"context": "Process", "inv": "nameForbidden", "expression": "(name <> 'Process' and name <> '')", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "Process", "inv": "distinctNamesForWorkDefinitions", "expression": "self.processElements ->select(p | p.oclIsTypeOf(WorkDefinition)) ->collect(p | p.oclAsType(WorkDefinition)) ->forAll(wd1, wd2 | wd1 <> wd2 implies wd1.name <> wd2.name)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "predecessorInSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "successorInSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "noReflexiveDependancy", "expression": "self.successor <> self.predecessor", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/SimplePDL.ecore"}, {"context": "Network", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Node", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Node", "inv": "noIsolatedNode", "expression": "self.predecessors->size() > 0 or self.successors->size() > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Arc", "inv": "tokensCountNotNull", "expression": "self.tokensCount > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Transition", "inv": "existArcs", "expression": "self.successors->size() > 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Transition", "inv": "onlyArcsToPlaces", "expression": "self.successors ->forAll(s | s.target.oclIsKindOf(Place))", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Place", "inv": "validTokensCount", "expression": "self.tokensCount >= 0", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Place", "inv": "onlyArcToTransitions", "expression": "self.successors ->forAll(s | s.target.oclIsKindOf(Transition))", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/PetriNet.ecore"}, {"context": "Process", "inv": "nameForbidden", "expression": "(name <> 'Process' and name <> '')", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "Process", "inv": "distinctNamesForWorkDefinitions", "expression": "self.processElements ->select(p | p.oclIsTypeOf(WorkDefinition)) ->collect(p | p.oclAsType(WorkDefinition)) ->forAll(wd1, wd2 | wd1 <> wd2 implies wd1.name <> wd2.name)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "nameForbidden", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "predecessorInSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "successorInSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "noReflexiveDependancy", "expression": "self.successor <> self.predecessor", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/BE/src/vdrouinv/livrables/SimplePDL.ecore"}, {"context": "Process", "inv": "distinctNames", "expression": "self.processElements ->select(e | e.oclIsKindOf(WorkDefinition)) ->collect(e | e.oclAsType(WorkDefinition)) ->forAll(e1, e2 | e1.name <> e2.name or e1 = e2)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/TP6/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/TP6/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/TP6/SimplePDL.ecore"}, {"context": "Scenario", "inv": "namesForbidden", "expression": "Sequence{'', 'Sc\u00e9nario'} ->forAll(n | self.name <> n)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/Projet/Partie2/scenario.ecore"}, {"context": "Schedule", "inv": "uniqueNameForActivities", "expression": "self.components ->select(c | c.oclIsKindOf(Activity)) ->collect(c | c.oclAsType(Activity)) ->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/Projet/Partie2/scenario.ecore"}, {"context": "Activity", "inv": "namesForbidden", "expression": "Sequence{'', 'Activit\u00e9', 'Choix', 'Parall\u00e8le', 'Alternative'} ->forAll(n | self.name <> n)", "file": "ocl-dataset/dataset/repos/voblivion/ENSEEIHT/2A/GenieLogicielEtSystemes/Projet/Partie2/scenario.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/rbary/StateMachine/metaModels/StateMachine.ecore"}, {"context": "DE", "inv": "t1", "expression": "if self.typeD = typeDepart::DE_A then (self.piece.type = TypePiece::T1 or self.piece.type = TypePiece::T2) else if self.typeD = typeDepart::DE_B then self.piece.type = TypePiece::T2 else if self.typeD = typeDepart::DE_C then (self.piece.type = TypePiece::T1 or self.piece.type = TypePiece::T3) else false endif endif endif", "file": "ocl-dataset/dataset/repos/Mialus/M2/idm/projetOC/ProjetOC/projetOC.ecore"}, {"context": "Departement", "inv": "C1", "expression": "self.employees->size() >= self.projects->size()", "file": "ocl-dataset/dataset/repos/Mialus/M1/SAMP/eclipseModeling/SAMPTP4/My.ecore"}, {"context": "Departement", "inv": "C2", "expression": "self.projects->collect(p : Project | p.budget)->sum() <= self.budget", "file": "ocl-dataset/dataset/repos/Mialus/M1/SAMP/eclipseModeling/SAMPTP4/My.ecore"}, {"context": "Project", "inv": "C3", "expression": "self.departement.employees->includesAll(self.employees)", "file": "ocl-dataset/dataset/repos/Mialus/M1/SAMP/eclipseModeling/SAMPTP4/My.ecore"}, {"context": "Instruction", "inv": "returnIsLast", "expression": "not(segmentation->excluding(segmentation->last())->exists(e | e.oclIsTypeOf(Return)))", "file": "ocl-dataset/dataset/repos/Mialus/M1/SAMP/eclipseModeling/tp5/sampModel/My.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/gitdelehe/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/gitdelehe/ontouml-lightweight-editor/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "StateMachine", "inv": "singleStateMachine", "expression": "StateMachine.allInstances()->size() = 1", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "noContainerForStatemachine", "expression": "self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "StateMachine", "inv": "activeStateHierarchyConsistency", "expression": "if self.isActive then self.activeSubTree() else self.unactiveSubTree() endif", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "State", "inv": "containerForAllStates", "expression": "not self.oclIsTypeOf(StateMachine) implies not self.container.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "initialStateInComposite", "expression": "self.states->includes(self.initialState.referencedState)", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "CompositeState", "inv": "uniqueCompositeName", "expression": "self.states->forAll(s1 : State | self.states->forAll(s2 : State | s1.name = s2.name implies s1 = s2))", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Transition", "inv": "transInitialState", "expression": "not self.source.oclIsTypeOf(StateMachine) and not self.target.oclIsTypeOf(StateMachine)", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "Event", "inv": "uniqueEventName", "expression": "Event.allInstances()->forAll(e : Event | e.name = self.name implies e = self)", "file": "ocl-dataset/dataset/repos/Lensorseul/ATL/StateMachine/metaModels/StateMachine.ecore"}, {"context": "DeclaredStrategy", "inv": "UniqueVariableParameters", "expression": "Tuple { message : String = 'The parameter names are not unique for declared strategy: ' + name, status : Boolean = formalParams <> null implies formalParams ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "DeclaredStrategy", "inv": "ValidFormalParams", "expression": "Tuple { message : String = 'Formal params for strategy ' + name + ' are null', status : Boolean = formalParams <> null }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "DeclaredStrategyInstance", "inv": "RightNumberOfParams", "expression": "Tuple { message : String = 'Invalid number of parameters for strategy ' + name + '. Required ' + declaration.formalParams ->size() ->toString() + ', found ' + actualParams ->size() ->toString(), status : Boolean = (declaration <> null) implies declaration.formalParams ->size() = actualParams ->size() }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.ts/model/transitionsystem.ecore"}, {"context": "ADT", "inv": "UniqueVariableNames", "expression": "Tuple { message : String = 'The following variables are defined more than once: ' + variables ->select(v | (variables ->select(v1 | (v1.name = v.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = variables ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "ASort", "inv": "NameNotEmpty", "expression": "Tuple { message : String = 'Cannot assign empty name to sort', status : Boolean = name <> '' }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "SubSort", "inv": "SuperSortNotNull", "expression": "Tuple { message : String = 'The super sort of sort ' + name + 'cannot be null', status : Boolean = superSort <> null }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Signature", "inv": "UniqueSorts", "expression": "Tuple { message : String = 'There are some sorts in the adt that appear more than once: ' + sorts ->select(s1 | (sorts ->select(s2 | (s2.name = s1.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = sorts <> null implies sorts ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Signature", "inv": "UniqueOperations", "expression": "Tuple { message : String = 'There are some operations in the adt that appear more than once: ' + allOperations ->select(op1 | (allOperations ->select(op2 | (op2.name = op1.name)) ->size() > 1)) ->collect(name) ->toString(), status : Boolean = allOperations ->isUnique(name) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "VariableDeclaration", "inv": "NameNotEmpty", "expression": "name <> ''", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Operation", "inv": "ValidReturnType", "expression": "Tuple { message : String = 'The return type for operation ' + name + ' was not set.', status : Boolean = returnType <> null }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "CorrectNumberOfParameters", "expression": "Tuple { message : String = 'Invalid number of parameters for term: ' + self.toString() + '. Required ' + operationSymbol.formalParameters ->size() ->toString() + ', found ' + subterms ->size() ->toString(), status : Boolean = (operationSymbol <> null) implies subterms ->size() = operationSymbol.formalParameters ->size() }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "CorrectTypeOfParameters", "expression": "Tuple { message : String = 'Invalid type of parameters for term: ' + self.toString(), status : Boolean = subterms <> null implies subterms ->forAll(p | ((p.sort <> null) and (operationSymbol <> null)) implies p.sort.isSubSortOf(operationSymbol.formalParameters ->at(subterms ->indexOf(p)))) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Term", "inv": "RightAdtSubterms", "expression": "Tuple { message : String = 'Some subterms do not have the same adt as the parent term: ' + self.toString(), status : Boolean = (subterms <> null) implies subterms ->forAll(t | t.adt = self.adt) }.status", "file": "ocl-dataset/dataset/repos/mundacho/stratagem/ch.unige.cui.smv.metamodel.adt/model/adt.ecore"}, {"context": "Requirement", "inv": "differentResponsible", "expression": "self.requirementOwnedBy.personOwnsCategory->forAll(c | not c.requirement->includes(self))", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "Requirement", "inv": "notItself", "expression": "self.dependencySource->select(oclIsTypeOf(Requires))->forAll(requires: Dependency | findLeafNodes(requires.oclAsType(Requires).argument)->forAll(ra: RequirementArgument | ra.requirement <> self))", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "Category", "inv": "moreRequirementsThanCategories", "expression": "Category.allInstances()->size() <= Requirement.allInstances()->size()", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "Person", "inv": "isResponsible", "expression": "self.personOwnsCategory->size() + self.personOwnsRequirement->size() > 0", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "SimpleDependency", "inv": "targetNotSource", "expression": "not self.dependencyTarget.dependencySource->includes(self)", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "Requires", "inv": "selfDependency", "expression": "self.argument.oclAsSet()->closure(arg : Argument | if arg.oclIsKindOf(BinaryOperatorArgument) then arg.oclAsType(BinaryOperatorArgument).leftSideArgument.oclAsSet()->including(arg.oclAsType(BinaryOperatorArgument).rightSideArgument) else if arg.oclIsKindOf(NOTOperator) then arg.oclAsType(NOTOperator).argument.oclAsSet() else arg.oclAsSet() endif endif )->select(arg : Argument | arg.oclIsKindOf(RequirementArgument))->forAll(arg : Argument | not arg.oclAsType(RequirementArgument).requirement.dependencySource->includes(self))", "file": "ocl-dataset/dataset/repos/sebbe33/MDE/model/requirements_editor.ecore"}, {"context": "StateMachine", "inv": "oneInitial", "expression": "self.states->one(e : StateVertex | e.oclIsKindOf(InitialState))", "file": "ocl-dataset/dataset/repos/jdelara/DSL-tao/src/org.mondo.dsl/patterns/StateMachine.ecore"}, {"context": "Wikipedia", "inv": "atLeastOneSysOpOrAdminAvailable", "expression": "user->select(obj | obj.oclIsKindOf(RegisteredUser))->size() > 0 implies (user->select(obj | obj.oclIsKindOf(SysOp))->size() > 0 and user->select(obj | obj.oclIsKindOf(Administrator))->size() > 0)", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 2/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "Wikipedia", "inv": "qualityOfWikipedia", "expression": "averageEditedPagesPerUser >= 1", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 2/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "RegisteredUser", "inv": "timeIsCorrect", "expression": "wikiTime >= registrationDateJD", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 2/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "Wikipedia", "inv": "atLeastOneSysOpOrAdminAvailable", "expression": "user->select(obj | obj.oclIsKindOf(RegisteredUser))->size() > 0 implies (user->select(obj | obj.oclIsKindOf(SysOp))->size() > 0 and user->select(obj | obj.oclIsKindOf(Administrator))->size() > 0)", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 4/Result/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "Wikipedia", "inv": "qualityOfWikipedia", "expression": "averageEditedPagesPerUser >= 1", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 4/Result/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "RegisteredUser", "inv": "timeIsCorrect", "expression": "wikiTime >= registrationDateJD", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 4/Result/at.ac.univie.swa.ase2015.a9902268.task2/model/model.ecore"}, {"context": "Wiki", "inv": "mustHaveSysopAndAdmin", "expression": "users->exists(user | user.role.type = RoleType::ADMIN ) and users->exists(user | user.role.type = RoleType::SYSOP )", "file": "ocl-dataset/dataset/repos/fridlutz/UNIVIE/ASE/UE/Task 5/input/WikiSampleSolution/model/wikiSampleSolution.ecore"}, {"context": "ComponentBasedSystem", "inv": "SameParentContainerOrLinkedContainerOfconnectedAssemblyContexts", "expression": "self.assemblyconnector->forAll( a | let c1 : Container = GetContainerOfContext(a.providedAssemblyContext), c2: Container = GetContainerOfContext(a.requiredAssemblyContext) in c1 = c2 or environment.IsLinked(c1,c2))", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "CompositeComponent", "inv": "SameInterfaceDelegated", "expression": "self.delegationconnector-> forAll( d | d.role->includesAll(providedrole) or d.role->includesAll(requiredrole))", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "CompositeComponent", "inv": "RoleCount", "expression": "self.delegationconnector->size() = self.requiredrole->size() + self.providedrole->size()", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "DelegationConnector", "inv": "DelegationConnectorRolesType", "expression": "self.role->first().oclType() = self.role->last().oclType()", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "DelegationConnector", "inv": "DelegationConnectorRolesInterface", "expression": "self.role->first().interface = self.role->last().interface", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "Allocation", "inv": "NestedComponentAllocation", "expression": "let composites : Collection(CompositeComponent) = self.allocationcontext->select(a | a.assemblycontext.component.oclIsTypeOf(CompositeComponent)).assemblycontext.component.oclAsType(CompositeComponent) in self.allocationcontext.assemblycontext->excludesAll(composites.assemblycontext)", "file": "ocl-dataset/dataset/repos/uwecl/MDSD-Praktikum/eclipse/ComponentBasedSystem/model/componentBasedSystem.ecore"}, {"context": "PetriNet", "inv": "NoIsolatedTransitionPN", "expression": "self.transition -> forAll(t:Transition|t.preArc -> notEmpty() or t.postArc -> notEmpty())", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/05b/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "NoIsolatedTransition", "expression": "self.preArc -> notEmpty() or self.postArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/05a/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "DifferentNamedPlaces", "expression": "self.place -> forAll(p1:Place | self.place -> forAll(p2:Place | p1 <> p2 implies p1.name <> p2.name))", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/07/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "TransitionIsNamed", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/03/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "TransitionHasIncomingArcs", "expression": "self.preArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/01/PetriNetWithOCLPaper.ecore"}, {"context": "Place", "inv": "TokensNotNegative", "expression": "self.token >= 0", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/02/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "PetriNetNotEmpty", "expression": "self.transition -> notEmpty() or self.place -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/04/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "PlaceWithToken", "expression": "self.place -> exists(p:Place| p.token > 0)", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/09/PetriNetWithOCLPaper.ecore"}, {"context": "Place", "inv": "NoIsolatedPlace", "expression": "self.preArc -> notEmpty() or self.postArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/06/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "TransitionConnectedToPlace", "expression": "self.transition -> forAll(t:Transition | t.preArc -> exists(apt:ArcPT | apt.place -> notEmpty()) or t.postArc -> exists(atp:ArcTP | atp.place -> notEmpty()))", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/reference/08/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "NoIsolatedTransitionPN", "expression": "self.transition -> forAll(t:Transition|t.preArc -> notEmpty() or t.postArc -> notEmpty())", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/05b/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "NoIsolatedTransition", "expression": "self.preArc -> notEmpty() or self.postArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/05a/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "DifferentNamedPlaces", "expression": "self.place -> forAll(p1:Place | self.place -> forAll(p2:Place | p1 <> p2 implies p1.name <> p2.name))", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/07/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "TransitionIsNamed", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/03/PetriNetWithOCLPaper.ecore"}, {"context": "Transition", "inv": "TransitionHasIncomingArcs", "expression": "self.preArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/01/PetriNetWithOCLPaper.ecore"}, {"context": "Place", "inv": "TokensNotNegative", "expression": "self.token >= 0", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/02/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "PetriNetNotEmpty", "expression": "self.transition -> notEmpty() or self.place -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/04/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "PlaceWithToken", "expression": "self.place -> exists(p:Place| p.token > 0)", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/09/PetriNetWithOCLPaper.ecore"}, {"context": "Place", "inv": "NoIsolatedPlace", "expression": "self.preArc -> notEmpty() or self.postArc -> notEmpty()", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/06/PetriNetWithOCLPaper.ecore"}, {"context": "PetriNet", "inv": "TransitionConnectedToPlace", "expression": "self.transition -> forAll(t:Transition | t.preArc -> exists(apt:ArcPT | apt.place -> notEmpty()) or t.postArc -> exists(atp:ArcTP | atp.place -> notEmpty()))", "file": "ocl-dataset/dataset/repos/dstrueber/bigtrafo/de.bigtrafo.benchmark/ocl/instances/08/PetriNetWithOCLPaper.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/Heady1890/modelEngineeringLab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Sheet", "inv": "NumberOfRowsEqualOrGreaterThanZero", "expression": "self.numberOfRows >= 0", "file": "ocl-dataset/dataset/repos/Mashashi/jaexcel/pt.iul.iscte.dcti.pa.jaxelmodel/model/jaxel.ecore"}, {"context": "Sheet", "inv": "NumberOfColumnsEqualOrGreaterThanZero", "expression": "self.numberOfColumns >= 0", "file": "ocl-dataset/dataset/repos/Mashashi/jaexcel/pt.iul.iscte.dcti.pa.jaxelmodel/model/jaxel.ecore"}, {"context": "Sheet", "inv": "NumberOfRowsEqualOrSmallerToTheIndicated", "expression": "self.row_sheet->size() <= self.numberOfRows", "file": "ocl-dataset/dataset/repos/Mashashi/jaexcel/pt.iul.iscte.dcti.pa.jaxelmodel/model/jaxel.ecore"}, {"context": "Sheet", "inv": "NumberOfColumnsEqualOrSmallerToTheIndicated", "expression": "self.row_sheet.columns->forAll(map : EIntegerObjectToCellColumnMap | map.key <= numberOfColumns)", "file": "ocl-dataset/dataset/repos/Mashashi/jaexcel/pt.iul.iscte.dcti.pa.jaxelmodel/model/jaxel.ecore"}, {"context": "Table", "inv": "currentRowAxisInHistory", "expression": "rowAxisProvidersHistory->includes(currentRowAxisProvider)", "file": "ocl-dataset/dataset/repos/ApexSoft/Papyrus-1.0-M5-DevSourceSet/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Table", "inv": "currentColumnAxisInHistory", "expression": "columnAxisProvidersHistory->includes(currentColumnAxisProvider)", "file": "ocl-dataset/dataset/repos/ApexSoft/Papyrus-1.0-M5-DevSourceSet/org.eclipse.papyrus.infra.nattable.model/model/nattable.ecore"}, {"context": "Contact", "inv": "testContactAdresse", "expression": "adresse <> null", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactAdresse2", "expression": "adresse = 'rue des facs'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactNom", "expression": "nom = 'Marrec'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactPrenom", "expression": "prenom = 'Cedric'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactTel", "expression": "telephone = '0606060606'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Photo", "inv": "tailleMinimum", "expression": "taille>=0.1", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Photo", "inv": "testPhotoDoubleExiste", "expression": "Photo.allInstances()->forAll(p1, p2 | p1 <> p2 implies p1.nom <> p2.nom )", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testCouleurFond", "expression": "couleurFond = 'White'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testCouleurPolice", "expression": "couleurPolice = 'Black'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testTitre", "expression": "titreSite='SiteWeb'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testAuteurs", "expression": "auteurs= 'Socrate'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testTaillePolice", "expression": "taillePolice=14", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactAdresse", "expression": "adresse <> null", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactAdresse2", "expression": "adresse = 'rue des facs'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactNom", "expression": "nom = 'Marrec'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactPrenom", "expression": "prenom = 'Cedric'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Contact", "inv": "testContactTel", "expression": "telephone = '0606060606'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Photo", "inv": "tailleMinimum", "expression": "taille>=0.1", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Photo", "inv": "testPhotoDoubleExiste", "expression": "Photo.allInstances()->forAll(p1, p2 | p1 <> p2 implies p1.nom <> p2.nom )", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testCouleurFond", "expression": "couleurFond = 'White'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testCouleurPolice", "expression": "couleurPolice = 'Black'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testTitre", "expression": "titreSite='SiteWeb'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testAuteurs", "expression": "auteurs= 'Socrate'", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "ConfigurationPage", "inv": "testTaillePolice", "expression": "taillePolice=14", "file": "ocl-dataset/dataset/repos/M2TIIL2016-2017/SiteWeb_XText/siteWeb/model/siteWeb.ecore"}, {"context": "Person", "inv": "KeineUrlaubstageUEbrig", "expression": "self.leaveDays > 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "Person", "inv": "KeinNameIstEingetragen", "expression": "self.name->size() <> 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "HolidayApplication", "inv": "KeinTagEingetragen", "expression": "self.dates->size() <> 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "HolidayApplication", "inv": "NameIstNichtEingetragen", "expression": "self.name->size() <> 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "ResponsiblePerson", "inv": "ChefHatKeineMitarbeiter", "expression": "self.employees->size() <> 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "Employee", "inv": "SelbstRepresentation", "expression": "self.standin.name <> self.name", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "Employee", "inv": "HatKeinenChef", "expression": "self.responsible->size() <> 0", "file": "ocl-dataset/dataset/repos/Nielko/MBSE-Vacation-Manager/de.tu_bs.vacation_manager.test/model/Calender.ecore"}, {"context": "OfflineModel", "inv": "IncrementalScheme", "expression": "self.rootNodes()->forAll(n:Node| self.incremental(n))", "file": "ocl-dataset/dataset/repos/jgallud/metamodel/es.uclm.offlinemodel/model/OfflineMOdel.ecore"}, {"context": "OfflineModel", "inv": "MandatoryScheme", "expression": "self.rootNodes()->forAll(n:Node| self.mandatory(n))", "file": "ocl-dataset/dataset/repos/jgallud/metamodel/es.uclm.offlinemodel/model/OfflineMOdel.ecore"}, {"context": "OfflineModel", "inv": "FreeScheme", "expression": "self.rootNodes()->forAll(n:Node| self.free(n))", "file": "ocl-dataset/dataset/repos/jgallud/metamodel/es.uclm.offlinemodel/model/OfflineMOdel.ecore"}, {"context": "Element", "inv": "ForceParentNode", "expression": "not self.parent.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/jgallud/metamodel/es.uclm.offlinemodel/model/OfflineMOdel.ecore"}, {"context": "StateMachine", "inv": "StateUidUnique", "expression": "self.states->collect(s : State | s.uid)->isUnique(n : Integer | n)", "file": "ocl-dataset/dataset/repos/marchalvincent/knomarcar/model/metaModel.ecore"}, {"context": "StateMachine", "inv": "StateTransitionDestination", "expression": "states->select(s : State | s.transitions->select(t: Transition | t.dstId = s)->notEmpty())->size() = 0", "file": "ocl-dataset/dataset/repos/marchalvincent/knomarcar/model/metaModel.ecore"}, {"context": "State", "inv": "TransitionsUniqueName", "expression": "transitions->collect(t : Transition | t.nameIn)->isUnique(n : String | n)", "file": "ocl-dataset/dataset/repos/marchalvincent/knomarcar/model/metaModel.ecore"}, {"context": "EsquemaBD", "inv": "tablasConMismoNombre", "expression": "self.tablas->forAll(t1, t2 : Tabla | t1 <> t2 implies t1.nombre <> t2.nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "EsquemaBD", "inv": "tablasConMismoNombre2", "expression": "self.tablas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "Tabla", "inv": "columnasConMismoNombre", "expression": "self.columnas->forAll(c1, c2 : Columna | c1 <> c2 implies c1.nombre <> c2.nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "Tabla", "inv": "columnasConMismoNombre2", "expression": "self.columnas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "Tabla", "inv": "nombreMayusculas", "expression": "self.nombre = self.nombre.toUpper()", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "Columna", "inv": "nombreMayusculaPrimeraLetra", "expression": "self.nombre.substring(1, 1) = self.nombre.substring(1, 1).toUpper()", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/src/metamodels/db.ecore"}, {"context": "EsquemaBD", "inv": "tablasConMismoNombre", "expression": "self.tablas->forAll(t1, t2 : Tabla | t1 <> t2 implies t1.nombre <> t2.nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "EsquemaBD", "inv": "tablasConMismoNombre2", "expression": "self.tablas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "Tabla", "inv": "columnasConMismoNombre", "expression": "self.columnas->forAll(c1, c2 : Columna | c1 <> c2 implies c1.nombre <> c2.nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "Tabla", "inv": "columnasConMismoNombre2", "expression": "self.columnas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "Tabla", "inv": "nombreMayusculas", "expression": "self.nombre = self.nombre.toUpper()", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "Columna", "inv": "nombreMayusculaPrimeraLetra", "expression": "self.nombre.substring(1, 1) = self.nombre.substring(1, 1).toUpper()", "file": "ocl-dataset/dataset/repos/Javirln/Api-backend-generator/bin/metamodels/db.ecore"}, {"context": "StormSupervisor", "inv": "mustRequireZookeeperAndNimbus", "expression": "requiredport -> size() > 1", "file": "ocl-dataset/dataset/repos/MicheleGuerriero/Transformations4DICE/rollout/org.xtext.example.toscadsl.parent/org.xtext.example.toscadsl/metamodels/ddsm.ecore"}, {"context": "StormNimbus", "inv": "mustRequireZookeeper", "expression": "requiredport -> size() > 0", "file": "ocl-dataset/dataset/repos/MicheleGuerriero/Transformations4DICE/rollout/org.xtext.example.toscadsl.parent/org.xtext.example.toscadsl/metamodels/ddsm.ecore"}, {"context": "StormNimbus", "inv": "mustProvideNimbusAccess", "expression": "providedport -> size() > 0", "file": "ocl-dataset/dataset/repos/MicheleGuerriero/Transformations4DICE/rollout/org.xtext.example.toscadsl.parent/org.xtext.example.toscadsl/metamodels/ddsm.ecore"}, {"context": "Zookeeper", "inv": "mustProvideZookeeperAccess", "expression": "providedport -> size() > 0", "file": "ocl-dataset/dataset/repos/MicheleGuerriero/Transformations4DICE/rollout/org.xtext.example.toscadsl.parent/org.xtext.example.toscadsl/metamodels/ddsm.ecore"}, {"context": "Artifact", "inv": "typeHierarchy", "expression": "type.containerTypes->includes(parent.type) or parent = null", "file": "ocl-dataset/dataset/repos/sherbold/CrossPare/CrossPare/decent/models/DECENTv3.ecore"}, {"context": "Category", "inv": "IdentityUnique", "expression": "Category.allInstances()->isUnique(scheme + term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Category", "inv": "SchemeEndsWithSharp", "expression": "scheme.substring(scheme.size(),scheme.size()) = '#'", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Category", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Kind", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Kind", "inv": "CorrectScheme", "expression": "scheme = self.oclContainer().oclAsType(Extension).scheme", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Kind", "inv": "NoCyclicInheritance", "expression": "parent->closure(parent)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Kind", "inv": "EntityKindIsRootParent", "expression": "self->closure(parent)->exists(k | k.term = 'entity' and k.scheme = 'http://schemas.ogf.org/occi/core#' and k.parent = null)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Kind", "inv": "AttributesNameNotAlreadyDefinedInParent", "expression": "attributes.name->excludesAll(parent->closure(parent).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Action", "inv": "CorrectScheme", "expression": "let category = oclContainer().oclAsType(Category) in scheme = category.scheme.substring(1,category.scheme.size()-1) + '/' + category.term + '/action#'", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Mixin", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Mixin", "inv": "CorrectScheme", "expression": "/* Previously let ownerScheme = owner.oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1) */ let owner = self.oclContainer() in if owner.oclIsTypeOf(Extension) then let ownerScheme = owner.oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1) else true endif", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Mixin", "inv": "NoCyclicInheritance", "expression": "depends->closure(depends)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Mixin", "inv": "AttributesNameNotAlreadyDefinedInDepends", "expression": "attributes.name->excludesAll(depends->closure(depends).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Entity", "inv": "IdUnique", "expression": "Entity.allInstances()->isUnique(id)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Entity", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Entity", "inv": "KindCompatibleWithOneAppliesOfEachMixin", "expression": "mixins->forAll(m | m.applies->notEmpty() implies m.applies->exists(k | kind->closure(parent)->includes(k)))", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Resource", "inv": "ResourceKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Link", "inv": "LinkKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "SchemeUnique", "expression": "Extension.allInstances()->isUnique(scheme)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "KindsSchemeValid", "expression": "kinds->forAll(k | k.scheme = self.scheme)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinsSchemeValid", "expression": "mixins->forAll(m | m.scheme.substring(1,scheme.size()-1) = scheme.substring(1,scheme.size()-1))", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "TermUnicity", "expression": "kinds.term->intersection(mixins.term)->isEmpty()", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "KindParentLocalOrImported", "expression": "kinds->forAll(parent <> null implies let parentExtension = parent.oclContainer() in parentExtension = self or import->includes(parentExtension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinDependsLocalOrImported", "expression": "mixins.depends->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinAppliesLocalOrImported", "expression": "mixins.applies->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesKindsInUse", "expression": "use->includesAll(resources.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesMixinsInUse", "expression": "/* Previously use->includesAll(resources.mixins.oclContainer()) */ resources.mixins->forAll(mo | let mixinOwner = mo.oclContainer() in if mixinOwner.oclIsTypeOf(Extension) then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif )", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksKindsInUse", "expression": "use->includesAll(resources.links.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksMixinsInUse", "expression": "/* Previously use->includesAll(resources.links.mixins.oclContainer()) */ resources.links.mixins->forAll(mo | let mixinOwner = mo.oclContainer() in if mixinOwner.oclIsTypeOf(Extension) then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif )", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksTargetsInConfiguration", "expression": "resources.links.target->forAll(r | r.oclContainer() = self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllMixinsAreTags", "expression": "mixins->forAll(attributes->isEmpty() and actions->isEmpty() and depends->isEmpty())", "file": "ocl-dataset/dataset/repos/occiware/ecore/clouddesigner/org.occiware.clouddesigner.occi/model/OCCI.ecore"}, {"context": "Category", "inv": "IdentityUnique", "expression": "Category.allInstances()->isUnique(scheme + term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Category", "inv": "SchemeEndsWithSharp", "expression": "scheme.substring(scheme.size(),scheme.size()) = '#'", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Category", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Kind", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Kind", "inv": "CorrectScheme", "expression": "scheme = self.oclContainer().oclAsType(Extension).scheme", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Kind", "inv": "NoCyclicInheritance", "expression": "parent->closure(parent)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Kind", "inv": "EntityKindIsRootParent", "expression": "self->closure(parent)->exists(k | k.term = 'entity' and k.scheme = 'http://schemas.ogf.org/occi/core#' and k.parent = null)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Kind", "inv": "AttributesNameNotAlreadyDefinedInParent", "expression": "attributes.name->excludesAll(parent->closure(parent).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Action", "inv": "CorrectScheme", "expression": "let category = oclContainer().oclAsType(Category) in scheme = category.scheme.substring(1,category.scheme.size()-1) + '/' + category.term + '/action#'", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Mixin", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Mixin", "inv": "CorrectScheme", "expression": "let ownerScheme = self.oclContainer().oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Mixin", "inv": "NoCyclicInheritance", "expression": "depends->closure(depends)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Mixin", "inv": "AttributesNameNotAlreadyDefinedInDepends", "expression": "attributes.name->excludesAll(depends->closure(depends).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Entity", "inv": "IdUnique", "expression": "Entity.allInstances()->isUnique(id)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Entity", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Entity", "inv": "KindCompatibleWithOneAppliesOfEachMixin", "expression": "mixins->forAll(m | m.applies->notEmpty() implies m.applies->exists(k | kind->closure(parent)->includes(k)))", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Resource", "inv": "ResourceKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Link", "inv": "LinkKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "SchemeUnique", "expression": "Extension.allInstances()->isUnique(scheme)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "KindsSchemeValid", "expression": "kinds->forAll(k | k.scheme = self.scheme)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "MixinsSchemeValid", "expression": "mixins->forAll(m | m.scheme.substring(1,scheme.size()-1) = scheme.substring(1,scheme.size()-1))", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "TermUnicity", "expression": "kinds.term->intersection(mixins.term)->isEmpty()", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "KindParentLocalOrImported", "expression": "kinds->forAll(parent <> null implies let parentExtension = parent.oclContainer() in parentExtension = self or import->includes(parentExtension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "MixinDependsLocalOrImported", "expression": "mixins.depends->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Extension", "inv": "MixinAppliesLocalOrImported", "expression": "mixins.applies->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesKindsInUse", "expression": "use->includesAll(resources.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesMixinsInUse", "expression": "use->includesAll(resources.mixins.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksKindsInUse", "expression": "use->includesAll(resources.links.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksMixinsInUse", "expression": "use->includesAll(resources.links.mixins.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksTargetsInConfiguration", "expression": "resources.links.target->forAll(r | r.oclContainer() = self)", "file": "ocl-dataset/dataset/repos/occiware/ecore/metamodel/OCCI.ecore"}, {"context": "Category", "inv": "IdentityUnique", "expression": "Category.allInstances()->isUnique(scheme + term)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Category", "inv": "SchemeEndsWithSharp", "expression": "scheme.substring(scheme.size(), scheme.size()) = '#'", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Category", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Type", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Type", "inv": "ConstraintNameUnique", "expression": "constraints->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "FSM", "inv": "AttributeTypeMustBeEEnum", "expression": "attribute.type.oclIsTypeOf(ecore::EEnum)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "State", "inv": "StateLiteralAlreadyDefinedInFSMAttributeType", "expression": "owningFSM.attribute.type=self.sliteral.eEnum", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Kind", "inv": "CorrectScheme", "expression": "scheme = self.oclContainer().oclAsType(Extension).scheme", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Kind", "inv": "NoCyclicInheritance", "expression": "parent->closure(parent)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Kind", "inv": "EntityKindIsRootParent", "expression": "self->closure(parent)->exists(k | k.term = 'entity' and k.scheme = 'http://schemas.ogf.org/occi/core#' and k.parent = null)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Kind", "inv": "AttributesNameNotAlreadyDefinedInParent", "expression": "attributes.name->excludesAll(parent->closure(parent).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Action", "inv": "CorrectScheme", "expression": "let category = oclContainer().oclAsType(Category) in scheme = category.scheme.substring(1, category.scheme.size() - 1) + '/' + category.term + '/action#'", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Mixin", "inv": "CorrectScheme", "expression": "/* Previously let ownerScheme = owner.oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1) */ let owner = self.oclContainer() in if owner.oclIsTypeOf(Extension) then let ownerScheme = owner.oclAsType(Extension).scheme in scheme.substring(1, ownerScheme.size() - 1) = ownerScheme.substring(1, ownerScheme.size() - 1) else true endif", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Mixin", "inv": "NoCyclicInheritance", "expression": "depends->closure(depends)->excludes(self)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Mixin", "inv": "AttributesNameNotAlreadyDefinedInDepends", "expression": "attributes.name->excludesAll(depends->closure(depends).attributes.name)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Entity", "inv": "IdUnique", "expression": "Entity.allInstances()->isUnique(id)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Entity", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Entity", "inv": "KindCompatibleWithOneAppliesOfEachMixin", "expression": "parts.mixin->forAll(m | m.applies->notEmpty() implies m.applies->exists(k | kind->closure(parent)->includes(k)))", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Resource", "inv": "ResourceKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Link", "inv": "LinkKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "SchemeUnique", "expression": "Extension.allInstances()->isUnique(scheme)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "KindsSchemeValid", "expression": "kinds->forAll(k | k.scheme = self.scheme)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinsSchemeValid", "expression": "mixins->forAll(m | m.scheme.substring(1, scheme.size() - 1) = scheme.substring(1, scheme.size() - 1))", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "TermUnicity", "expression": "kinds.term->intersection(mixins.term)->isEmpty()", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "KindParentLocalOrImported", "expression": "kinds->forAll(parent <> null implies let parentExtension = parent.oclContainer() in parentExtension = self or import->includes(parentExtension))", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinDependsLocalOrImported", "expression": "mixins.depends->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Extension", "inv": "MixinAppliesLocalOrImported", "expression": "mixins.applies->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesKindsInUse", "expression": "use->includesAll(resources.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesMixinsInUse", "expression": "/* Previously use->includesAll(resources.mixins.oclContainer()) */ resources.parts.mixin->forAll(mo | let mixinOwner = mo.oclContainer() in if mixinOwner.oclIsTypeOf(Extension) then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksKindsInUse", "expression": "use->includesAll(resources.links.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksMixinsInUse", "expression": "/* Previously use->includesAll(resources.links.mixins.oclContainer()) */ resources.links.parts.mixin->forAll(mo | let mixinOwner = mo.oclContainer() in if mixinOwner.oclIsTypeOf(Extension) then self.use->includes(mixinOwner.oclAsType(Extension)) else self.mixins->includes(mo) endif)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksTargetsInConfiguration", "expression": "resources.links.target->forAll(r | r.oclContainer() = self)", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Configuration", "inv": "AllMixinsAreTags", "expression": "mixins->forAll(attributes->isEmpty() and actions->isEmpty() and depends->isEmpty())", "file": "ocl-dataset/dataset/repos/occiware/OCCI-Studio/plugins/org.eclipse.cmf.occi.core/model/OCCI.ecore"}, {"context": "Process", "inv": "nomDifferent", "expression": "Process.allInstances() ->select(i | i.oclIsTypeOf(WorkDefinition)) ->forAll(i,j | i<>j implies i.name <> j.name)", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "WorkDefinition", "inv": "oneChar", "expression": "self.name <> ''", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "previousWDinSameProcess", "expression": "self.process = self.predecessor.process", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nextWDinSameProcess", "expression": "self.process = self.successor.process", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "WorkSequence", "inv": "nonReflexive", "expression": "self.successor <> self.predecessor", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "Resource", "inv": "nameNotEmpty", "expression": "self.name <> null and self.name <> ''", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "UseResources", "inv": "correctWeight", "expression": "self.weight <= self.usedResource.quantity", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "UseResources", "inv": "positiveWeight", "expression": "self.weight >= 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.simplepdl/SimplePDL.ecore"}, {"context": "Arc", "inv": "correctArc", "expression": "(self.debut.oclIsTypeOf(Place) and self.fin.oclIsTypeOf(Transition)) or (self.debut.oclIsTypeOf(Transition) and self.fin.oclIsTypeOf(Place))", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "pasBoucle", "expression": "self.debut <> self.fin", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "Arc", "inv": "poidsPos", "expression": "self.poids > 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "Place", "inv": "nbJetonPos", "expression": "self.nbJeton >= 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "Place", "inv": "bornePos", "expression": "self.borne > 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "PetriElement", "inv": "petriElementnameNotEmpty", "expression": "self.name <> null and self.name <> ''", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "ReseauPetri", "inv": "petriNewtorkNameNotEmpty", "expression": "self.name <> null and self.name <> ''", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/BE/fr.enseeiht.gls.petrinet/PetriNet.ecore"}, {"context": "Place", "inv": "nbJetonsPositif", "expression": "self.nbJetons >= 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "Arc", "inv": "poidsPositif", "expression": "self.poids > 0", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "Arc", "inv": "arcCorrect", "expression": "(self.dbt.oclIsTypeOf(Place) and self.fin.oclIsTypeOf(Transition)) or (self.dbt.oclIsTypeOf(Transition) and self.fin.oclIsTypeOf(Place))", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "PetriElement", "inv": "nameNotNull", "expression": "self.nom <> '' and self.nom <> null", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "PetriNet", "inv": "nameNotNull", "expression": "self.name <> '' and self.name <> null", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "PetriNet", "inv": "nameForbidden", "expression": "name <> 'PetriNet'", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "PetriNet", "inv": "nameDifferentArc", "expression": "self->select(arc | arc.oclIsTypeOf(Arc)) ->forAll(i,j|i<>j implies i.name <> j.name)", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "PetriNet", "inv": "nameDifferentPetriElement", "expression": "self->select(pe | pe.oclIsTypeOf(PetriElement)) ->forAll(i,j|i<>j implies i.name <> j.name)", "file": "ocl-dataset/dataset/repos/flogaribal/ENSEEIHT/2A/GLS/Projet/fr.enseeiht.gls.projet404.games.Games2PetriNet/PetriNet.ecore"}, {"context": "ElementoDiagrama", "inv": "nombreNoValido", "expression": "Sequence{1 .. self.nombre.size()}->collect(i | self.nombre.substring(i, i))->excludes(' ')", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "DiagramEditor", "inv": "clasesDistintoNombre", "expression": "self.clases->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "DiagramEditor", "inv": "relacionesBTSinCorresponder", "expression": "clases->collect(c | c.relacionesBT)->size() = clases->collect(c| c.relacionesBT->collect(rBT | c.atributos->select(a | a.nombre.toLowerCase() = rBT.destino_BT.nombre.toString().toLowerCase())))->size()", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "Clase", "inv": "atributosDistintoNombre", "expression": "self.atributos->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "RelacionBelongTo", "inv": "relacionadaBTASiMisma", "expression": "self.destino_BT <> self.origen_BT", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "RelacionHasManyThrough", "inv": "relacionadaHMTPorSiMisma", "expression": "self.destino_HMT <> self.origen_HMT", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/DiagramClassEditor/ClassDiagramEditor/metamodel/ClassDiagramEditor.ecore"}, {"context": "DataBaseElement", "inv": "nameEmpty", "expression": "not (self.name ->isEmpty())", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "illegalName", "expression": "Sequence{1 .. self.name.size()} ->collect(i | self.name.substring(i, i)) ->excludes(' ')", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "Schema", "inv": "tableNameUnique", "expression": "self.tables ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "Table", "inv": "noIdName", "expression": "not (self.columns ->exists(name.toUpperCase() = 'id'.toUpperCase()))", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "Table", "inv": "columnNameUnique", "expression": "self.columns ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "Table", "inv": "cycleForeignKey", "expression": "not(self.foreignKeys ->notEmpty() and self.foreignKeys ->exists(reference.name = self.name))", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "ForeignKey", "inv": "sameTypeAtLink", "expression": "self.column.type = self.reference.primaryKey.type", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/dataBase.ecore"}, {"context": "ElementoDiagrama", "inv": "nombreNoValido", "expression": "Sequence{1 .. self.nombre.size()}->collect(i | self.nombre.substring(i, i))->excludes(' ')", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "DiagramEditor", "inv": "clasesDistintoNombre", "expression": "self.clases->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "DiagramEditor", "inv": "relacionesBTSinCorresponder", "expression": "clases->collect(c | c.relacionesBT)->size() = clases->collect(c| c.relacionesBT->collect(rBT | c.atributos->select(a | a.nombre.toLowerCase() = rBT.destino_BT.nombre.toString().toLowerCase() and a.tipo.toString() = 'integer' )))->size()", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "Clase", "inv": "atributosDistintoNombre", "expression": "self.atributos->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "Agregacion", "inv": "agregadaPorSiMisma", "expression": "self.destino_a <> self.origen_a", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "Composicion", "inv": "compuestaPorSiMisma", "expression": "self.destino_c <> self.origen_c", "file": "ocl-dataset/dataset/repos/varusblack/comida-rapida/M2M-TrabajoSMA/metamodelos/ClassDiagramEditor.ecore"}, {"context": "DataBaseElement", "inv": "nameEmpty", "expression": "not (self.name ->isEmpty())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "illegalName", "expression": "Sequence{1 .. self.name.size()} ->collect(i | self.name.substring(i, i)) ->excludes(' ')", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "Schema", "inv": "tableNameUnique", "expression": "self.tables ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "noIdName", "expression": "not (self.columns ->exists(name.toUpperCase() = 'id'.toUpperCase()))", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "columnNameUnique", "expression": "self.columns ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "cycleForeignKey", "expression": "not(self.foreignKeys ->notEmpty() and self.foreignKeys ->exists(reference.name = self.name))", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "ForeignKey", "inv": "sameTypeAtLink", "expression": "self.column.type = self.reference.primaryKey.type", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/src/metamodel/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "nameEmpty", "expression": "not (self.name ->isEmpty())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "illegalName", "expression": "Sequence{1 .. self.name.size()} ->collect(i | self.name.substring(i, i)) ->excludes(' ')", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "Schema", "inv": "tableNameUnique", "expression": "self.tables ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "noIdName", "expression": "not (self.columns ->exists(name.toUpperCase() = 'id'.toUpperCase()))", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "columnNameUnique", "expression": "self.columns ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "cycleForeignKey", "expression": "not(self.foreignKeys ->notEmpty() and self.foreignKeys ->exists(reference.name = self.name))", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "ForeignKey", "inv": "sameTypeAtLink", "expression": "self.column.type = self.reference.primaryKey.type", "file": "ocl-dataset/dataset/repos/alberto-salido/RubyGenerator/bin/metamodel/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "nameEmpty", "expression": "not (self.name ->isEmpty())", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "DataBaseElement", "inv": "illegalName", "expression": "Sequence{1 .. self.name.size()} ->collect(i | self.name.substring(i, i)) ->excludes(' ')", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "Schema", "inv": "tableNameUnique", "expression": "self.tables ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "noIdName", "expression": "not (self.columns ->exists(name.toUpperCase() = 'id'.toUpperCase()))", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "columnNameUnique", "expression": "self.columns ->isUnique(name.toUpperCase())", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "Table", "inv": "cycleForeignKey", "expression": "not(self.foreignKeys ->notEmpty() and self.foreignKeys ->exists(reference.name = self.name))", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "ForeignKey", "inv": "sameTypeAtLink", "expression": "self.column.type = self.reference.primaryKey.type", "file": "ocl-dataset/dataset/repos/alberto-salido/DataBaseEditor/metamodel/dataBase.ecore"}, {"context": "Schema", "inv": "ERN", "expression": "entities->forAll(e : Entity | relships->forAll(r : Relship | e.name <> r.name))", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Schema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Schema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : Attribute, a2 : Attribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Entity", "inv": "KEY", "expression": "attrs->exists(a : Attribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(e1 : RelshipEnd, e2 : RelshipEnd | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ER.ecore"}, {"context": "Link", "inv": "distincComponents", "expression": "connectedPorts->at(1).parentComponent <> connectedPorts->at(2).parentComponent", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/components.ecore"}, {"context": "Person", "inv": "testOclIsTypeOf", "expression": "self.oclIsKindOf(Person)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/oclIsTypeOf.ecore"}, {"context": "Schema", "inv": "ERN", "expression": "entities->forAll(e : Entity | relships->forAll(r : Relship | e.name <> r.name))", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Schema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Schema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : Attribute, a2 : Attribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Entity", "inv": "KEY", "expression": "attrs->exists(a : Attribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(e1 : RelshipEnd, e2 : RelshipEnd | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/ERStrings.ecore"}, {"context": "Person", "inv": "testAt", "expression": "pets->at(1) <> null", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/oclAt.ecore"}, {"context": "Person", "inv": "testLet", "expression": "let test : Real = 2 in \r samplemodel::Person.allInstances().size() == test", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/tests/fr.inria.atlanmod.emftocsp.tests/data/models/ecore/let.ecore"}, {"context": "Schema", "inv": "ERN", "expression": "entities->forAll(e : Entity | relships->forAll(r : Relship | e.name <> r.name))", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Schema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Schema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : Attribute, a2 : Attribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Entity", "inv": "KEY", "expression": "attrs->exists(a : Attribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(e1 : RelshipEnd, e2 : RelshipEnd | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ER.ecore"}, {"context": "Link", "inv": "distincComponents", "expression": "connectedPorts->at(1).parentComponent <> connectedPorts->at(2).parentComponent", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/components.ecore"}, {"context": "Person", "inv": "testOclIsTypeOf", "expression": "self.oclIsKindOf(Person)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/oclIsTypeOf.ecore"}, {"context": "Schema", "inv": "ERN", "expression": "entities->forAll(e : Entity | relships->forAll(r : Relship | e.name <> r.name))", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Schema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Schema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : Attribute, a2 : Attribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Entity", "inv": "KEY", "expression": "attrs->exists(a : Attribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(e1 : RelshipEnd, e2 : RelshipEnd | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/ERStrings.ecore"}, {"context": "Person", "inv": "testAt", "expression": "pets->at(1) <> null", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/oclAt.ecore"}, {"context": "Person", "inv": "testLet", "expression": "let test : Real = 2 in \r samplemodel::Person.allInstances().size() == test", "file": "ocl-dataset/dataset/repos/SOM-Research/EMFtoCSP/plugins/fr.inria.atlanmod.emftocsp.examples/samples/ecore/let.ecore"}, {"context": "Book", "inv": "maxLengthAuthor", "expression": "self.author.size() <= 32", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/library3simple.ecore"}, {"context": "Book", "inv": "patternDimension", "expression": "self.dimension.matches('([0-9]|([1-9][0-9]+))([.][0-9]+)? x ([0-9]|([1-9][0-9]+))([.][0-9]+)? x ([0-9]|([1-9][0-9]+))([.][0-9]+)? (centimeters|cm|in|inches)')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/library3simple.ecore"}, {"context": "Book", "inv": "patternIsbn", "expression": "self.isbn.matches('[0-9]{3}-[0-9]{2}-[0-9]{4}-[0-9]{3}-[0-9]')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/library3simple.ecore"}, {"context": "Book", "inv": "maxLengthAuthor", "expression": "self.author.size() <= 32", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/testoutput1.ecore"}, {"context": "Book", "inv": "patternIsbn", "expression": "self.isbn.matches('[0-9]{10}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/testoutput1.ecore"}, {"context": "Book", "inv": "maxLengthAuthor", "expression": "self.author.size() <= 32", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/simpleany.ecore"}, {"context": "Book", "inv": "maxLengthAuthor", "expression": "self.author.size() <= 32", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/testoutput.ecore"}, {"context": "Book", "inv": "patternIsbn", "expression": "self.isbn.matches('[0-9]{10}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/testoutput.ecore"}, {"context": "DOCUMENTHEADER", "inv": "patternSchemaVersion", "expression": "self.schemaVersion.matches('eCl@ss XML 2.0')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple8.ecore"}, {"context": "LanguageString", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple4.ecore"}, {"context": "LanguageString", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[a-z]{2} [a-z]{3}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple4.ecore"}, {"context": "LanguageString", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-Z]{2}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple4.ecore"}, {"context": "Item", "inv": "patternClassificationRefs", "expression": "self.classificationRefs->forAll(x | x.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?'))", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternClassRef", "expression": "self.classRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternCreatedView", "expression": "self.createdView.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternDataSpecificationRef", "expression": "self.dataSpecificationRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "PropertyValue", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "Reference", "inv": "patternOrganizationRef", "expression": "self.organizationRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple5.ecore"}, {"context": "DEPRECATION", "inv": "patternContext", "expression": "self.context.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "DEPRECATION", "inv": "patternEntity", "expression": "self.entity.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "EAREFERENCE", "inv": "maxLengthTemplateId", "expression": "self.templateId.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "EATEMPLATE", "inv": "maxLengthCode", "expression": "self.code.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "EATEMPLATE", "inv": "maxLengthId", "expression": "self.id.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "EAVALUATION", "inv": "maxLengthTemplateId", "expression": "self.templateId.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "ENTITYEXTENDEDATTRIBUTES", "inv": "patternEntityRef", "expression": "self.entityRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple6.ecore"}, {"context": "ConditionElement", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "ControlledValue", "inv": "patternValueRef", "expression": "self.valueRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "CurrencyValue", "inv": "patternCurrencyRef", "expression": "self.currencyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "Field", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "MeasureValue", "inv": "patternUOMRef", "expression": "self.uOMRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "QualifiedValue", "inv": "patternQualifierRef", "expression": "self.qualifierRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple3.ecore"}, {"context": "IRDISequence", "inv": "patternIRDIs", "expression": "self.iRDIs->forAll(x | x.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?'))", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple2.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternPropRef", "expression": "self.propRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "IDENTIFICATION", "inv": "patternIrdi", "expression": "self.irdi.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "LOCALE", "inv": "patternCountryRef", "expression": "self.countryRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "LOCALE", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "PROPERTYELM", "inv": "patternRef", "expression": "self.ref.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "PROPERTYELM", "inv": "patternTargetClassRef", "expression": "self.targetClassRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternCc", "expression": "self.cc.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternAlternativeUnit", "expression": "self.alternativeUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternBaseUnit", "expression": "self.baseUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "UNITMAPPING", "inv": "patternSourceUnit", "expression": "self.sourceUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "UNITMAPPING", "inv": "patternTargetUnit", "expression": "self.targetUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternPropRef", "expression": "self.propRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "IDENTIFICATION", "inv": "patternIrdi", "expression": "self.irdi.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "LOCALE", "inv": "patternCountryRef", "expression": "self.countryRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "LOCALE", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "PROPERTYELM", "inv": "patternRef", "expression": "self.ref.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "PROPERTYELM", "inv": "patternTargetClassRef", "expression": "self.targetClassRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternCc", "expression": "self.cc.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternAlternativeUnit", "expression": "self.alternativeUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternBaseUnit", "expression": "self.baseUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "UNITMAPPING", "inv": "patternSourceUnit", "expression": "self.sourceUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "UNITMAPPING", "inv": "patternTargetUnit", "expression": "self.targetUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple9.ecore"}, {"context": "APOSTERIORISEMANTICRELATIONSHIP", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#CE\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#CE\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#CE\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "AXIS1PLACEMENTTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS1_PLACEMENT#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "AXIS2PLACEMENT2DTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS2_PLACEMENT_2D#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "AXIS2PLACEMENT3DTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS2_PLACEMENT_3D#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "BOOLEANTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "patternContentVersion", "expression": "self.contentVersion.matches('[0-9]+')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "maxLengthContentVersion", "expression": "self.contentVersion.size() <= 9", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "maxLengthContentRevision", "expression": "self.contentRevision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASSREFERENCE", "inv": "patternClassRef", "expression": "self.classRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CONSTRAINTORCONSTRAINTID", "inv": "patternConstraintRef", "expression": "self.constraintRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "CONSTRAINT", "inv": "patternConstraintId", "expression": "self.constraintId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATATYPEREFERENCE", "inv": "patternDatatypeRef", "expression": "self.datatypeRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DATETIMEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DICTIONARYREFERENCE", "inv": "patternDictionaryRef", "expression": "self.dictionaryRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DICUNITREFERENCE", "inv": "patternDicUnitRef", "expression": "self.dicUnitRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DICUNIT", "inv": "patternUnitRef", "expression": "self.unitRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DICVALUE", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DICVALUE", "inv": "patternValueMeaningId", "expression": "self.valueMeaningId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTCONTENT", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTREFERENCE", "inv": "patternDocumentRef", "expression": "self.documentRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HEADER", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternFileName", "expression": "self.fileName.matches('[^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthFileName", "expression": "self.fileName.size() <= 128", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternDirName", "expression": "self.dirName.matches('[^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthDirName", "expression": "self.dirName.size() <= 128", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ILLUSTRATION", "inv": "patternCode", "expression": "self.code.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ILLUSTRATION", "inv": "maxLengthCode", "expression": "self.code.size() <= 18", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INFORMATION", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "maxLengthCurrency", "expression": "self.currency.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "patternCurrencyId", "expression": "self.currencyId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INTMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "INTTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ITEMCLASSCASEOF", "inv": "patternCodedName", "expression": "self.codedName.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ITEMCLASSCASEOF", "inv": "maxLengthCodedName", "expression": "self.codedName.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ITEMCLASS", "inv": "patternCodedName", "expression": "self.codedName.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "ITEMCLASS", "inv": "maxLengthCodedName", "expression": "self.codedName.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "MESSAGE", "inv": "patternCode", "expression": "self.code.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "MESSAGE", "inv": "maxLengthCode", "expression": "self.code.size() <= 18", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "NONQUANTITATIVECODETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "NONQUANTITATIVEINTTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "NONTRANSLATABLESTRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "NUMBERTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PLACEMENTTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-PLACEMENT#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROGRAMREFERENCETYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-PROGRAM_REFERENCE#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROPERTYREFERENCE", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "PROPERTYVALUERECOMMENDEDPRESENTATION", "inv": "maxLengthRecommendedPresentationFormat", "expression": "self.recommendedPresentationFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "RATIONALMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "RATIONALTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "maxLengthCurrency", "expression": "self.currency.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "patternCurrencyId", "expression": "self.currencyId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REALMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REALTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "patternLanguage", "expression": "self.language.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "minLengthLanguage", "expression": "self.language.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "maxLengthLanguage", "expression": "self.language.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "REPRESENTATIONREFERENCETYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-REPRESENTATION_REFERENCE#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 30", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "STRINGDICVALUE", "inv": "patternValueCode", "expression": "self.valueCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "STRINGDICVALUE", "inv": "maxLengthValueCode", "expression": "self.valueCode.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "STRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SUPPLIERREFERENCE", "inv": "patternSupplierRef", "expression": "self.supplierRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)? ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}) ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)? ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}) ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "TIMEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "TRANSLATABLESTRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "TRANSLATIONDATA", "inv": "maxLengthTranslationRevision", "expression": "self.translationRevision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "URITYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple/dictionarySimple1.ecore"}, {"context": "DOCUMENTHEADER", "inv": "patternSchemaVersion", "expression": "self.schemaVersion.matches('eCl@ss XML 2.0')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple8.ecore"}, {"context": "LanguageString", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple4.ecore"}, {"context": "LanguageString", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[a-z]{2} [a-z]{3}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple4.ecore"}, {"context": "LanguageString", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-Z]{2}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple4.ecore"}, {"context": "Item", "inv": "patternClassificationRefs", "expression": "self.classificationRefs->forAll(x | x.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?'))", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternClassRef", "expression": "self.classRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternCreatedView", "expression": "self.createdView.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "Item", "inv": "patternDataSpecificationRef", "expression": "self.dataSpecificationRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "PropertyValue", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "Reference", "inv": "patternOrganizationRef", "expression": "self.organizationRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple5.ecore"}, {"context": "DEPRECATION", "inv": "patternContext", "expression": "self.context.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "DEPRECATION", "inv": "patternEntity", "expression": "self.entity.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "EAREFERENCE", "inv": "maxLengthTemplateId", "expression": "self.templateId.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "EATEMPLATE", "inv": "maxLengthCode", "expression": "self.code.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "EATEMPLATE", "inv": "maxLengthId", "expression": "self.id.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "EAVALUATION", "inv": "maxLengthTemplateId", "expression": "self.templateId.size() <= 100", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "ENTITYEXTENDEDATTRIBUTES", "inv": "patternEntityRef", "expression": "self.entityRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple6.ecore"}, {"context": "ConditionElement", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "ControlledValue", "inv": "patternValueRef", "expression": "self.valueRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "CurrencyValue", "inv": "patternCurrencyRef", "expression": "self.currencyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "Field", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "MeasureValue", "inv": "patternUOMRef", "expression": "self.uOMRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "QualifiedValue", "inv": "patternQualifierRef", "expression": "self.qualifierRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple3.ecore"}, {"context": "IRDISequence", "inv": "patternIRDIs", "expression": "self.iRDIs->forAll(x | x.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?'))", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple2.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternPropRef", "expression": "self.propRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "IDENTIFICATION", "inv": "patternIrdi", "expression": "self.irdi.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "LOCALE", "inv": "patternCountryRef", "expression": "self.countryRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "LOCALE", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "PROPERTYELM", "inv": "patternRef", "expression": "self.ref.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "PROPERTYELM", "inv": "patternTargetClassRef", "expression": "self.targetClassRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "PROPERTYPATH", "inv": "patternCc", "expression": "self.cc.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternAlternativeUnit", "expression": "self.alternativeUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternBaseUnit", "expression": "self.baseUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "UNITMAPPING", "inv": "patternSourceUnit", "expression": "self.sourceUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "UNITMAPPING", "inv": "patternTargetUnit", "expression": "self.targetUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "ADVANCEDPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "BASICPROPERTYPATH", "inv": "patternPropRef", "expression": "self.propRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "IDENTIFICATION", "inv": "patternIrdi", "expression": "self.irdi.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "LOCALE", "inv": "patternCountryRef", "expression": "self.countryRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "LOCALE", "inv": "patternLanguageRef", "expression": "self.languageRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "LOCALIZEDSTRING", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[A-z]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "PROPERTYELM", "inv": "patternRef", "expression": "self.ref.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "PROPERTYELM", "inv": "patternTargetClassRef", "expression": "self.targetClassRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAc", "expression": "self.ac.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternAspect", "expression": "self.aspect.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "PROPERTYPATH", "inv": "patternCc", "expression": "self.cc.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternAlternativeUnit", "expression": "self.alternativeUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "QUERYAMOUNT", "inv": "patternBaseUnit", "expression": "self.baseUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "UNITMAPPING", "inv": "patternSourceUnit", "expression": "self.sourceUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "UNITMAPPING", "inv": "patternTargetUnit", "expression": "self.targetUnit.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple9.ecore"}, {"context": "APOSTERIORISEMANTICRELATIONSHIP", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#CE\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#CE\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#CE\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "AXIS1PLACEMENTTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS1_PLACEMENT#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "AXIS2PLACEMENT2DTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS2_PLACEMENT_2D#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "AXIS2PLACEMENT3DTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-AXIS2_PLACEMENT_3D#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "BOOLEANTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "patternContentVersion", "expression": "self.contentVersion.matches('[0-9]+')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "maxLengthContentVersion", "expression": "self.contentVersion.size() <= 9", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASSEXTENSION", "inv": "maxLengthContentRevision", "expression": "self.contentRevision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASSREFERENCE", "inv": "patternClassRef", "expression": "self.classRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CLASS", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#01\\\\-([A-Z0-9_:\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CONSTRAINTORCONSTRAINTID", "inv": "patternConstraintRef", "expression": "self.constraintRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "CONSTRAINT", "inv": "patternConstraintId", "expression": "self.constraintId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#04\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATATYPEREFERENCE", "inv": "patternDatatypeRef", "expression": "self.datatypeRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATATYPE", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#09\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DATETIMEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DICTIONARYREFERENCE", "inv": "patternDictionaryRef", "expression": "self.dictionaryRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DICUNITREFERENCE", "inv": "patternDicUnitRef", "expression": "self.dicUnitRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#05\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DICUNIT", "inv": "patternUnitRef", "expression": "self.unitRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DICVALUE", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DICVALUE", "inv": "patternValueMeaningId", "expression": "self.valueMeaningId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#07\\\\-([A-Z0-9:_\\\\.]{1,35})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTCONTENT", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTIDENTIFIERNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENTREFERENCE", "inv": "patternDocumentRef", "expression": "self.documentRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "DOCUMENT", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#10\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "GENERALTEXT", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HEADER", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#11\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternFileName", "expression": "self.fileName.matches('[^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthFileName", "expression": "self.fileName.size() <= 128", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternDirName", "expression": "self.dirName.matches('[^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthDirName", "expression": "self.dirName.size() <= 128", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "HTTPFILE", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ILLUSTRATION", "inv": "patternCode", "expression": "self.code.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ILLUSTRATION", "inv": "maxLengthCode", "expression": "self.code.size() <= 18", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INFORMATION", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "maxLengthCurrency", "expression": "self.currency.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INTCURRENCYTYPE", "inv": "patternCurrencyId", "expression": "self.currencyId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INTMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "INTTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ITEMCLASSCASEOF", "inv": "patternCodedName", "expression": "self.codedName.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ITEMCLASSCASEOF", "inv": "maxLengthCodedName", "expression": "self.codedName.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ITEMCLASS", "inv": "patternCodedName", "expression": "self.codedName.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "ITEMCLASS", "inv": "maxLengthCodedName", "expression": "self.codedName.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "KEYWORDLABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "LANGUAGE", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "MESSAGE", "inv": "patternCode", "expression": "self.code.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "MESSAGE", "inv": "maxLengthCode", "expression": "self.code.size() <= 18", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "NONQUANTITATIVECODETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "NONQUANTITATIVEINTTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "NONTRANSLATABLESTRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "NUMBERTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PLACEMENTTYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-PLACEMENT#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PREFERREDNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROGRAMREFERENCETYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-PROGRAM_REFERENCE#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROPERTYREFERENCE", "inv": "patternPropertyRef", "expression": "self.propertyRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROPERTY", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#02\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "PROPERTYVALUERECOMMENDEDPRESENTATION", "inv": "maxLengthRecommendedPresentationFormat", "expression": "self.recommendedPresentationFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "RATIONALMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "RATIONALTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "maxLengthCurrency", "expression": "self.currency.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REALCURRENCYTYPE", "inv": "patternCurrencyId", "expression": "self.currencyId.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)?#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9} ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})#08\\\\-([A-Z0-9:_\\\\.]{1,71})#[0-9]{1,9}')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REALMEASURETYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REALTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "patternLanguage", "expression": "self.language.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "minLengthLanguage", "expression": "self.language.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "RemoteLocation", "inv": "maxLengthLanguage", "expression": "self.language.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "REPRESENTATIONREFERENCETYPE", "inv": "patternClassRef", "expression": "self.classRef.matches('0112\\\\-1\\\\-\\\\-\\\\-13584_32_1#01\\\\-REPRESENTATION_REFERENCE#1')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 30", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SHORTNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "STRINGDICVALUE", "inv": "patternValueCode", "expression": "self.valueCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "STRINGDICVALUE", "inv": "maxLengthValueCode", "expression": "self.valueCode.size() <= 35", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "STRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SUPPLIERREFERENCE", "inv": "patternSupplierRef", "expression": "self.supplierRef.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)? ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}) ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "maxLengthRevision", "expression": "self.revision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "patternStatus", "expression": "self.status.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SUPPLIER", "inv": "patternId", "expression": "self.id.matches('([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})(\\\\-([A-Z0-9:_\\\\.]{1,35})((\\\\-[019])(\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}))?)?)? ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5}) ([0-9]{4})\\\\-([A-Z0-9:_\\\\.]{1,35})\\\\-\\\\-\\\\-([A-Z0-9]{1,10})_([A-Z0-9]{0,10})_([0-9]{1,5})')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "maxLengthValue", "expression": "self.value.size() <= 255", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "patternCountryCode", "expression": "self.countryCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "patternLanguageCode", "expression": "self.languageCode.matches('[^\\\\-]* [^\\\\s]*')", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "minLengthLanguageCode", "expression": "self.languageCode.size() >= 2", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "SYNONYMOUSNAMELABEL", "inv": "maxLengthLanguageCode", "expression": "self.languageCode.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "TIMEDATATYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "TRANSLATABLESTRINGTYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "TRANSLATIONDATA", "inv": "maxLengthTranslationRevision", "expression": "self.translationRevision.size() <= 3", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "URITYPE", "inv": "maxLengthValueFormat", "expression": "self.valueFormat.size() <= 80", "file": "ocl-dataset/dataset/repos/patrickneubauer/XMLIntellEdit/source/at.ac.tuwien.big.xmltext/examples/dictionarySimple2/dictionarySimple1.ecore"}, {"context": "Cluster", "inv": "sameServics", "expression": "backup = null or backup.services->includesAll(services)", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "goodSpeed", "expression": "designSpeed <= server.speed->sum()", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "onlyOneImportant", "expression": "services->select(s | s.type = ServiceType::IMPORTANT)->size() <= 1", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "backupDifferent", "expression": "backup <> self", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Service", "inv": "speedFulfilled", "expression": "type = ServiceType::BESTEFFORT or ( designSpeed <= providedBy.designSpeed and (if type = ServiceType::IMPORTANT then designSpeed <= providedBy.backup.designSpeed else type = ServiceType::WEAKCONTRACT or providedBy.backup <> null endif))", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Server", "inv": "speedValid", "expression": "speed > 0 and speed <= 5", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.serviceexample/model/serviceexample.ecore"}, {"context": "Consumer", "inv": "consumerNamesEqual", "expression": "name = rightcomp.name", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "Server", "inv": "serverNoIncoming", "expression": "incoming->isEmpty()", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "Computer", "inv": "computerNoOutgoing", "expression": "outgoing->isEmpty()", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "Router", "inv": "routerHandlesSpeed", "expression": "outgoing.speed->sum() <= incoming.speed->sum()", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "CopperCable", "inv": "losSpeed", "expression": "speed <= 4", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "GlassFiberCable", "inv": "highSpeed", "expression": "speed >= 4", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/router.ecore"}, {"context": "Cluster", "inv": "sameServics", "expression": "backup = null or backup.services->includesAll(services)", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "goodSpeed", "expression": "designSpeed <= server.speed->sum()", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "onlyOneImportant", "expression": "services->select(s | s.type = ServiceType::IMPORTANT)->size() <= 1", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Cluster", "inv": "backupDifferent", "expression": "backup <> self", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Service", "inv": "speedFulfilled", "expression": "type = ServiceType::BESTEFFORT or ( designSpeed <= providedBy.designSpeed and (if type = ServiceType::IMPORTANT then designSpeed <= providedBy.backup.designSpeed else type = ServiceType::WEAKCONTRACT or providedBy.backup <> null endif))", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Server", "inv": "speedValid", "expression": "speed > 0 and speed <= 5", "file": "ocl-dataset/dataset/repos/patrickneubauer/IntellEdit/source/at.ac.tuwien.big.autoedit/model/serviceexample.ecore"}, {"context": "Brick", "inv": "TooMuchBricks", "expression": "Brick.allInstances()->select(b | b.oclIsTypeOf(DigitalSensor) or b.oclIsTypeOf(DigitalActuator) or b.oclIsTypeOf(AnalogActuator))->size() <= 5", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "AnalogSensor", "inv": "TooMuchAnalogSensor", "expression": "AnalogSensor.allInstances()->size() <= 5", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "AnalogActuator", "inv": "TooMuchAnalogActuator", "expression": "AnalogSensor.allInstances()->size() <= 3", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "TimeCondition", "inv": "TimeMustBePositive", "expression": "self.time > 0", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "AnalogCondition", "inv": "InvalidValue", "expression": "self.value >= 0 and self.value <= 1023", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "AnalogActionValue", "inv": "InvalidValue", "expression": "self.value >= 0 and self.value <= 1023", "file": "ocl-dataset/dataset/repos/giacogiac/animated-hipster/ArduinoML/model/ArduinoML.ecore"}, {"context": "ServiceComponent", "inv": "UniqueServiceMethodSignatures", "expression": "self.methods->forAll(m1 : ServiceMethod, m2 : ServiceMethod | (m1.name <> m2.name or m1 = m2)) and self.methods->forAll(m : ServiceMethod | m.parameters->forAll(p1 : Parameter, p2 : Parameter | (p1.parameterType <> p2.parameterType or p1 = p2)))", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "LivingComponent", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.components->exists(c : ServiceComponent | c = self))", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceComponent", "inv": "UniqueSCURINamespace", "expression": "ServiceComponent.allInstances()->forAll(SC1 : ServiceComponent, SC2 : ServiceComponent | SC1.URI <> SC2.URI and SC1.namespace <> SC2.namespace or SC1 = SC2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "FilledMethodDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "OnlyRestMethods", "expression": "RestMethod.allInstances()->includes(self)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceMethod", "inv": "DifferentParameternames", "expression": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1.name <> p2.name or p1 = p2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "uniqueEntityNames", "expression": "not Entity.allInstances()->exists(e1 : Entity, e2 : Entity | (e1.name = e2.name and e1 <> e2))", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "singleAttributeNameInEntity", "expression": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1.name <> a2.name or a1 = a2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Entity", "inv": "InternalIDAttribute", "expression": "self.ID.attributeOf = self", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "CollectionType", "inv": "existingCollectionItem", "expression": "DataType.allInstances()->exists(d : DataType | self.itemType = d)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "CollectionType", "inv": "UniqueItemType", "expression": "CollectionType.allInstances()->forAll(C1 : CollectionType, C2 : CollectionType | C1.itemType <> C2.itemType or C1 = C2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueDatatypeNames", "expression": "self.dataTypes->forAll(t1 : DataType, t2 : DataType | t1.name <> t2.name or t1 = t2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "ServiceOrientedArchitecture", "inv": "uniqueComponentNames", "expression": "self.components->forAll(s1 : ServiceComponent, s2 : ServiceComponent | s1.name <> s2.name or s1 = s2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "OCLConstraint", "inv": "FilledOCLDescription", "expression": "self.description.size() > 0", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralNames", "expression": "self.literals->forAll(L1 : EnumLiteral, L2 : EnumLiteral | L1.name <> L2.name or L1 = L2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "LivingDataType", "expression": "ServiceOrientedArchitecture.allInstances()->exists(a : ServiceOrientedArchitecture | a.dataTypes->exists(c : DataType | c = self))", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "Enum", "inv": "UniqueLiteralValues", "expression": "self.literals->forAll(l1 : EnumLiteral, l2 : EnumLiteral | l1.value <> l2.value or l1 = l2)", "file": "ocl-dataset/dataset/repos/darvasd/gsoaarchitect/hu.bme.mit.inf.gs.dsl/model/SoaModel.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/andrejfreitas/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "IE", "inv": "nameNotNull", "expression": "name.oclIsUndefined() <> true", "file": "ocl-dataset/dataset/repos/fschmidt/se/uid_language/model/uid.ecore"}, {"context": "EsquemaBD", "inv": "TablaNoDuplicado", "expression": "tablas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/abrahamreq/sma.formularios/metamodel/BD.ecore"}, {"context": "Tabla", "inv": "ColumnaNoDuplicada", "expression": "columnas->isUnique(nombre)", "file": "ocl-dataset/dataset/repos/abrahamreq/sma.formularios/metamodel/BD.ecore"}, {"context": "Tabla", "inv": "NombreMayuscula", "expression": "nombre.toUpperCase() = nombre", "file": "ocl-dataset/dataset/repos/abrahamreq/sma.formularios/metamodel/BD.ecore"}, {"context": "PurchaseOrder", "inv": "nonDuplicatedItems", "expression": "lines->forAll(l1, l2 | l1 <> l2 implies l1.item <> l2.item )", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das/exe5/8._demo_de_emf/exercise-emf/orders/orders.ecore"}, {"context": "Item", "inv": "nonEmptyName", "expression": "not name.oclIsUndefined() and name <> ''", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das/exe5/8._demo_de_emf/exercise-emf/orders/orders.ecore"}, {"context": "Item", "inv": "positivePrice", "expression": "not price.oclIsUndefined() and price > 0", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das/exe5/8._demo_de_emf/exercise-emf/orders/orders.ecore"}, {"context": "Hoja", "inv": "uniqueName", "expression": "ejercicios->isUnique(name)", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "Hoja", "inv": "uniqueOrder", "expression": "ejercicios->isUnique(order)", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "Ejercicio", "inv": "nonEmptyName", "expression": "not name.oclIsUndefined() and name <> ''", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "Ejercicio", "inv": "nonEmptyEnunciado", "expression": "not enunciado.oclIsUndefined() and enunciado <> ''", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "RespuestaUnica", "inv": "uniqueAnswer", "expression": "correctas->size()=1", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "TextoLibre", "inv": "posibleAnswers", "expression": "correctas->size()>0", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "Ordenacion", "inv": "uniqueAnswer", "expression": "correctas->size()=1", "file": "ocl-dataset/dataset/repos/mqgmaster/uam-eps-das-project/autoevaluacion/autoevaluacion.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/guylerme/oled/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/guylerme/oled/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "StateMachine", "inv": "oneInitial", "expression": "self.states->one( e | e.oclIsKindOf(InitialState))", "file": "ocl-dataset/dataset/repos/mondo-project/mondo-demo-wt/DSL-tao/org.mondo.wt.cstudy/patterns/StateMachine_with_OCL.ecore"}, {"context": "StateMachine", "inv": "oneInitial", "expression": "self.states->one(e : StateVertex | e.oclIsKindOf(InitialState))", "file": "ocl-dataset/dataset/repos/mondo-project/mondo-demo-wt/DSL-tao/org.mondo.wt.cstudy/patterns/StateMachine.ecore"}, {"context": "RequirementsGroup", "inv": "uniqueGId", "expression": "RequirementsGroup.allInstances() -> forAll(b1,b2 | b1 <> b2 implies b1.id <> b2.id)", "file": "ocl-dataset/dataset/repos/Kogoro/RequirementsEditor/de.tubs.cs.isf.reqeditor/model/requirementsEditor.ecore"}, {"context": "Requirement", "inv": "uniqueId", "expression": "Requirement.allInstances() -> exists(b1,b2 | b1 <> b2 and b1.id = b2.id)=false", "file": "ocl-dataset/dataset/repos/Kogoro/RequirementsEditor/de.tubs.cs.isf.reqeditor/model/requirementsEditor.ecore"}, {"context": "Company", "inv": "NoDepartmentMoreThanTwiceNumberOfEmployeesThanAnother", "expression": "self.department->forAll(d1 | -- self.department->forAll(d2 | d1.numberOfEmployees <= d2.numberOfEmployees * 2) self.department->forAll(d2 | d1.employee->size() <= d2.employee->size() * 2) )", "file": "ocl-dataset/dataset/repos/JoshuaGhost/lecture_slides/Folien_und_Literaturen/1/Model-based_Software_Engineering-Dokumente/company.ecore"}, {"context": "Department", "inv": "AtLeastTwoEmployees", "expression": "-- self.employee->iterate(p: Person; sum:Integer =0 | sum + 1) >= 2; self.employee->size() >= 2", "file": "ocl-dataset/dataset/repos/JoshuaGhost/lecture_slides/Folien_und_Literaturen/1/Model-based_Software_Engineering-Dokumente/company.ecore"}, {"context": "Person", "inv": "AllEmployeesMustBeAdults", "expression": "self.age >= 18", "file": "ocl-dataset/dataset/repos/JoshuaGhost/lecture_slides/Folien_und_Literaturen/1/Model-based_Software_Engineering-Dokumente/company.ecore"}, {"context": "Person", "inv": "PersonCannotBeSupervisorOfHimHerself", "expression": "self <> self.supervisor", "file": "ocl-dataset/dataset/repos/JoshuaGhost/lecture_slides/Folien_und_Literaturen/1/Model-based_Software_Engineering-Dokumente/company.ecore"}, {"context": "EFML", "inv": "", "expression": "self.forms -> forAll(f | f.mainForm=true)", "file": "ocl-dataset/dataset/repos/Abadhor/ModelEngineeringRepo/EFML/model/forms.ecore"}, {"context": "Transition", "inv": "correctDelayDefinition", "expression": "self.maxDelay > self.minDelay", "file": "ocl-dataset/dataset/repos/gambastian/automatizacion2015/MDD_Course_Samples/models/eol/example.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab2/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab4/at.ac.tuwien.big.forms/model/forms.ecore"}, {"context": "Entity", "inv": "EntityNameIsUnique", "expression": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "FeatureInEntityIsUnique", "expression": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "NoSelfInheritance", "expression": "self.superType <> self", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Attribute", "inv": "AttributeTypeIsValid", "expression": "self.type <> AttributeType::None xor self.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "RelationshipMultiplicityIsValid", "expression": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipsReferenceEachOther", "expression": "self.opposite -> forAll(o | o.opposite = self)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Relationship", "inv": "OppositeRelationshipTypeIsValid", "expression": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "EnumerationNameIsUnique", "expression": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Enumeration", "inv": "LiteralInEnumerationIsUnique", "expression": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "FirstLetterInFormTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "ExactlyOneWelcomePageExists", "expression": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "PageElementsReferToFormEntityFeatures", "expression": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Form", "inv": "AttributeOfConditionIsValid", "expression": "(self.pages.pageElements -> selectByKind(AttributePageElement).attribute) -> includesAll( self.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) -> union( self.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> selectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> selectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> selectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute) ))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Page", "inv": "FirstLetterInPageTitleIsUpperCase", "expression": "self.title.at(1).matches('[A-Z]')", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "PageElement", "inv": "ElementIDIsUnique", "expression": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "SelectionField", "inv": "SelectionFieldAttributeTypeIsValid", "expression": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetEntityFeature", "expression": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Condition", "inv": "ConditionIDIsUnique", "expression": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormIsNotWelcomeForm", "expression": "self.editingForm.welcomeForm = false", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "RelationshipPageElement", "inv": "EditingFormRefersToRelationshipTarget", "expression": "self.relationship.target = self.editingForm.entity", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "DateSelectionField", "inv": "DateIsValid", "expression": "self.attribute.type = AttributeType::Date", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "TimeSelectionField", "inv": "TimeIsValid", "expression": "self.attribute.type = AttributeType::Time", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab3/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore"}, {"context": "Entity", "inv": "entityNameUniques", "expression": "Entity.allInstances()->forAll(e1 | self<>e1 implies self.name<>e1.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "entityHasAttributesAndOneId", "expression": "not(self.entityAttribute->isEmpty()) and self.superType=null implies (self.entityAttribute->one(a | a.isId=true))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "entityHasAttributesAndOneIdSubType", "expression": "(not(self.entityAttribute->isEmpty()) and self.superType<>null) implies (self.entityAttribute->forAll(a | a.isId=false))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Entity", "inv": "superTypeNotSelf", "expression": "self.superType<>null implies self.superType<>self", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "typeNoneHasEnumerationType", "expression": "self.type=AttributeType::None implies self.enumerationType<>null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "typeNotNoneHasNoEnumerationType", "expression": "self.type<>AttributeType::None implies self.enumerationType=null", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Attribute", "inv": "ifIdThenMandatory", "expression": "self.isId=true implies self.mandatory=true", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Model", "inv": "oneWelcomeForm", "expression": "self.modelForm->notEmpty() implies self.modelForm->one(f | f.isWelcomeForm=true)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "lowerBoundLargerZero", "expression": "self->forAll(self.lowerBound>=0)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "lowerBoundIsLessThanUpperBound", "expression": "self.upperBound<>-1 implies self.upperBound >= self.lowerBound", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "upperBoundLargerThanMinusOne", "expression": "self->forAll(self.upperBound = -1 or self.upperBound > 0)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositeRelationshipPointsToThisRelationship", "expression": "self.opposite<>null implies (self.opposite.opposite=self)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositetargetEntityIsThisSourceEntity", "expression": "self.opposite<>null implies (self.Entity=opposite.target)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Relationship", "inv": "oppositeCannotBeSelf", "expression": "self.opposite<>self", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "formNameUnique", "expression": "Form.allInstances()->forAll(f1 | self<>f1 implies self.name<>f1.name)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "attributesFromFormEntity", "expression": "self.pages->forAll(pa | pa.pageElements->select( oclIsKindOf(AttributePageElement) )->forAll(pa:AttributePageElement | ((self.formEntity->closure(e | e.superType)).entityAttribute)->includes(pa.attributeRef) ) )", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Form", "inv": "relationshipsFromFormEntity", "expression": "self.pages->forAll(pa | pa.pageElements->select( oclIsKindOf(RelationshipPageElement) )->forAll(pa:RelationshipPageElement | (self.formEntity.relationship)->includes(pa.relationshipRef) ) )", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "TableRelationshipPageElement", "inv": "columnAttributesFromTargetEntities", "expression": "self.columns->forAll(col | self.relationshipRef.target.entityAttribute->includes(col.attributeReference))", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "Condition", "inv": "PageXORPageElementOrNone", "expression": "(self.targetPageElement<>null implies self.targetPage=null) and (self.targetPage<>null implies self.targetPageElement=null)", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "CompositeCondition", "inv": "notSameChildren", "expression": "self.child2<>self.child1", "file": "ocl-dataset/dataset/repos/lukaspossnigg/TEST/lab1/EFML/model/forms.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.examples/cd/classes.ecore"}, {"context": "NamedElement", "inv": "visibility_needs_ownership", "expression": "namespace->isEmpty() implies visibility->isEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "not_own_self", "expression": "not allOwnedElements()->includes(self)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Element", "inv": "has_owner", "expression": "mustBeOwned() implies owner->notEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "visibility_public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "ElementImport", "inv": "imported_element_is_public", "expression": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "PackageImport", "inv": "public_or_private", "expression": "visibility = VisibilityKind::public or visibility = VisibilityKind::private", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Package", "inv": "elements_public_or_private", "expression": "ownedElement->select(e | e->oclIsKindOf(NamedElement)) -> forAll( e | e->oclAsType(NamedElement).visibility->notEmpty() implies e->oclAsType(NamedElement).visibility = VisibilityKind::public or e->oclAsType(NamedElement).visibility = VisibilityKind::private)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_static", "expression": "static = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Feature", "inv": "non_leaf", "expression": "redefinedElement->forAll(r | r.leaf = false)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "no_derivation", "expression": "derived = false and derivedUnion = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "multiplicity_of_composite", "expression": "composite implies (upperBound()->isEmpty() or upperBound() <= 1)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Property", "inv": "derived_union_is_read_only", "expression": "derivedUnion implies readOnly", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "owns_member_ends", "expression": "memberEnd->symmetricDifference(ownedEnd)->isEmpty()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "no_deriviation", "expression": "derived = false", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations", "expression": "memberEnd->exists(e | e.aggregation <> AggregationKind::none) implies memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "association_ends", "expression": "if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd) else true endif", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Association", "inv": "binary_associations_only", "expression": "memberEnd->size() = 2", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterZero", "expression": "upperBound()->notEmpty() implies upperBound() > 0", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "lowerBoundGreaterOrEqualsZero", "expression": "lowerBound()->notEmpty() implies lowerBound() >= 0", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "upperBoundGreaterOrEqualsLowerBound", "expression": "(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedLowerBoundEqualsLower", "expression": "lower = lowerBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "derivedUppoerboundEqualsUpper", "expression": "upper = upperBound()", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "MultiplicityElement", "inv": "boundTypes", "expression": "upperValue->notEmpty() and upperValue->asSequence()->first().oclIsKindOf(LiteralUnlimitedNatural) and lowerValue->notEmpty() and lowerValue->asSequence()->first().oclIsKindOf(LiteralInteger)", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "Operation", "inv": "at_most_one_return", "expression": "ownedParameter->select( par | par.direction = ParameterDirectionKind::return )->size() <= 1", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "possible_classifiers", "expression": "classifier->forAll(c | c->oclIsKindOf(Class)) or classifier->size() = 1 and classifier->forAll(c | c->oclIsKindOf(DataType))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "defining_feature", "expression": "slot->forAll(s | classifier->exists(c | c.allFeatures()->includes(s.definingFeature)))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "InstanceSpecification", "inv": "structural_feature", "expression": "classifier->forAll(c | (c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))", "file": "ocl-dataset/dataset/repos/hassanLOULOU/moliz/org.modelexecution.xmof.diff.test/model/cd/classes.ecore"}, {"context": "CgClass", "inv": "tooTrue", "expression": "true and true", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.codegen.tests/play/model/play.ecore"}, {"context": "CgClass", "inv": "tooTrue$message", "expression": "self.oclType().name", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.codegen.tests/play/model/play.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.codegen.tests/play/model/Company.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.codegen.tests/play/model/Company.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "SufficientCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of ' + name", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Tutorial1.ecore"}, {"context": "Book", "inv": "EnoughCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Book", "inv": "EnoughCopies$message", "expression": "'There are ' + library.loans->select((book = self))->size().toString() + ' loans for the ' + copies.toString() + ' copies of \\'' + name + '\\''", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Tutorial2.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/NoReflectionCompany.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined() and hasNameAsAttribute and hasNameAsOperation()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Employee", "inv": "mustHaveNonEmptyName", "expression": "name->notEmpty() implies name.size() > 0", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/Company.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/model/OCLinEcoreTutorialForPivot.ecore"}, {"context": "Named", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Named", "inv": "mustHaveName$message", "expression": "'this is a \\'message\\'\\n'", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/ConstraintMessages.ecore"}, {"context": "Statemachine", "inv": "HasInitialState", "expression": "states->exists(s | s.initial)", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "State", "inv": "NameIsLeadingUpperCase", "expression": "let firstLetter : String = invalid.substring(1, 1) in firstLetter.toUpperCase() = firstLetter", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/States.ecore"}, {"context": "ThirtyCharString1", "inv": "MaxLengthConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "ThirtyCharString2", "inv": "MaxEnumConstraint", "expression": "not oclIsUndefined()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Bug320689.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.reference.ecore"}, {"context": "Employee", "inv": "mustHaveName", "expression": "not name.oclIsUndefined()", "file": "ocl-dataset/dataset/repos/eclipse/ocl/tests/org.eclipse.ocl.examples.xtext.tests/src/org/eclipse/ocl/examples/test/xtext/models/Company.ecore"}, {"context": "Book", "inv": "SufficientCopies", "expression": "library.loans->select((book = self))->size() <= copies", "file": "ocl-dataset/dataset/repos/eclipse/ocl/examples/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "AtMostTwoLoans", "expression": "loans->size() <= 2", "file": "ocl-dataset/dataset/repos/eclipse/ocl/examples/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Member", "inv": "UniqueLoans", "expression": "loans->isUnique(book)", "file": "ocl-dataset/dataset/repos/eclipse/ocl/examples/org.eclipse.ocl.examples.project.oclinecoretutorial/model/Tutorial.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/rhernando/highway/Highway/model/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/rhernando/highway/Highway/model/highway.ecore"}, {"context": "Node", "inv": "NullName", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/rhernando/highway/HighwayATL/metamodels/highway.ecore"}, {"context": "Node", "inv": "UniqueName", "expression": "highway.initNodes->isUnique(name)", "file": "ocl-dataset/dataset/repos/rhernando/highway/HighwayATL/metamodels/highway.ecore"}, {"context": "Place", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Place", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Place", "inv": "tokPositive", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Place", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Transition", "inv": "nameExists", "expression": "name <> null", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Transition", "inv": "nameUnique", "expression": "Place.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Transition", "inv": "notUnconnected", "expression": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/RedPetri/petri.ecore"}, {"context": "Place", "inv": "validTokens", "expression": "tokens >= 0", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/atlPetri/metamodels/PetriNet.ecore"}, {"context": "Transition", "inv": "uniqueName", "expression": "Transition.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/rhernando/projs_mde/atlPetri/metamodels/PetriNet.ecore"}, {"context": "Arc", "inv": "nodeTypes", "expression": "src.oclIsKindOf(Place) and tgt.oclIsKindOf(Transition) or src.oclIsKindOf(Transition) and tgt.oclIsKindOf(Place)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/PetriNet/edu.toronto.cs.se.modelepedia.petrinet/model/petrinet.ecore"}, {"context": "IStar", "inv": "onlyDependums", "expression": "dependums->forAll(linksAsSrc->isEmpty() and linksAsTgt->isEmpty())", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "Actor", "inv": "noDependums", "expression": "intentions->forAll(dependerLinks->isEmpty() and dependeeLinks->isEmpty())", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "MeansEnd", "inv": "srcTask", "expression": "src.oclIsTypeOf(Task)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "MeansEnd", "inv": "tgtGoal", "expression": "tgt.oclIsTypeOf(Goal)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "Decomposition", "inv": "tgtTask", "expression": "tgt.oclIsTypeOf(Task)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "Contribution", "inv": "tgtSoftgoal", "expression": "tgt.oclIsTypeOf(SoftGoal)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar/model/istar.ecore"}, {"context": "IStar", "inv": "onlyDependums", "expression": "dependums->forAll(linksAsSrc->isEmpty() and linksAsTgt->isEmpty())", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "Actor", "inv": "noDependums", "expression": "intentions->forAll(dependerLinks->isEmpty() and dependeeLinks->isEmpty())", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "MeansEnd", "inv": "srcTask", "expression": "src.oclIsTypeOf(Task)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "MeansEnd", "inv": "tgtGoal", "expression": "tgt.oclIsTypeOf(Goal)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "Decomposition", "inv": "tgtTask", "expression": "tgt.oclIsTypeOf(Task)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "Contribution", "inv": "tgtSoftgoal", "expression": "tgt.oclIsTypeOf(SoftGoal)", "file": "ocl-dataset/dataset/repos/adisandro/MMINT/plugins/Types/IStar/edu.toronto.cs.se.modelepedia.istar_mavo/model/istar_mavo.ecore"}, {"context": "Entity", "inv": "existedKey", "expression": "keySet->forAll(k1:Key, k2:Key | k1.keyAttributes->intersection(k2.keyAttributes)->includesAll(k1.keyAttributes) and k1.keyAttributes->symmetricDifference(k2.keyAttributes)->isEmpty() implies k1=k2)", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "Entity", "inv": "existedKey$message", "expression": "'The key with attribute set already exists'", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "Entity", "inv": "invalidPrimaryKey", "expression": "if(keySet->notEmpty()) then if(not primaryKey->oclIsUndefined()) then keySet->includes(primaryKey) else not primaryKey->oclIsUndefined() endif else keySet->isEmpty() endif", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "Entity", "inv": "invalidAttributInKey", "expression": "if(not keySet.keyAttributes->isEmpty()) then if(entityAttributes->notEmpty()) then entityAttributes->includesAll(keySet.keyAttributes) else entityAttributes->notEmpty() endif else keySet.keyAttributes->isEmpty() endif", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "ModellingConcept", "inv": "existedName", "expression": "ModellingConcept.allInstances()->symmetricDifference(Gerund.allInstances())->forAll(m1:ModellingConcept, m2:ModellingConcept | m1.name = m2.name implies m1=m2)", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "ISA", "inv": "invalidClassificationAtrtibute", "expression": "if supertype.entity.oclIsTypeOf(Entity) then supertype.entity.oclAsType(Entity).entityAttributes->includes(classificationAttribute) else supertype.entity.oclAsType(Gerund).relationship.relationshipAttributes->includes(classificationAttribute) endif", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "ISA", "inv": "SubTypeExistsAsSuperType", "expression": "if(supertype.entity.oclIsTypeOf(Entity)) then subtypes->excludes(supertype.entity.oclAsType(Entity)) else not supertype.entity.oclIsTypeOf(Entity) endif", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "ISA", "inv": "duplicateSybtype", "expression": "ISA.allInstances().subtypes->forAll(e1:Entity | ISA.allInstances().subtypes->select(e2 | e1.name=e2.name)->size()<2)", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "Categorisation", "inv": "invalidCategory", "expression": "categorisationEntities.entities->excludes(categorisedEntity) and categorisationEntities.entities-> forAll(e1:EntityConcept, e2:EntityConcept | if(e1.oclIsTypeOf(Entity) and e2.oclIsTypeOf(Entity)) then e1.oclAsType(Entity).name = e2.oclAsType(Entity).name implies e1 = e2 else if(e1.oclIsTypeOf(Gerund) and e2.oclIsTypeOf(Gerund)) then e1.oclAsType(Gerund).relationship.name = e2.oclAsType(Gerund).relationship.name implies e1 = e2 else true endif endif )", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "IdentificationDependency", "inv": "invalidWeakEntity", "expression": "if(regularEntity.entity.oclIsTypeOf(Entity)) then regularEntity.entity.oclAsType(Entity) <> weakEntity else not regularEntity.entity.oclIsTypeOf(Entity) endif", "file": "ocl-dataset/dataset/repos/vdimitrieski/mist/mist.core/model/er.ecore"}, {"context": "ProcCall", "inv": "same_number_of_formals_and_actuals", "expression": "actualArgs->size() = declaration.args->size()", "file": "ocl-dataset/dataset/repos/mde-book/logo/domain/example.logo.model/model/ASMLogo.ecore"}, {"context": "ProcDeclaration", "inv": "unique_names_for_formal_arguments", "expression": "args->forAll( a1 , a2 | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/mde-book/logo/domain/example.logo.model/model/ASMLogo.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/src/metamodels/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/bin/metamodels/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Asm2boogie/fr.emn.atlanmod.ASM2Boogie.compiler/tests.ER2REL/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.emftvm.compiler/TESTS/REL.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/TARMM/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/TARMM/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.Emftvm2Boogie/fr.emn.atlanmod.veriatl.compiler/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/veriatl_next/model/ER2REL/REL.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/TARMM/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/TARMM/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/TARMM/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/TARMM/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/Compiler.VeriATL/veriatl.compiler.cs.nuim.ie/ER2REL_EXP/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/ER.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL.CaseStudies/_ER2REL/Sources/REL.ecore"}, {"context": "RELSchema", "inv": "REL_RN", "expression": "relations->forAll(r1 : Relation, r2 : Relation | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/TARMM/REL.ecore"}, {"context": "RELSchema", "inv": "REL_MULT1", "expression": "self.relations->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_AN", "expression": "attrs->forAll(a1 : RELAttribute, a2 : RELAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_K", "expression": "attrs->exists(a : RELAttribute | a.isKey = true)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/TARMM/REL.ecore"}, {"context": "Relation", "inv": "REL_MULT2", "expression": "self.attrs->size() > 0", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/TARMM/REL.ecore"}, {"context": "ERSchema", "inv": "RN", "expression": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERSchema", "inv": "EN", "expression": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Entity", "inv": "EAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "REN", "expression": "ends->forAll(a1 : RelshipEnd, a2 : RelshipEnd | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RAN", "expression": "attrs->forAll(a1 : ERAttribute, a2 : ERAttribute | a1.name = a2.name implies a1 = a2)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "Relship", "inv": "RSK", "expression": "not attrs->exists(a1 : ERAttribute | a1.isKey)", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "ERAttribute", "inv": "EA_XOR", "expression": "self.entity.oclAsSet()->size() + self.relship.oclAsSet()->size() = 1", "file": "ocl-dataset/dataset/repos/veriatl/VeriATL/fr.emn.atlanmod.veriatl.casestudy.base/ER2REL/Source/SRCMM/ER.ecore"}, {"context": "FunctionCall", "inv": "FunctionCallNumberOfArguments", "expression": "self.calledFunction.numberOfArguments = self.arguments->size()", "file": "ocl-dataset/dataset/repos/petrux/OLED/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Quantification", "inv": "IrreflexiveQuant", "expression": "self.expression <> self", "file": "ocl-dataset/dataset/repos/petrux/OLED/br.ufes.inf.nemo.z3py/model/z3py.ecore"}, {"context": "Tortue", "inv": "tailleTortue", "expression": "self.taille >= 0 and self.taille < self.espece.tailleMaxAdulte", "file": "ocl-dataset/dataset/repos/Doelia/M2-modeles/eclipse/1103m_TP_tortue/model/Tortues.ecore"}, {"context": "Tortue", "inv": "pasDeMalQuiPont", "expression": "self.sexe = M implies self.datePonte->isEmpty()", "file": "ocl-dataset/dataset/repos/Doelia/M2-modeles/eclipse/1103m_TP_tortue/model/Tortues.ecore"}, {"context": "Tortue", "inv": "habiteLaOuIlFaut", "expression": "self.espece.repartitionGeographique.lieu->includes(self.lieuHabite)", "file": "ocl-dataset/dataset/repos/Doelia/M2-modeles/eclipse/1103m_TP_tortue/model/Tortues.ecore"}, {"context": "Biologie", "inv": "mangeCeQuilFaut", "expression": "self.regimeGeneral->includesAll(self.especeTortue.modeElevage.regimeCaptivite)", "file": "ocl-dataset/dataset/repos/Doelia/M2-modeles/eclipse/1103m_TP_tortue/model/Tortues.ecore"}, {"context": "ModeElevage", "inv": "bonneTemperature", "expression": "self.tempJour > self.tempNuit", "file": "ocl-dataset/dataset/repos/Doelia/M2-modeles/eclipse/1103m_TP_tortue/model/Tortues.ecore"}, {"context": "Form", "inv": "oneWelcomePage", "expression": "self.organized->select(p | p.isWelcome)->size() = 1 and self.organized->select(p | p.isWelcome)->forAll(p | p.predecessor->isEmpty())", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "Form", "inv": "oneFirstPage", "expression": "self.organized->select(p | p.predecessor->isEmpty())->size() = 1", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "Page", "inv": "titleStartsUpperCase", "expression": "not (Title.size()=0) and Title.at(1) = Title.at(1).toUpper()", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "Page", "inv": "noCycles", "expression": "self.predecessor->asSet()->union(self.predecessor->closure(p | p.predecessor))->excludes(self)", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "PageElement", "inv": "uniqueID", "expression": "PageElement.allInstances()->forAll(e1, e2 | e1 <> e2 implies e1.oclAsType(PageElement).ID <> e2.oclAsType(PageElement).ID)", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "SelectField", "inv": "RadioOnlyOneSelected", "expression": "self.Type <> SelectionType::RADIO or (self.consists->select(preselected)->size() <= 1 and self.consists->select(selected)->size() <= 1)", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "SelectionItem", "inv": "selectionIsOfSubsequentPage", "expression": "self.displayElementVisible -> forAll(e |e.contained.predecessor->asSet()->union(e.contained.predecessor->closure(p | p.predecessor))->includes(self.contained.contained))", "file": "ocl-dataset/dataset/repos/e0828330/modelEng01/Assignment1/model/form.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes", "expression": "self.types->isUnique(name)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "StructuralView", "inv": "uniqueTypes$message", "expression": "'There may be only one type of the same type'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName", "expression": "self.classes->isUnique(name)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "StructuralView", "inv": "noTwoClassesWithSameName$message", "expression": "'Name of a class has to be unique'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType", "expression": "not self.superTypes->includes(self)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Class", "inv": "notSelfSuperType$message", "expression": "'A class may not be it\\'s own supertype'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName", "expression": "self.myClass.associationEnds->select(associationEnd : AssociationEnd | associationEnd.name <> null and associationEnd.name <> '')->isUnique(name)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "AssociationEnd", "inv": "uniqueName$message", "expression": "'AssociationEnds of a class must be unique'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "NamedElement", "inv": "validName", "expression": "if self.oclIsTypeOf(AssociationEnd) and self.oclAsType(AssociationEnd).navigable = false then true else self.name <> '' endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "NamedElement", "inv": "validName$message", "expression": "'Name of RAM elements may not be empty'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf", "expression": "not (self.externalAspect = self.Aspect)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Instantiation", "inv": "aspectCannotMapSelf$message", "expression": "'Aspect may not depend on itself'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped", "expression": "if self.type = InstantiationType::Depends then self.externalAspect.mandatoryAspectParameters->forAll(element : MappableElement | self.mappings->exists(sourceModelElement = element)) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Instantiation", "inv": "mandatoryAspectParametersMapped$message", "expression": "'Partial elements from lower-level aspects have to be mapped'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement", "expression": "self.sourceModelElement.oclIsTypeOf(Class) or self.sourceModelElement.oclIsTypeOf(Operation)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "validSourceModelElement$message", "expression": "'The source model element may only be of type Class or Operation'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped", "expression": "self.maps->forAll(element : MappableElement | if element.oclIsKindOf(Classifier) then self.sourceModelElement.oclIsKindOf(Classifier) else element.oclIsTypeOf(self.sourceModelElement.oclType()) endif)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "sameTypesMapped$message", "expression": "'Mapping must be between same types of elements'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping", "expression": "let clazz : Class = if sourceModelElement.oclIsTypeOf(Operation) then sourceModelElement.oclAsType(Operation).Classifier else sourceModelElement endif in self.Instantiation.externalAspect.structuralView.classes->includes(clazz) and self.maps->forAll(element : MappableElement | let clazz : Class = if element.oclIsTypeOf(Operation) then element.oclAsType(Operation).Classifier else element endif in if clazz.oclIsKindOf(PrimitiveType) then self.Instantiation.Aspect.structuralView.types->includes(clazz) else self.Instantiation.Aspect.structuralView.classes->includes(clazz) endif)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Mapping", "inv": "validMapping$message", "expression": "'Source must be from depending aspect and targets must be from current aspect'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined", "expression": "if visibility = Visibility::public and self.Classifier.oclIsTypeOf(Class) then self.Classifier.StructuralView.Aspect.messageViews->select(messageView : AbstractMessageView | messageView.oclIsTypeOf(MessageView))->one(messageView : AbstractMessageView | messageView.oclAsType(MessageView).specification = self) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Operation", "inv": "messageViewDefined$message", "expression": "'MessageView missing for public operation'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid", "expression": "not self.type.oclIsTypeOf(RVoid)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Parameter", "inv": "notVoid$message", "expression": "'The type of the parameter may not be void'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined", "expression": "if not self.specifies.partial then not self.specification.oclIsUndefined() else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageView", "inv": "specificationDefined$message", "expression": "'A MessageView for a non-partial operation must have a specification'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy", "expression": "self.affectedBy->size() > 0", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageViewReference", "inv": "isAffectedBy$message", "expression": "'The MessageViewReference must at least have one affectedBy'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf", "expression": "not self.affectedBy->includes(self)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "AspectMessageView", "inv": "notAffectedBySelf$message", "expression": "'Message View may not be affected by itself'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Lifeline", "inv": "noNameForMetaClass", "expression": "if metaClass then self.name = '' else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Lifeline", "inv": "noNameForMetaClass$message", "expression": "'A Lifeline representing a MetaClass may not have a name'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validOperationCall", "expression": "if self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).metaClass then self.signature.static else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validOperationCall$message", "expression": "'Non-static calls may not be performed on meta-classes'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed", "expression": "if self.signature.returnType.oclIsTypeOf(RVoid) then self.assignTo = null else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "assignToAllowed$message", "expression": "'assignTo may not be specified for operations whose return type is void'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified", "expression": "self.signature.parameters->size() = self.arguments->size() and self.signature.parameters->forAll(parameter : Parameter | self.arguments->one(argument : ParameterValueMapping | argument.parameter = parameter))", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "argumentsSpecified$message", "expression": "'All arguments of the operation must be specified'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validSignature", "expression": "self.receiveEvent.oclAsType(InteractionFragment).covered->asOrderedSet()->at(1).represents.operations->includes(self.signature)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validSignature$message", "expression": "'Message signature must be an operation of the classifier that is represented by the lifeline of the receive event'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage", "expression": "if self.sendEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) = self.receiveEvent.oclAsType(MessageOccurrenceSpecification).covered->asOrderedSet()->at(1) then self.interaction.fragments->indexOf(self.sendEvent) < self.interaction.fragments->indexOf(self.receiveEvent) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validSelfMessage$message", "expression": "'receiveEvent of a self message may not come before the sendEvent'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified", "expression": "if self.messageSort = MessageSort::reply then if not self.signature.returnType.oclIsTypeOf(RVoid) then not self.returns.oclIsUndefined() else self.returns.oclIsUndefined() endif else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "returnsSpecified$message", "expression": "'Reply message must have returns specified if return type is not void'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validReturns", "expression": "if not self.returns.oclIsUndefined() then self.messageSort = MessageSort::reply else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validReturns$message", "expression": "'Returns may only be specified if message sort is reply message'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages", "expression": "let indexDifference : Integer = self.interaction.fragments->indexOf(self.receiveEvent) - self.interaction.fragments->indexOf(self.sendEvent) in indexDifference = 1 or indexDifference = - 1", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "noCrossingMessages$message", "expression": "'Messages may not cross each other, MessageEnds of one message must come one after the other'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo", "expression": "if self.assignTo <> null then let type : Type = if self.assignTo.oclIsTypeOf(Attribute) then self.assignTo.oclAsType(Attribute).type else if self.assignTo.oclIsTypeOf(Reference) then self.assignTo.oclAsType(Reference).type else self.assignTo.oclAsType(AssociationEnd).assoc.ends->select(end : AssociationEnd | end <> self)->at(1).myClass endif endif in type.oclIsKindOf(self.signature.returnType.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "validAssignTo$message", "expression": "'Return type of signature operation must match the type of assignTo'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed", "expression": "let send : MessageOccurrenceSpecification = self.sendEvent in let receive : MessageOccurrenceSpecification = self.receiveEvent in if send.container.oclIsTypeOf(InteractionOperand) and receive.container.oclIsTypeOf(InteractionOperand) then send.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(send.covered->asOrderedSet()->at(1)) and receive.container.oclAsType(InteractionOperand).CombinedFragment.covered->includes(receive.covered->asOrderedSet()->at(1)) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Message", "inv": "boundariesNotCrossed$message", "expression": "'Messages may not cross boundaries of CombinedFragments or their operands'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageOccurrenceSpecification", "inv": "createMessageIsFirst", "expression": "if self.message.messageSort = MessageSort::createMessage then self.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if self.container.fragments->includes(fragment) then self.container.fragments->indexOf(fragment) >= self.container.fragments->indexOf(self) else true endif) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "MessageOccurrenceSpecification", "inv": "createMessageIsFirst$message", "expression": "'The create message occurrence may not come after any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "DestructionOccurrenceSpecification", "inv": "destructionIsLast", "expression": "self.covered->asOrderedSet()->at(1).coveredBy->forAll(fragment : InteractionFragment | if self.container.fragments->includes(fragment) then self.container.fragments->indexOf(fragment) <= self.container.fragments->indexOf(self) else true endif)", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "DestructionOccurrenceSpecification", "inv": "destructionIsLast$message", "expression": "'The destruction occurrence may not come before any other occurrence on this lifeline'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity", "expression": "if not self.oclIsTypeOf(CombinedFragment) and covered->notEmpty() then covered->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "InteractionFragment", "inv": "validCoveredMultiplicity$message", "expression": "'InteractionFragment may only have one Lifeline it covers (except CombinedFragment)'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands", "expression": "if self.interactionOperator = InteractionOperatorKind::opt or self.interactionOperator = InteractionOperatorKind::loop or self.interactionOperator = InteractionOperatorKind::critical then self.operands->size() = 1 else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "CombinedFragment", "inv": "validOperands$message", "expression": "'opt and loop fragments may only have one operand'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "StructuralFeatureValue", "inv": "validValueType", "expression": "if self.value <> null then let type : Type = if self.value.oclIsTypeOf(Attribute) then self.value.oclAsType(Attribute).type else if self.value.oclIsTypeOf(Reference) then self.value.oclAsType(Reference).type else self.value.oclAsType(AssociationEnd).assoc.ends->select(end : AssociationEnd | end <> self)->at(1).myClass endif endif in type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType()) else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "StructuralFeatureValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue", "expression": "if self.value.oclIsKindOf(LiteralSpecification) then false else true endif", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "ParameterValueMapping", "inv": "validParameterValue$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType", "expression": "self.parameter.type.oclIsTypeOf(self.ParameterValueMapping.parameter.type.oclType())", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "ParameterValue", "inv": "validValueType$message", "expression": "'Type of value must match the type of the parameter'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound", "expression": "self.upperBound > 0 or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validUpperBound$message", "expression": "'The upperbound must be greater than zero or -1 representing *'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound", "expression": "self.lowerBound >= 0", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validLowerBound$message", "expression": "'The lowerbound must be greater than or equal to zero'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity", "expression": "self.lowerBound <= self.upperBound or self.upperBound = - 1", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Property", "inv": "validMultiplicity$message", "expression": "'The lowerBound must be less than or equal to the upperBound'", "file": "ocl-dataset/dataset/repos/arnobl/kompren/explen/fr.inria.diverse.kompren.explen.xp/src/resources/examples/RAM.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/RomJak/MElab2/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoSelfInheritance", "expression": "self.superclass <> self", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Class", "inv": "ClassNameIsUnique", "expression": "Class.allInstances() -> select(c | c.name = self.name) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Class", "inv": "IdPropertyBoundIsOneToOne", "expression": "(self.properties -> select(p : Property| p.isID = true)) -> forAll(p | p.lowerBound = 1 and p.upperBound = 1)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Property", "inv": "MultiplicityCheck", "expression": "(self.lowerBound = 0 or self.lowerBound = 1) and self.upperBound = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Property", "inv": "NecessaryValues", "expression": "(self.lowerBound <> null) and (self.upperBound <> null) and (self.type <> null) and (self.name <> null)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "NamedType", "inv": "NamedTypeNameIsUnique", "expression": "NamedType.allInstances() -> select(nt | nt.name = self.name) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "NonDerivedClassesHaveOnlyOneKeyProperty", "expression": "(self.classes -> select(c : Class| c.superclass=null)) -> forAll(c | c.properties -> select (p | p.isID = true) -> size() = 1)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "DerivedClassesHaveNoOwnKeyProperty", "expression": "(self.classes -> select(c : Class| c.superclass<>null)) -> forAll(c | c.properties -> select (p | p.isID = true) -> size() = 0)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "AssociationEnd", "inv": "MultiplicityCheckDifference", "expression": "(self.lowerBound <= self.upperBound) or self.upperBound = -1", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "AssociationEnd", "inv": "MultiplicityCheckInitialValues", "expression": "self.lowerBound >= 0 and (self.upperBound >= 1 or self.upperBound = -1)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Association", "inv": "OnlyDifferentClassesAllowedAsEnd", "expression": "self.navigableassociationend.type <> self.nonnavigableassociationend.type", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "EnumerationType", "inv": "SameLiteralNotAllowed", "expression": "self.literal -> forAll(l1, l2 | l1 <> l2 implies l1.name <> l2.name and l1.value <> l2.value)", "file": "ocl-dataset/dataset/repos/RomJak/MElab1/Lab1/model/views.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/RomJak/MElab3/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "City", "inv": "InvariantCodeCityLength", "expression": "(self.code.size() = 5 and self.code.toInteger() > 0 and self.code.toInteger() < 99999)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "City", "inv": "InvariantRegExpCode", "expression": "self.code.matches('^[0-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "City", "inv": "InvariantCityLength", "expression": "(self.city.size() <= 35 and self.city.size() > 0)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Classification", "inv": "InvariantRegExpAge", "expression": "self.age.matches('^[0-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantCodeCountryLength", "expression": "self.isoCode.size() = 3", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantRegExpCountry", "expression": "self.isoCode.matches('^[A-Z]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantCountryLength", "expression": "(self.isoCode.size() <= 55 and self.isoCode.size() >= 3)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantStatusLength", "expression": "self.status.size() = 1", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantRegExpStatus", "expression": "self.status.matches('^[1-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantDescriptionStatusLength", "expression": "self.status.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Theater", "inv": "InvariantAddressLength", "expression": "(self.address.size() <= 55 and self.address.size() >= 5)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Theater", "inv": "InvariantTheterLength", "expression": "(self.theater.size() <= 55 and self.theater.size() >= 5)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Director", "inv": "InvariantFullNameDirectorLength", "expression": "(self.fullName.size() >= 3 and self.fullName.size() <= 55)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantGenresListLength", "expression": "self.genres ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantDirectorsListLength", "expression": "self.directors ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantTitleLength", "expression": "(self.title.size() >= 3 and self.title.size() <= 150)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantSynopsisLength", "expression": "(self.synopsis.size() >= 10 and self.synopsis.size() <= 255)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantDuration", "expression": "(self.duration > 60000)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "AudioFormat", "inv": "InvariantLanguagesListLength", "expression": "self.languages ->size() = 2", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "AudioFormat", "inv": "InvariantDescriptionAudioFormatLength", "expression": "self.description.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantCodeLanguageLength", "expression": "self.isoCode.size() = 3", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantRegExpIsoCodeLanguage", "expression": "self.isoCode.matches('^[A-Z0]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantLanguageNameLength", "expression": "(self.languageName.size() >= 3 and self.languageName.size() <= 55)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "VideoFormat", "inv": "InvariantVideoFormatLength", "expression": "(self.videoFormat.size() >= 3 and self.videoFormat.size() <= 20)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "VideoFormat", "inv": "InvariantDescriptionVideoFormat", "expression": "self.description.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Genre", "inv": "InvariantGenre", "expression": "(self.genre.size() >= 3 and self.genre.size() <= 25)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "Genre", "inv": "InvariantDesciptionGenre", "expression": "self.description.size() < 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/Laboratorios/Laboratorio_2/Lab2_ProfArq/model/Lab2_ProfArq.ecore"}, {"context": "City", "inv": "InvariantCodeCityLength", "expression": "(self.code.size() = 5 and self.code.toInteger() > 0 and self.code.toInteger() < 99999)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "City", "inv": "InvariantRegExpCode", "expression": "self.code.matches('^[0-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "City", "inv": "InvariantCityLength", "expression": "(self.city.size() <= 35 and self.city.size() > 0)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Classification", "inv": "InvariantRegExpAge", "expression": "self.age.matches('^[0-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantCodeCountryLength", "expression": "self.isoCode.size() = 3", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantRegExpCountry", "expression": "self.isoCode.matches('^[A-Z]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Country", "inv": "InvariantCountryLength", "expression": "(self.isoCode.size() <= 55 and self.isoCode.size() >= 3)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantStatusLength", "expression": "self.status.size() = 1", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantRegExpStatus", "expression": "self.status.matches('^[1-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Status", "inv": "InvariantDescriptionStatusLength", "expression": "self.status.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Theater", "inv": "InvariantAddressLength", "expression": "(self.address.size() <= 55 and self.address.size() >= 5)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Theater", "inv": "InvariantTheterLength", "expression": "(self.theater.size() <= 55 and self.theater.size() >= 5)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Theater", "inv": "InariantRoomsSize", "expression": "self.rooms ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Director", "inv": "InvariantFullNameDirectorLength", "expression": "(self.fullName.size() >= 3 and self.fullName.size() <= 55)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantGenresListLength", "expression": "self.genres ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantDirectorsListLength", "expression": "self.directors ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantTitleLength", "expression": "(self.title.size() >= 3 and self.title.size() <= 150)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantSynopsisLength", "expression": "(self.synopsis.size() >= 10 and self.synopsis.size() <= 255)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Film", "inv": "InvariantDuration", "expression": "(self.duration > 60000)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Billboard", "inv": "InvarianFilmNotNull", "expression": "self.film <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Billboard", "inv": "InvarianStatusNotNull", "expression": "self.status <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Billboard", "inv": "InvarianAudioFormatNotNull", "expression": "self.audioFormat <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Billboard", "inv": "InvarianVideoFormatNotNull", "expression": "self.videoFormat <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "AudioFormat", "inv": "InvariantLanguagesListLength", "expression": "self.languages ->size() = 2", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "AudioFormat", "inv": "InvariantDescriptionAudioFormatLength", "expression": "self.description.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantCodeLanguageLength", "expression": "self.isoCode.size() = 3", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantRegExpIsoCodeLanguage", "expression": "self.isoCode.matches('^[A-Z0]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Language", "inv": "InvariantLanguageNameLength", "expression": "(self.languageName.size() >= 3 and self.languageName.size() <= 55)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "VideoFormat", "inv": "InvariantVideoFormatLength", "expression": "(self.videoFormat.size() >= 3 and self.videoFormat.size() <= 20)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "VideoFormat", "inv": "InvariantDescriptionVideoFormat", "expression": "self.description.size() <= 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Genre", "inv": "InvariantGenre", "expression": "(self.genre.size() >= 3 and self.genre.size() <= 25)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Genre", "inv": "InvariantDesciptionGenre", "expression": "self.description.size() < 255", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Show", "inv": "InvariantNotNullRoom", "expression": "self.room <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Show", "inv": "InvariantNotNullBillboard", "expression": "self.posterBoard <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Room", "inv": "InvariantSeastNotEmpty", "expression": "self.seats ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Room", "inv": "InvariantValidNumber", "expression": "self.number.matches('^[1-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Room", "inv": "InvariantSizeNumber", "expression": "(self.number.size() > 0 and self.number.size() < 3)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Room", "inv": "InvariantSizeName", "expression": "(self.name.size() > 5 and self.name.size() < 25)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Seat", "inv": "InvariantValidNumber", "expression": "self.number.matches('^[1-9]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Seat", "inv": "InvariantNumberSize", "expression": "(self.number.size() > 0 and self.number.size() < 4)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Seat", "inv": "InvariantValidRow", "expression": "self.row.matches('^[A-Z]+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Seat", "inv": "InvariantRowSize", "expression": "(self.row.size() > 0 and self.row.size() < 3)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Actor", "inv": "InvariantValidFullName", "expression": "(self.fullName <> null and self.fullName.size() >= 5 and self.fullName.size() <= 150)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Rate", "inv": "InvariantNotNullVideoFormat", "expression": "self.videoType <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Rate", "inv": "InvariantNotNullLocalityType", "expression": "self.localityType <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Rate", "inv": "InvariantValidPrice", "expression": "self.price > 0", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Rate", "inv": "InvariantValidPoints", "expression": "self.points > 0", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantNotNullCard", "expression": "self.card <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantNotNullGender", "expression": "self.gender <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantValidLastNames", "expression": "(self.lastNames <> null and self.lastNames.size() >= 3 and self.lastNames.size() <= 25)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantValidEMail", "expression": "self.email.matches('^[a-zA-Z0-9\\\\+\\\\.\\\\_\\\\%\\\\-\\\\+]{1,256}\\\\@[a-zA-Z0-9][a-zA-Z0-9\\\\-]{0,64}(\\\\.[a-zA-Z0-9][a-zA-Z0-9\\\\-]{0,25})+')", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantValidNumber", "expression": "(self.idNumber.size() > 5 and self.idNumber.size() < 20)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantValidFullName", "expression": "(self.fullName <> null and self.fullName.size() >= 3 and self.fullName.size() <= 25)", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Member", "inv": "InvariantValidPassword", "expression": "(self.password <> null and self.password.size() >= 5 and self.password.size() <= 45 and self.password.matches('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{5,}$+'))", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Card", "inv": "InvariantValidPoints", "expression": "self.points >= 0", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Card", "inv": "InvariantValidIdNumber", "expression": "self.idNum > 0", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Reserve", "inv": "InvariantValidIdNumber", "expression": "self.idNum > 0", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Reserve", "inv": "InvariantNotEmptyChairs", "expression": "self.chairs ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Reserve", "inv": "InvariantNotNullPresentation", "expression": "self.presentation <> null", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Reserve", "inv": "InvariantNotEmptyPrices", "expression": "self.prices ->isEmpty() = false", "file": "ocl-dataset/dataset/repos/anderssongs5/Profundizacion_Arquitectura_Software/RTFs/RTF_1/MDA_OCL/Cinema_ProfArq/model/Cinema_ProfArq.ecore"}, {"context": "Class", "inv": "lowerConstr", "expression": "self.properties -> forAll (p: Property | p.multiplicityLowerBound = 0 or p.multiplicityLowerBound = 1)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "upperConstr", "expression": "self.properties -> forAll (p: Property | p.multiplicityUpperBound = 1)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "idConstr", "expression": "if self.isId->notEmpty() then self.isId.multiplicityLowerBound = 1 and self.isId.multiplicityUpperBound = 1 else true endif", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "idMandatorySuperclass", "expression": "if self.superclass->isEmpty() then self.properties -> includes(self.isId) else self.isId->isEmpty() endif", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "correctType", "expression": "self.properties -> forAll (p: Property | p.type.oclIsTypeOf(DataType) or p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "noSelfSubclass", "expression": "self.subclass->excludes(self)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "noSelfSuperclass", "expression": "self.superclass->excludes(self)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "superNotSubclass", "expression": "self.superclass <> self.subclass", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Enumeration", "inv": "uniqueLiteral", "expression": "self.literals->isUnique(name)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "lowerConstrBegin", "expression": "self.begin.multiplicityLowerBound >= 0", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "upperConstrBegin", "expression": "self.begin.multiplicityUpperBound = -1 or (self.begin.multiplicityLowerBound <= self.begin.multiplicityUpperBound and self.begin.multiplicityUpperBound > 0)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "lowerConstrEnd", "expression": "self.end.multiplicityLowerBound >= 0", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "upperConstrEnd", "expression": "self.end.multiplicityUpperBound = -1 or (self.end.multiplicityLowerBound <= self.end.multiplicityUpperBound and self.end.multiplicityUpperBound > 0)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "correctTypeBegin", "expression": "self.begin.type.oclIsTypeOf(Class)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Association", "inv": "correctTypeEnd", "expression": "self.end.type.oclIsTypeOf(Class)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "uniqueClassNames", "expression": "self.classes->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "uniquedataTypeNames", "expression": "self.dataTypes->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "uniqueEnumerationNames", "expression": "Enumeration.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "DomainModel", "inv": "uniqueAssociationNames", "expression": "Association.allInstances()->isUnique(name)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "ViewModel", "inv": "uniqueConditions", "expression": "Condition.allInstances()->isUnique(conditionID)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "ViewPropertyElement", "inv": "isPropertyMemberOfClass", "expression": "(self -> closure(o: ViewElement | o.oclContainer()) -> select(oclIsTypeOf(ClassOperationView))).oclAsType(ClassOperationView) -> forAll((instance->closure(superclass)).properties->includes(self.propertyRef))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "TextViewElement", "inv": "correctType", "expression": "self.propertyRef.type.oclIsTypeOf(DataType) or self.propertyRef.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "DateTimePickerViewElement", "inv": "isDateThing", "expression": "self.propertyRef.type.oclIsTypeOf(DataType) and (self.propertyRef.type.name = 'Date' or self.propertyRef.type.name = 'Time' or self.propertyRef.type.name = 'DateTime')", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "SelectionViewElement", "inv": "correctType", "expression": "self.propertyRef.type.oclIsTypeOf(DataType) or self.propertyRef.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Column", "inv": "isPropertyMemberOfClass", "expression": "(self -> closure(oclContainer()) -> select(oclIsTypeOf(TableViewElement))).oclAsType(TableViewElement) -> forAll((classRef->closure(superclass)).properties->includes(self.propertyRef))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "CompositeCondition", "inv": "diffConditions", "expression": "self.cond1 <> self.cond2", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "CompositeCondition", "inv": "sameResult", "expression": "(self.cond1.result = self.result and self.cond2.result = self.result)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab1/model/views.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab3/src/at.ac.tuwien.big.views.transformations/metamodel/views.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab2/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "UniqueIdIsContainedOrInherited", "expression": "self.properties -> includes(self.id) or self.superClass.properties -> closure(superClass.properties) -> includes(self.id)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyTypeIsValid", "expression": "self.properties -> forAll(p | p.type.oclIsTypeOf(DataType) xor p.type.oclIsTypeOf(Enumeration))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "ClassPropertyBoundsAreValid", "expression": "self.properties -> forAll(p | p.upperBound = 1 and (p.lowerBound = 0 xor p.lowerBound = 1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "IdBoundsAreValid", "expression": "self.id.upperBound = 1 and self.id.lowerBound = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Class", "inv": "NoCyclicInheritance", "expression": "self.superClass -> closure(superClass) -> excludes(self)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Association", "inv": "AssociationPropertyBoundsAreValid", "expression": "self.associationEnds -> forAll(p | p.lowerBound >= 0 and (p.upperBound <> 0 or p.upperBound >= p.lowerBound or p.upperBound = -1))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneStartViewExistsWithinAViewGroup", "expression": "self.views -> select(v | v.startView = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewGroup", "inv": "OneWelcomeGroupExists", "expression": "ViewGroup.allInstances() -> select(v | v.welcomeViewGroup = true) -> size() = 1", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassIndexView", "inv": "TargetViewOfClassIndexViewLinksIsValid", "expression": "self.link.targetView.class -> includes(self.class) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementsReferToValidClassProperties", "expression": "self.class.properties -> union(self.class -> closure(superClass).properties) -> includesAll(self.elementGroups.viewElements -> selectByKind(PropertyElement).property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "AssociationElementsReferToValidClass", "expression": "self.elementGroups.viewElements -> selectByKind(AssociationElement) -> forAll(a | a.association.associationEnds -> excluding(a.association.navigableEnd).type -> includesAll(self.class -> union(self.class -> closure(superClass))))", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ClassOperationView", "inv": "PropertyElementOfComparisonConditionsIsValid", "expression": "self.elementGroups.viewElements -> includesAll( self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition) -> collect(v:CompositeCondition|v.composedConditions) -> selectByKind(ComparisonCondition).property -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(ComparisonCondition).property) -> union(self.elementGroups.condition -> union(self.elementGroups.viewElements.condition) -> selectByKind(CompositeCondition).composedConditions -> selectByKind(ComparisonCondition).property) -> asSet())", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "ViewElement", "inv": "ElementIdIsUnique", "expression": "ViewElement.allInstances() -> select(e | e.elementID = self.elementID) -> excluding(self) ->isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "AssociationElement", "inv": "TargetViewOfAssociationElementLinksIsValid", "expression": "self.link.targetView.class -> includes(self.association.navigableEnd.type) or self.link -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Table", "inv": "TableColumnRefersToTargetViewClassProperty", "expression": "self.association.navigableEnd.type -> selectByType(Class).properties -> union(self.association.navigableEnd.type -> selectByType(Class) -> closure(superClass).properties) -> includesAll(self.columns.property)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Text", "inv": "PropertyTypeOfTextIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "DateTimePicker", "inv": "PropertyTypeOfDateTimePickerIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) and (self.property.type.name = 'Date' or self.property.type.name = 'Time' or self.property.type.name = 'DateTime' )", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Selection", "inv": "PropertyTypeOfSelectionIsValid", "expression": "self.property.type.oclIsTypeOf(DataType) xor self.property.type.oclIsTypeOf(Enumeration)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "VisibilityCondition", "inv": "ConditionIdIsUnique", "expression": "VisibilityCondition.allInstances() -> select(c | c.conditionID = self.conditionID) -> excluding(self) -> isEmpty()", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "CompositeCondition", "inv": "ComposedConditionTypesAreEqual", "expression": "self.composedConditions -> forAll(c | c.type = self.type)", "file": "ocl-dataset/dataset/repos/blackandcold/ModelEng2015/Lab4/src/at.ac.tuwien.big.views/model/views.ecore"}, {"context": "Clase", "inv": "PadreVSHijo", "expression": "self.Hijo->excludes(self) and self.Padre->excludes(self)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica2/model/Practica2.ecore"}, {"context": "Modelo", "inv": "NombreClaseUnico", "expression": "self.ContieneClase->isUnique(Nombre)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica2/model/Practica2.ecore"}, {"context": "Modelo", "inv": "NoRelacionarMismaClaseMismoNombre", "expression": "self.ContieneRelacion->forAll(r1,r2 | r1<>r2 and r1.Nombre = r2.Nombre implies r1.Origen <> r2.Origen and r1.Origen <> r2.Destino and r1.Destino <> r2.Origen and r1.Destino <> r2.Destino )", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica2/model/Practica2.ecore"}, {"context": "Relacion", "inv": "CardinalidadMinMenorOIgualMax", "expression": "self.Cardinalidad_Min_Destino <= self.Cardinalidad_Max_Destino and self.Cardinalidad_Min_Origen <= self.Cardinalidad_Max_Origen", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica2/model/Practica2.ecore"}, {"context": "Relacion", "inv": "CardinalidadMaxComposicion", "expression": "self.Tipo = 'Composicion' implies self.Cardinalidad_Max_Origen = 1", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica2/model/Practica2.ecore"}, {"context": "Tabla", "inv": "columnasNombreUnico", "expression": "self.Columnas->isUnique(Nombre)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Tabla", "inv": "clavePrimariaUnaColumna", "expression": "self.Columnas->select(v | v.ClavePrimaria=true)->size() = 1", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Esquema", "inv": "tablasNombreUnico", "expression": "self.Tablas->isUnique(Nombre)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Esquema", "inv": "nombreClaveAjenaDistinto", "expression": "self.Relaciones->isUnique(Nombre)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Columna", "inv": "tipoNoNulo", "expression": "self.Tipo.oclIsUndefined() = false", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Columna", "inv": "cpUnicaNonula", "expression": "self.ClavePrimaria = true implies self.Unico = true and self.VNN = true", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "ClaveAjena", "inv": "mismoTipo", "expression": "self.Origen.Tipo = self.Destino.Tipo", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "ClaveAjena", "inv": "destinoCP", "expression": "self.Destino.ClavePrimaria = true", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica4/model/MetaModelo.ecore"}, {"context": "Aplicacion", "inv": "NombreVentanaUnico", "expression": "self.Ventanas->isUnique(Nombre)", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica3/model/Practica3.ecore"}, {"context": "Ventana", "inv": "NumeroMaximoMarcos", "expression": "self.Marcos->size() <= 2", "file": "ocl-dataset/dataset/repos/nidebo/TSA/Practica3/model/Practica3.ecore"}, {"context": "InteractionObject", "inv": "componentCannotBeInteractionSurface", "expression": "isComponent implies not isInteractionSurface", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "InteractionObject", "inv": "cycle", "expression": "not self->closure(hostedBy.target)->includes(self)", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "InteractionObject", "inv": "desconnectedInteractionObject", "expression": "not isInteractionSurface implies not hostedBy->isEmpty()", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "Hosting", "inv": "hostingTheSameInteractionObjectTwice", "expression": "source.hostedBy->forAll(h : Hosting | h <> self implies h.target <> self.target)", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "Implementation", "inv": "ImplementationOnInteractionSurface", "expression": "target.isInteractionSurface", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "InteractionDependency", "inv": "dependenciesOnInteractionSurfaces", "expression": "source.isInteractionSurface and target.isInteractionSurface", "file": "ocl-dataset/dataset/repos/tesorieror/DeUI/deui/models/deui.ecore"}, {"context": "Category", "inv": "IdentityUnique", "expression": "Category.allInstances()->isUnique(scheme + term)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Category", "inv": "SchemeEndsWithSharp", "expression": "scheme.substring(scheme.size(),scheme.size()) = '#'", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Category", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Kind", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Kind", "inv": "CorrectScheme", "expression": "scheme = self.oclContainer().oclAsType(Extension).scheme", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Kind", "inv": "NoCyclicInheritance", "expression": "parent->closure(parent)->excludes(self)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Kind", "inv": "EntityKindIsRootParent", "expression": "self->closure(parent)->exists(k | k.term = 'entity' and k.scheme = 'http://schemas.ogf.org/occi/core#' and k.parent = null)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Kind", "inv": "AttributesNameNotAlreadyDefinedInParent", "expression": "attributes.name->excludesAll(parent->closure(parent).attributes.name)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Action", "inv": "CorrectScheme", "expression": "let category = oclContainer().oclAsType(Category) in scheme = category.scheme.substring(1,category.scheme.size()-1) + '/' + category.term + '/action#'", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Mixin", "inv": "ActionTermUnicity", "expression": "actions->isUnique(term)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Mixin", "inv": "CorrectScheme", "expression": "let ownerScheme = self.oclContainer().oclAsType(Extension).scheme in scheme.substring(1,ownerScheme.size()-1) = ownerScheme.substring(1,ownerScheme.size()-1)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Mixin", "inv": "NoCyclicInheritance", "expression": "depends->closure(depends)->excludes(self)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Mixin", "inv": "AttributesNameNotAlreadyDefinedInDepends", "expression": "attributes.name->excludesAll(depends->closure(depends).attributes.name)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Entity", "inv": "IdUnique", "expression": "Entity.allInstances()->isUnique(id)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Entity", "inv": "AttributesNameUnique", "expression": "attributes->isUnique(name)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Entity", "inv": "KindCompatibleWithOneAppliesOfEachMixin", "expression": "mixins->forAll(m | m.applies->notEmpty() implies m.applies->exists(k | kind->closure(parent)->includes(k)))", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Resource", "inv": "ResourceKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'resource' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Link", "inv": "LinkKindIsInParent", "expression": "kind->closure(parent)->exists(k | k.term = 'link' and k.scheme = 'http://schemas.ogf.org/occi/core#')", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "SchemeUnique", "expression": "Extension.allInstances()->isUnique(scheme)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "KindsSchemeValid", "expression": "kinds->forAll(k | k.scheme = self.scheme)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "MixinsSchemeValid", "expression": "mixins->forAll(m | m.scheme.substring(1,scheme.size()-1) = scheme.substring(1,scheme.size()-1))", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "TermUnicity", "expression": "kinds.term->intersection(mixins.term)->isEmpty()", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "KindParentLocalOrImported", "expression": "kinds->forAll(parent <> null implies let parentExtension = parent.oclContainer() in parentExtension = self or import->includes(parentExtension))", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "MixinDependsLocalOrImported", "expression": "mixins.depends->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Extension", "inv": "MixinAppliesLocalOrImported", "expression": "mixins.applies->forAll(let extension = oclContainer() in extension = self or import->includes(extension))", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Configuration", "inv": "AllResourcesKindsInUse", "expression": "use->includesAll(resources.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Configuration", "inv": "AllResourcesMixinsInUse", "expression": "use->includesAll(resources.mixins.oclContainer())", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksKindsInUse", "expression": "use->includesAll(resources.links.kind.oclContainer())", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksMixinsInUse", "expression": "use->includesAll(resources.links.mixins.oclContainer())", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}, {"context": "Configuration", "inv": "AllResourcesLinksTargetsInConfiguration", "expression": "resources.links.target->forAll(r | r.oclContainer() = self)", "file": "ocl-dataset/dataset/repos/maxleiko/occi-kmf-demo/occi/occi.ecore"}]